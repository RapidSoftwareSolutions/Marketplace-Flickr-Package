{
    "package": "Flickr",
    "tagline": "Flickr API",
    "description": "Flickr - almost certainly the best online photo management and sharing application in the world.",
    "image": "https:\/\/logo.clearbit.com\/www.flickr.com",
    "repo": "https:\/\/github.com\/RapidSoftwareSolutions\/Marketplace-Flickr-Package",
    "keywords": [
        "API",
        "Photo",
        "Video",
        "Community",
        "Albums",
        "Camera"
    ],
    "accounts": {
        "domain": "www.flickr.com",
        "credentials": [
            "apiKey",
            "apiSecret"
        ]
    },
    "steps": [
        "Register on the www.flickr.com",
        "Create flickr application in console",
        "After creation app, you will receive apiKey and apiSecret",
        "For getting oauthToken and oauthSecret use getRequestToken endpoint",
        "After that,you need to get permission to use your application",
        "Use authorize url (https://www.flickr.com/services/oauth/authorize?oauth_token=xxxx)",
        "After authorization ,use getAccessToken for getting accessToken and accessSecret"
    ],
    "blocks": [
        {
            "name": "getRequestToken",
            "description": "Get request token.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "oauthCallback",
                    "type": "String",
                    "info": "The value you specify here will be used as the URL a user is redirected to should they approve your application\u2019s access to their account.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_callback"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/www.flickr.com\/services\/oauth\/request_token",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "oauth_callback",
                            "api_secret",
                            "api_key"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getAccessToken",
            "description": "Get access token.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "oauthToken",
                    "type": "String",
                    "info": "oauthToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "oauthSecret",
                    "type": "String",
                    "info": "oauthSecret from the getRequestToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "oauthVerifier",
                    "type": "String",
                    "info": "oauthVerifier from the getRequestToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_verifier"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/www.flickr.com\/services\/oauth\/access_token",
                "method": "get",
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "oauth_token",
                            "oauth_secret",
                            "oauth_verifier",
                            "api_secret",
                            "api_key"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "checkToken",
            "description": "Returns the credentials attached to an OAuth authentication token.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "oauthToken",
                    "type": "String",
                    "info": "The OAuth authentication token to check.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.auth.oauth.checkToken",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "format",
                            "method",
                            "api_key",
                            "oauth_token",
                            "page",
                            "nojsoncallback"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getUserComments",
            "description": "Returns a list of recent activity on photos commented on by the calling user. Do not poll this method more than once an hour.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "perPage",
                    "type": "Number",
                    "info": "Number of items to return per page. If this argument is omitted, it defaults to 10. The maximum allowed value is 50.",
                    "required": false,
                    "vendorSchema": {
                        "name": "per_page"
                    }
                },
                {
                    "name": "page",
                    "type": "Number",
                    "info": "The page of results to return. If this argument is omitted, it defaults to 1.",
                    "required": false,
                    "vendorSchema": {
                        "name": "page"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.activity.userComments",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "format",
                            "method",
                            "api_key",
                            "per_page",
                            "page",
                            "nojsoncallback"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getUserPhotos",
            "description": "Returns a list of recent activity on photos belonging to the calling user. Do not poll this method more than once an hour.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "perPage",
                    "type": "Number",
                    "info": "Number of items to return per page. If this argument is omitted, it defaults to 10. The maximum allowed value is 50.",
                    "required": false,
                    "vendorSchema": {
                        "name": "per_page"
                    }
                },
                {
                    "name": "page",
                    "type": "Number",
                    "info": "The page of results to return. If this argument is omitted, it defaults to 1.",
                    "required": false,
                    "vendorSchema": {
                        "name": "page"
                    }
                },
                {
                    "name": "timeframe",
                    "type": "String",
                    "info": "The timeframe in which to return updates for. This can be specified in days ('2d') or hours ('4h'). The default behavoir is to return changes since the beginning of the previous user session.",
                    "required": false,
                    "vendorSchema": {
                        "name": "timeframe"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.activity.userPhotos",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "method",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "api_key",
                            "per_page",
                            "format",
                            "page",
                            "timeframe",
                            "nojsoncallback"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getBlogList",
            "description": "Get a list of configured blogs for the calling user.This method requires authentication with 'read' permission.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "service",
                    "type": "String",
                    "info": "Optionally only return blogs for a given service id. You can get a list of from getBlogServices method.",
                    "required": false,
                    "vendorSchema": {
                        "name": "service"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.blogs.getList",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "api_key",
                            "service",
                            "method",
                            "format",
                            "nojsoncallback"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getBlogServices",
            "description": "Return a list of Flickr supported blogging services.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.blogs.getServices",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "api_key",
                            "method",
                            "format",
                            "nojsoncallback"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "addPhotoToBlog",
            "description": "Get blog post photo.This method requires authentication with 'write' permission.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "blogId",
                    "type": "String",
                    "info": "The id of the blog to post to.",
                    "required": true,
                    "vendorSchema": {
                        "name": "blog_id"
                    }
                },
                {
                    "name": "photoId",
                    "type": "String",
                    "info": "The id of the photo to blog.",
                    "required": true,
                    "vendorSchema": {
                        "name": "photo_id"
                    }
                },
                {
                    "name": "title",
                    "type": "String",
                    "info": "The blog post title.",
                    "required": false,
                    "vendorSchema": {
                        "name": "title"
                    }
                },
                {
                    "name": "description",
                    "type": "String",
                    "info": "The blog post body.",
                    "required": false,
                    "vendorSchema": {
                        "name": "description"
                    }
                },
                {
                    "name": "blogPassword",
                    "type": "String",
                    "info": "The password for the blog (used when the blog does not have a stored password).",
                    "required": false,
                    "vendorSchema": {
                        "name": "blog_password"
                    }
                },
                {
                    "name": "service",
                    "type": "String",
                    "info": "A Flickr supported blogging service. Instead of passing a blog id you can pass a service id and we'll post to the first blog of that service we find.",
                    "required": false,
                    "vendorSchema": {
                        "name": "service"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "post",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.blogs.postPhoto",
                        "format": "json"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "api_key",
                            "method",
                            "format",
                            "blog_id",
                            "photo_id",
                            "title",
                            "description",
                            "blog_password",
                            "service",
                            "nojsoncallback"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getCamerasBrandModels",
            "description": "Retrieve all the models for a given camera brand.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "brand",
                    "type": "String",
                    "info": "The ID of the requested brand (as returned from flickr.cameras.getBrands).",
                    "required": true,
                    "vendorSchema": {
                        "name": "brand"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.cameras.getBrandModels",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "api_key",
                            "method",
                            "brand",
                            "format",
                            "nojsoncallback"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getCamerasBrands",
            "description": "Returns all the brands of cameras that Flickr knows about.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.cameras.getBrands",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "api_key",
                            "method",
                            "format",
                            "nojsoncallback"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getCollectionInfo",
            "description": "Returns information for a single collection. Currently can only be called by the collection owner, this may change.This method requires authentication with 'read' permission.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "collectionId",
                    "type": "String",
                    "info": "The ID of the collection to fetch information for.",
                    "required": true,
                    "vendorSchema": {
                        "name": "collection_id"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.collections.getInfo",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "api_key",
                            "method",
                            "collection_id",
                            "format",
                            "nojsoncallback"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getCollectionsTree",
            "description": "Returns a tree (or sub tree) of collections belonging to a given user.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "collectionId",
                    "type": "String",
                    "info": "The ID of the collection to fetch a tree for, or zero to fetch the root collection. Defaults to zero.",
                    "required": false,
                    "vendorSchema": {
                        "name": "collection_id"
                    }
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "The ID of the account to fetch the collection tree for. Deafults to the calling user.",
                    "required": true,
                    "vendorSchema": {
                        "name": "user_id"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.collections.getTree",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "api_key",
                            "method",
                            "collection_id",
                            "user_id",
                            "format",
                            "nojsoncallback"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getCommonsInstitutions",
            "description": "Retrieves a list of the current Commons institutions.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.commons.getInstitutions",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "api_key",
                            "method",
                            "format",
                            "nojsoncallback"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getContactsList",
            "description": "Get a list of contacts for the calling user.This method requires authentication with 'read' permission.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "filter",
                    "type": "Select",
                    "options": [
                        "friends",
                        "family",
                        "both",
                        "neither"
                    ],
                    "info": "An optional filter of the results.",
                    "required": false,
                    "vendorSchema": {
                        "name": "filter"
                    }
                },
                {
                    "name": "perPage",
                    "type": "Number",
                    "info": "Number of items to return per page. If this argument is omitted, it defaults to 100. The maximum allowed value is 1000.",
                    "required": false,
                    "vendorSchema": {
                        "name": "per_page"
                    }
                },
                {
                    "name": "page",
                    "type": "Number",
                    "info": "The page of results to return. If this argument is omitted, it defaults to 1.",
                    "required": false,
                    "vendorSchema": {
                        "name": "page"
                    }
                },
                {
                    "name": "sort",
                    "type": "Select",
                    "options": [
                        "name",
                        "time"
                    ],
                    "info": "The order in which to sort the returned contacts. Defaults to name.",
                    "required": false,
                    "vendorSchema": {
                        "name": "sort"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.contacts.getList",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "api_key",
                            "method",
                            "filter",
                            "format",
                            "page",
                            "per_page",
                            "sort",
                            "nojsoncallback"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getContactsListRecentlyUploaded",
            "description": "Return a list of contacts for a user who have recently uploaded photos along with the total count of photos uploaded.This method is still considered experimental. We don't plan for it to change or to go away but so long as this notice is present you should write your code accordingly.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "dateLastupload",
                    "type": "DatePicker",
                    "info": "Limits the resultset to contacts that have uploaded photos since this date.",
                    "required": false,
                    "vendorSchema": {
                        "name": "date_lastupload",
                        "format": "toFormat:{unixtime}"
                    }
                },
                {
                    "name": "filter",
                    "type": "Select",
                    "options": [
                        "ff",
                        "all"
                    ],
                    "info": "Limit the result set to all contacts or only those who are friends or family.ff - family and friends,all - all contacts.",
                    "required": false,
                    "vendorSchema": {
                        "name": "filter"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.contacts.getListRecentlyUploaded",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "api_key",
                            "method",
                            "format",
                            "filter",
                            "dateLastupload",
                            "nojsoncallback"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getContactPublicList",
            "description": "Get the contact list for a user.This method does not require authentication.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "The NSID of the user to fetch the contact list for.",
                    "required": true,
                    "vendorSchema": {
                        "name": "user_id"
                    }
                },
                {
                    "name": "perPage",
                    "type": "Number",
                    "info": "Number of items to return per page. If this argument is omitted, it defaults to 10. The maximum allowed value is 50.",
                    "required": false,
                    "vendorSchema": {
                        "name": "per_page"
                    }
                },
                {
                    "name": "page",
                    "type": "Number",
                    "info": "The page of results to return. If this argument is omitted, it defaults to 1.",
                    "required": false,
                    "vendorSchema": {
                        "name": "page"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.contacts.getPublicList",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "api_key",
                            "method",
                            "user_id",
                            "format",
                            "page",
                            "per_page",
                            "nojsoncallback"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getContactsTaggingSuggestions",
            "description": "Get suggestions for tagging people in photos based on the calling user's contacts.This method requires authentication with 'read' permission.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "perPage",
                    "type": "Number",
                    "info": "Number of items to return per page. If this argument is omitted, it defaults to 10. The maximum allowed value is 50.",
                    "required": false,
                    "vendorSchema": {
                        "name": "per_page"
                    }
                },
                {
                    "name": "page",
                    "type": "Number",
                    "info": "The page of results to return. If this argument is omitted, it defaults to 1.",
                    "required": false,
                    "vendorSchema": {
                        "name": "page"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.contacts.getTaggingSuggestions",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "api_key",
                            "method",
                            "page",
                            "format",
                            "per_page",
                            "nojsoncallback"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "addPhotoToFavoritesList",
            "description": "Adds a photo to a user's favorites list.This method requires authentication with 'write' permission.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "photoId",
                    "type": "String",
                    "info": "The id of the photo to add to the user's favorites.",
                    "required": true,
                    "vendorSchema": {
                        "name": "photo_id"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "post",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.favorites.add",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "api_key",
                            "method",
                            "photo_id",
                            "format",
                            "nojsoncallback"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getContextForFavorites",
            "description": "Returns next and previous favorites for a photo in a user's favorites.This method does not require authentication.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "photoId",
                    "type": "String",
                    "info": "The id of the photo to fetch the context for.",
                    "required": true,
                    "vendorSchema": {
                        "name": "photo_id"
                    }
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "The user who counts the photo as a favorite.",
                    "required": true,
                    "vendorSchema": {
                        "name": "user_id"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.favorites.getContext",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "api_key",
                            "method",
                            "photo_id",
                            "format",
                            "user_id",
                            "nojsoncallback"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getFavoritePhotosList",
            "description": "Returns a list of the user's favorite photos. Only photos which the calling user has permission to see are returned.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "The NSID of the user to fetch the favorites list for. If this argument is omitted, the favorites list for the calling user is returned.",
                    "required": true,
                    "vendorSchema": {
                        "name": "user_id"
                    }
                },
                {
                    "name": "minFaveDate",
                    "type": "DatePicker",
                    "info": "Minimum date that a photo was favorited on.",
                    "required": false,
                    "vendorSchema": {
                        "name": "min_fave_date",
                        "format": "toFormat:{unixtime}"
                    }
                },
                {
                    "name": "maxFaveDate",
                    "type": "DatePicker",
                    "info": "Maximum date that a photo was favorited on.",
                    "required": false,
                    "vendorSchema": {
                        "name": "max_fave_date",
                        "format": "toFormat:{unixtime}"
                    }
                },
                {
                    "name": "extras",
                    "type": "List",
                    "structure": {
                        "name": "extraInformation",
                        "type": "Select",
                        "options": [
                            "description",
                            "license",
                            "date_upload",
                            "date_taken",
                            "owner_name",
                            "icon_server",
                            "original_format",
                            "last_update",
                            "geo",
                            "tags",
                            "machine_tags",
                            "o_dims",
                            "views",
                            "media",
                            "path_alias",
                            "url_sq",
                            "url_t",
                            "url_s",
                            "url_q",
                            "url_m",
                            "url_n",
                            "url_z",
                            "url_c",
                            "url_l",
                            "url_o"
                        ],
                        "info": "Single extra name."
                    },
                    "info": "List of extra information to fetch for each returned record.",
                    "required": false,
                    "vendorSchema": {
                        "name": "extras",
                        "format": "toString:{,}"
                    }
                },
                {
                    "name": "perPage",
                    "type": "Number",
                    "info": "Number of items to return per page. If this argument is omitted, it defaults to 10. The maximum allowed value is 50.",
                    "required": false,
                    "vendorSchema": {
                        "name": "per_page"
                    }
                },
                {
                    "name": "page",
                    "type": "Number",
                    "info": "The page of results to return. If this argument is omitted, it defaults to 1.",
                    "required": false,
                    "vendorSchema": {
                        "name": "page"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.favorites.getList",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "api_key",
                            "method",
                            "format",
                            "photo_id",
                            "min_fave_date",
                            "max_fave_date",
                            "extras",
                            "per_page",
                            "page",
                            "user_id",
                            "nojsoncallback"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getFavoritePublicPhotosList",
            "description": "Returns a list of favorite public photos for the given user.This method does not require authentication.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "The NSID of the user to fetch the favorites list for. If this argument is omitted, the favorites list for the calling user is returned.",
                    "required": true,
                    "vendorSchema": {
                        "name": "user_id"
                    }
                },
                {
                    "name": "minFaveDate",
                    "type": "DatePicker",
                    "info": "Minimum date that a photo was favorited on.",
                    "required": false,
                    "vendorSchema": {
                        "name": "min_fave_date"
                    }
                },
                {
                    "name": "maxFaveDate",
                    "type": "DatePicker",
                    "info": "Maximum date that a photo was favorited on.",
                    "required": false,
                    "vendorSchema": {
                        "name": "max_fave_date"
                    }
                },
                {
                    "name": "extras",
                    "type": "List",
                    "structure": {
                        "name": "extraInformation",
                        "type": "Select",
                        "options": [
                            "description",
                            "license",
                            "date_upload",
                            "date_taken",
                            "owner_name",
                            "icon_server",
                            "original_format",
                            "last_update",
                            "geo",
                            "tags",
                            "machine_tags",
                            "o_dims",
                            "views",
                            "media",
                            "path_alias",
                            "url_sq",
                            "url_t",
                            "url_s",
                            "url_q",
                            "url_m",
                            "url_n",
                            "url_z",
                            "url_c",
                            "url_l",
                            "url_o"
                        ],
                        "info": "Single extra name."
                    },
                    "info": "List of extra information to fetch for each returned record.",
                    "required": false,
                    "vendorSchema": {
                        "name": "extras",
                        "format": "toString:{,}"
                    }
                },
                {
                    "name": "perPage",
                    "type": "Number",
                    "info": "Number of items to return per page. If this argument is omitted, it defaults to 10. The maximum allowed value is 50.",
                    "required": false,
                    "vendorSchema": {
                        "name": "per_page"
                    }
                },
                {
                    "name": "page",
                    "type": "Number",
                    "info": "The page of results to return. If this argument is omitted, it defaults to 1.",
                    "required": false,
                    "vendorSchema": {
                        "name": "page"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.favorites.getPublicList",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "api_key",
                            "method",
                            "photo_id",
                            "min_fave_date",
                            "max_fave_date",
                            "extras",
                            "per_page",
                            "page",
                            "user_id",
                            "nojsoncallback",
                            "format"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "removePhotoFromFavoritesList",
            "description": "Removes a photo from a user's favorites list.This method requires authentication with 'write' permission.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "photoId",
                    "type": "String",
                    "info": "The id of the photo to remove from the user's favorites.",
                    "required": true,
                    "vendorSchema": {
                        "name": "photo_id"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "post",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.favorites.remove",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "format",
                            "api_key",
                            "method",
                            "photo_id",
                            "nojsoncallback"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "addPhotoToGallery",
            "description": "Add a photo to a gallery.This method requires authentication with 'write' permission.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "photoId",
                    "type": "String",
                    "info": "The photo ID to add to the gallery.",
                    "required": true,
                    "vendorSchema": {
                        "name": "photo_id"
                    }
                },
                {
                    "name": "galleryId",
                    "type": "String",
                    "info": "The ID of the gallery to add a photo to. ",
                    "required": true,
                    "vendorSchema": {
                        "name": "gallery_id"
                    }
                },
                {
                    "name": "comment",
                    "type": "String",
                    "info": "A short comment or story to accompany the photo.",
                    "required": false,
                    "vendorSchema": {
                        "name": "comment"
                    }
                },
                {
                    "name": "fullResponse",
                    "type": "String",
                    "info": "If specified, return updated details of the gallery the photo was added to.",
                    "required": false,
                    "vendorSchema": {
                        "name": "full_response"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "post",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.galleries.addPhoto",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "api_key",
                            "method",
                            "photo_id",
                            "format",
                            "gallery_id",
                            "comment",
                            "full_response",
                            "nojsoncallback"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "createGallery",
            "description": "Create a new gallery for the calling user.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "title",
                    "type": "String",
                    "info": "The name of the gallery.",
                    "required": true,
                    "vendorSchema": {
                        "name": "title"
                    }
                },
                {
                    "name": "description",
                    "type": "String",
                    "info": "A short description for the gallery.",
                    "required": false,
                    "vendorSchema": {
                        "name": "description"
                    }
                },
                {
                    "name": "primaryPhotoId",
                    "type": "String",
                    "info": "The first photo to add to your gallery.",
                    "required": false,
                    "vendorSchema": {
                        "name": "primary_photo_id"
                    }
                },
                {
                    "name": "fullResult",
                    "type": "String",
                    "info": "Get the result in the same format as galleries.getList.",
                    "required": false,
                    "vendorSchema": {
                        "name": "full_result"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "post",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.galleries.create",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "oauth_token",
                            "format",
                            "oauth_secret",
                            "api_secret",
                            "api_key",
                            "method",
                            "title",
                            "description",
                            "primary_photo_id",
                            "full_result",
                            "nojsoncallback"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "updateGalleryMetadata",
            "description": "Modify the meta-data for a gallery.This method requires authentication with 'write' permission.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "title",
                    "type": "String",
                    "info": "The name of the gallery.",
                    "required": true,
                    "vendorSchema": {
                        "name": "title"
                    }
                },
                {
                    "name": "description",
                    "type": "String",
                    "info": "A short description for the gallery.",
                    "required": false,
                    "vendorSchema": {
                        "name": "description"
                    }
                },
                {
                    "name": "galleryId",
                    "type": "String",
                    "info": "The gallery ID to update.",
                    "required": true,
                    "vendorSchema": {
                        "name": "gallery_id"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "post",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.galleries.editMeta",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "oauth_token",
                            "oauth_secret",
                            "format",
                            "api_secret",
                            "api_key",
                            "method",
                            "title",
                            "description",
                            "gallery_id",
                            "nojsoncallback"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "updateCommentForGalleryPhoto",
            "description": "Edit the comment for a gallery photo.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "comment",
                    "type": "String",
                    "info": "The updated comment the photo.",
                    "required": true,
                    "vendorSchema": {
                        "name": "comment"
                    }
                },
                {
                    "name": "photoId",
                    "type": "String",
                    "info": "The photo ID to add to the gallery.",
                    "required": true,
                    "vendorSchema": {
                        "name": "photo_id"
                    }
                },
                {
                    "name": "galleryId",
                    "type": "String",
                    "info": "The ID of the gallery to add a photo to.",
                    "required": true,
                    "vendorSchema": {
                        "name": "gallery_id"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "post",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.galleries.editPhoto",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "oauth_token",
                            "format",
                            "oauth_secret",
                            "api_secret",
                            "api_key",
                            "method",
                            "photo_id",
                            "comment",
                            "gallery_id",
                            "nojsoncallback"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "updatePhotosInGallery",
            "description": "Modify the photos in a gallery. Use this method to add, remove and re-order photos.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "primaryPhotoId",
                    "type": "String",
                    "info": "The id of the photo to use as the 'primary' photo for the gallery. This id must also be passed along in photo_ids list argument.",
                    "required": true,
                    "vendorSchema": {
                        "name": "primary_photo_id"
                    }
                },
                {
                    "name": "photoIds",
                    "type": "List",
                    "structure": {
                        "type": "String",
                        "name": "photoId",
                        "info": "Single photo id."
                    },
                    "info": "List of photo ids to include in the gallery. They will appear in the set in the order sent. This list must contain the primary photo id. This list of photos replaces the existing list.",
                    "required": true,
                    "vendorSchema": {
                        "name": "photo_ids",
                        "format": "toString:{,}"
                    }
                },
                {
                    "name": "galleryId",
                    "type": "String",
                    "info": "The ID of the gallery to add a photo to.",
                    "required": true,
                    "vendorSchema": {
                        "name": "gallery_id"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "post",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.galleries.editPhotos",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "api_key",
                            "method",
                            "format",
                            "photo_id",
                            "comment",
                            "gallery_id",
                            "nojsoncallback"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getGalleryInfo",
            "description": "Get Gallery info.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "galleryId",
                    "type": "String",
                    "info": "The gallery ID you are requesting information for.",
                    "required": true,
                    "vendorSchema": {
                        "name": "gallery_id"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.galleries.getInfo",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "api_key",
                            "method",
                            "format",
                            "gallery_id",
                            "nojsoncallback"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getGalleryListForPhoto",
            "description": "Return the list of galleries to which a photo has been added. Galleries are returned sorted by date which the photo was added to the gallery.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "photoId",
                    "type": "String",
                    "info": "The ID of the photo to fetch a list of galleries for.",
                    "required": true,
                    "vendorSchema": {
                        "name": "photo_id"
                    }
                },
                {
                    "name": "perPage",
                    "type": "Number",
                    "info": "Number of items to return per page. If this argument is omitted, it defaults to 10. The maximum allowed value is 50.",
                    "required": false,
                    "vendorSchema": {
                        "name": "per_page"
                    }
                },
                {
                    "name": "page",
                    "type": "Number",
                    "info": "The page of results to return. If this argument is omitted, it defaults to 1.",
                    "required": false,
                    "vendorSchema": {
                        "name": "page"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.galleries.getListForPhoto",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "api_key",
                            "method",
                            "format",
                            "photo_id",
                            "per_page",
                            "page",
                            "nojsoncallback"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getListOfPhotosForGallery",
            "description": "Return the list of photos for a gallery.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "galleryId",
                    "type": "String",
                    "info": "The ID of the gallery of photos to return.",
                    "required": true,
                    "vendorSchema": {
                        "name": "gallery_id"
                    }
                },
                {
                    "name": "perPage",
                    "type": "Number",
                    "info": "Number of items to return per page. If this argument is omitted, it defaults to 10. The maximum allowed value is 50.",
                    "required": false,
                    "vendorSchema": {
                        "name": "per_page"
                    }
                },
                {
                    "name": "page",
                    "type": "Number",
                    "info": "The page of results to return. If this argument is omitted, it defaults to 1.",
                    "required": false,
                    "vendorSchema": {
                        "name": "page"
                    }
                },
                {
                    "name": "extras",
                    "type": "List",
                    "structure": {
                        "name": "extraInformation",
                        "type": "Select",
                        "options": [
                            "description",
                            "license",
                            "date_upload",
                            "date_taken",
                            "owner_name",
                            "icon_server",
                            "original_format",
                            "last_update",
                            "geo",
                            "tags",
                            "machine_tags",
                            "o_dims",
                            "views",
                            "media",
                            "path_alias",
                            "url_sq",
                            "url_t",
                            "url_s",
                            "url_q",
                            "url_m",
                            "url_n",
                            "url_z",
                            "url_c",
                            "url_l",
                            "url_o"
                        ],
                        "info": "Single extra name."
                    },
                    "info": "List of extra information to fetch for each returned record.",
                    "required": false,
                    "vendorSchema": {
                        "name": "extras",
                        "format": "toString:{,}"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.galleries.getPhotos",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "api_key",
                            "method",
                            "format",
                            "gallery_id",
                            "extras",
                            "per_page",
                            "page",
                            "nojsoncallback"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "removePhotoFromGallery",
            "description": "Remove a photo from a gallery.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "photoId",
                    "type": "String",
                    "info": "The ID of the photo to remove from the gallery.",
                    "required": true,
                    "vendorSchema": {
                        "name": "photo_id"
                    }
                },
                {
                    "name": "galleryId",
                    "type": "String",
                    "info": "The ID of the gallery to remove a photo from.",
                    "required": true,
                    "vendorSchema": {
                        "name": "gallery_id"
                    }
                },
                {
                    "name": "fullResponse",
                    "type": "String",
                    "info": "If specified, return updated details of the gallery the photo was removed from.",
                    "required": false,
                    "vendorSchema": {
                        "name": "full_response"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "post",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.galleries.removePhoto",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "api_key",
                            "method",
                            "photo_id",
                            "format",
                            "gallery_id",
                            "full_response",
                            "nojsoncallback"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "browseGroup",
            "description": "Browse the group category tree, finding groups and sub-categories.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "catId",
                    "type": "String",
                    "info": "The category id to fetch a list of groups and sub-categories for. If not specified, it defaults to zero, the root of the category tree.",
                    "required": false,
                    "vendorSchema": {
                        "name": "cat_id"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.groups.browse",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "api_key",
                            "method",
                            "format",
                            "catId",
                            "nojsoncallback"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getGroupInfo",
            "description": "Get information about a group.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "groupId",
                    "type": "String",
                    "info": "The NSID of the group to fetch information for.",
                    "required": true,
                    "vendorSchema": {
                        "name": "group_id"
                    }
                },
                {
                    "name": "lang",
                    "type": "Select",
                    "options": [
                        "de-de",
                        "en-us",
                        "es-us",
                        "fr-fr",
                        "fr-fr",
                        "it-it",
                        "ko-kr",
                        "pt-br",
                        "zh-hk"
                    ],
                    "info": "The language of the group name and description to fetch. If the language is not found, the primary language of the group will be returned.",
                    "required": false,
                    "vendorSchema": {
                        "name": "lang"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.groups.getInfo",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "api_key",
                            "method",
                            "groupId",
                            "groupPathAlias",
                            "lang",
                            "nojsoncallback"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getGroupInfoByAlias",
            "description": "Get information about a group by path alias of the group.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "groupPathAlias",
                    "type": "String",
                    "info": "The path alias of the group.",
                    "required": true,
                    "vendorSchema": {
                        "name": "group_path_alias"
                    }
                },
                {
                    "name": "lang",
                    "type": "Select",
                    "options": [
                        "de-de",
                        "en-us",
                        "es-us",
                        "fr-fr",
                        "fr-fr",
                        "it-it",
                        "ko-kr",
                        "pt-br",
                        "zh-hk"
                    ],
                    "info": "The language of the group name and description to fetch. If the language is not found, the primary language of the group will be returned.",
                    "required": false,
                    "vendorSchema": {
                        "name": "lang"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.groups.getInfo",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "api_key",
                            "method",
                            "groupId",
                            "groupPathAlias",
                            "lang",
                            "nojsoncallback"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "joinGroup",
            "description": "Join a public group as a member.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "groupId",
                    "type": "String",
                    "info": "The NSID of the Group in question.",
                    "required": true,
                    "vendorSchema": {
                        "name": "group_id"
                    }
                },
                {
                    "name": "acceptRules",
                    "type": "String",
                    "info": "If the group has rules, they must be displayed to the user prior to joining. ",
                    "required": false,
                    "vendorSchema": {
                        "name": "accept_rules"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "post",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.groups.join",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "api_key",
                            "method",
                            "group_id",
                            "format",
                            "accept_rules",
                            "nojsoncallback"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "createRequestJoinGroup",
            "description": "Request to join a group that is invitation-only.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "groupId",
                    "type": "String",
                    "info": "The NSID of the Group in question.",
                    "required": true,
                    "vendorSchema": {
                        "name": "group_id"
                    }
                },
                {
                    "name": "message",
                    "type": "String",
                    "info": "Message to the administrators.",
                    "required": true,
                    "vendorSchema": {
                        "name": "message"
                    }
                },
                {
                    "name": "acceptRules",
                    "type": "String",
                    "info": "If the group has rules, they must be displayed to the user prior to joining. ",
                    "required": true,
                    "vendorSchema": {
                        "name": "accept_rules"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "post",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.groups.joinRequest",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "api_key",
                            "method",
                            "group_id",
                            "message",
                            "format",
                            "accept_rules",
                            "nojsoncallback"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "leaveGroup",
            "description": "Leave a group.If the user is the only administrator left, and there are other members, the oldest member will be promoted to administrator.If the user is the last person in the group, the group will be deleted.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "groupId",
                    "type": "String",
                    "info": "The NSID of the Group to leave.",
                    "required": true,
                    "vendorSchema": {
                        "name": "group_id"
                    }
                },
                {
                    "name": "deletePhotos",
                    "type": "String",
                    "info": "Delete all photos by this user from the group.",
                    "required": false,
                    "vendorSchema": {
                        "name": "delete_photos"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "post",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.groups.leave",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "api_key",
                            "method",
                            "group_id",
                            "delete_photos",
                            "format",
                            "nojsoncallback"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "searchGroup",
            "description": "Search for groups.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "text",
                    "type": "String",
                    "info": "The text to search for.",
                    "required": true,
                    "vendorSchema": {
                        "name": "text"
                    }
                },
                {
                    "name": "perPage",
                    "type": "Number",
                    "info": "Number of items to return per page. If this argument is omitted, it defaults to 10. The maximum allowed value is 50.",
                    "required": false,
                    "vendorSchema": {
                        "name": "per_page"
                    }
                },
                {
                    "name": "page",
                    "type": "Number",
                    "info": "The page of results to return. If this argument is omitted, it defaults to 1.",
                    "required": false,
                    "vendorSchema": {
                        "name": "page"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.groups.search",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "api_key",
                            "method",
                            "perPage",
                            "text",
                            "format",
                            "page",
                            "nojsoncallback"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "addReplyToGroupDiscussionTopic",
            "description": "Post a new reply to a group discussion topic.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "groupId",
                    "type": "String",
                    "info": "Pass in the group id to where the topic belongs. Can be NSID or group alias. Making this parameter optional for legacy reasons, but it is highly recommended to pass this in to get faster performance.",
                    "required": true,
                    "vendorSchema": {
                        "name": "group_id"
                    }
                },
                {
                    "name": "topicId",
                    "type": "String",
                    "info": "The ID of the topic to post a comment to.",
                    "required": true,
                    "vendorSchema": {
                        "name": "topic_id"
                    }
                },
                {
                    "name": "message",
                    "type": "String",
                    "info": "The message to post to the topic.",
                    "required": true,
                    "vendorSchema": {
                        "name": "message"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "post",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.groups.discuss.replies.add",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "api_key",
                            "method",
                            "group_id",
                            "message",
                            "format",
                            "accept_rules",
                            "nojsoncallback",
                            "topic_id"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "deleteReplyFromGroupDiscussionTopic",
            "description": "Delete a reply from a group topic.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "groupId",
                    "type": "String",
                    "info": "Pass in the group id to where the topic belongs. Can be NSID or group alias. Making this parameter optional for legacy reasons, but it is highly recommended to pass this in to get faster performance.",
                    "required": true,
                    "vendorSchema": {
                        "name": "group_id"
                    }
                },
                {
                    "name": "topicId",
                    "type": "String",
                    "info": "The ID of the topic the post is in.",
                    "required": true,
                    "vendorSchema": {
                        "name": "topic_id"
                    }
                },
                {
                    "name": "replyId",
                    "type": "String",
                    "info": "The ID of the reply to delete.",
                    "required": true,
                    "vendorSchema": {
                        "name": "reply_id"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "post",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.groups.discuss.replies.delete",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "api_key",
                            "method",
                            "group_id",
                            "format",
                            "reply_id",
                            "nojsoncallback",
                            "topic_id"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "editTopicReplay",
            "description": "Edit a topic reply.This method requires authentication with 'write' permission.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "groupId",
                    "type": "String",
                    "info": "Pass in the group id to where the topic belongs. Can be NSID or group alias. Making this parameter optional for legacy reasons, but it is highly recommended to pass this in to get faster performance.",
                    "required": true,
                    "vendorSchema": {
                        "name": "group_id"
                    }
                },
                {
                    "name": "topicId",
                    "type": "String",
                    "info": "The ID of the topic the post is in.",
                    "required": true,
                    "vendorSchema": {
                        "name": "topic_id"
                    }
                },
                {
                    "name": "replyId",
                    "type": "String",
                    "info": "The ID of the reply post to edit.",
                    "required": true,
                    "vendorSchema": {
                        "name": "reply_id"
                    }
                },
                {
                    "name": "message",
                    "type": "String",
                    "info": "The message to edit the post with.",
                    "required": true,
                    "vendorSchema": {
                        "name": "message"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "post",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.groups.discuss.replies.edit",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "api_key",
                            "method",
                            "group_id",
                            "format",
                            "reply_id",
                            "message",
                            "nojsoncallback",
                            "topic_id"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getGroupTopicReplyInfo",
            "description": "Get information on a group topic reply.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "groupId",
                    "type": "String",
                    "info": "Pass in the group id to where the topic belongs. Can be NSID or group alias. Making this parameter optional for legacy reasons, but it is highly recommended to pass this in to get faster performance.",
                    "required": true,
                    "vendorSchema": {
                        "name": "group_id"
                    }
                },
                {
                    "name": "topicId",
                    "type": "String",
                    "info": "The ID of the topic the post is in.",
                    "required": true,
                    "vendorSchema": {
                        "name": "topic_id"
                    }
                },
                {
                    "name": "replyId",
                    "type": "String",
                    "info": "The ID of the reply to delete.",
                    "required": true,
                    "vendorSchema": {
                        "name": "reply_id"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.groups.discuss.replies.getInfo",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "api_key",
                            "method",
                            "group_id",
                            "topic_id",
                            "format",
                            "reply_id",
                            "nojsoncallback"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getListOfRepliesFromGroup",
            "description": "Get a list of replies from a group discussion topic.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "groupId",
                    "type": "String",
                    "info": "Pass in the group id to where the topic belongs. Can be NSID or group alias. Making this parameter optional for legacy reasons, but it is highly recommended to pass this in to get faster performance.",
                    "required": true,
                    "vendorSchema": {
                        "name": "group_id"
                    }
                },
                {
                    "name": "topicId",
                    "type": "String",
                    "info": "The ID of the topic to fetch replies for.",
                    "required": true,
                    "vendorSchema": {
                        "name": "topic_id"
                    }
                },
                {
                    "name": "perPage",
                    "type": "Number",
                    "info": "Number of items to return per page. If this argument is omitted, it defaults to 10. The maximum allowed value is 50.",
                    "required": false,
                    "vendorSchema": {
                        "name": "per_page"
                    }
                },
                {
                    "name": "page",
                    "type": "Number",
                    "info": "The page of results to return. If this argument is omitted, it defaults to 1.",
                    "required": false,
                    "vendorSchema": {
                        "name": "page"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.groups.discuss.replies.getList",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "api_key",
                            "method",
                            "group_id",
                            "topic_id",
                            "format",
                            "per_page",
                            "page",
                            "nojsoncallback"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "addDiscussionTopicToGroup",
            "description": "Post a new discussion topic to a group.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "groupId",
                    "type": "String",
                    "info": "Pass in the group id to where the topic belongs. Can be NSID or group alias. Making this parameter optional for legacy reasons, but it is highly recommended to pass this in to get faster performance.",
                    "required": true,
                    "vendorSchema": {
                        "name": "group_id"
                    }
                },
                {
                    "name": "subject",
                    "type": "String",
                    "info": "The topic subject.",
                    "required": true,
                    "vendorSchema": {
                        "name": "subject"
                    }
                },
                {
                    "name": "message",
                    "type": "String",
                    "info": "The topic message.",
                    "required": true,
                    "vendorSchema": {
                        "name": "message"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "post",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.groups.discuss.topics.add",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "api_key",
                            "method",
                            "group_id",
                            "format",
                            "subject",
                            "message",
                            "nojsoncallback"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getGroupDiscussionTopicInfo",
            "description": "Get information about a group discussion topic.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "groupId",
                    "type": "String",
                    "info": "Pass in the group id to where the topic belongs. Can be NSID or group alias. Making this parameter optional for legacy reasons, but it is highly recommended to pass this in to get faster performance.",
                    "required": true,
                    "vendorSchema": {
                        "name": "group_id"
                    }
                },
                {
                    "name": "topicId",
                    "type": "String",
                    "info": "The ID of the topic to fetch replies for.",
                    "required": true,
                    "vendorSchema": {
                        "name": "topic_id"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.groups.discuss.topics.getInfo",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "api_key",
                            "method",
                            "group_id",
                            "topic_id",
                            "format",
                            "nojsoncallback"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getListDiscussionTopicsInGroup",
            "description": "Get a list of discussion topics in a group.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "groupId",
                    "type": "String",
                    "info": "Pass in the group id to where the topic belongs. Can be NSID or group alias. Making this parameter optional for legacy reasons, but it is highly recommended to pass this in to get faster performance.",
                    "required": true,
                    "vendorSchema": {
                        "name": "group_id"
                    }
                },
                {
                    "name": "perPage",
                    "type": "Number",
                    "info": "Number of items to return per page. If this argument is omitted, it defaults to 10. The maximum allowed value is 50.",
                    "required": false,
                    "vendorSchema": {
                        "name": "per_page"
                    }
                },
                {
                    "name": "page",
                    "type": "Number",
                    "info": "The page of results to return. If this argument is omitted, it defaults to 1.",
                    "required": false,
                    "vendorSchema": {
                        "name": "page"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.groups.discuss.topics.getList",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "api_key",
                            "method",
                            "group_id",
                            "page",
                            "per_page",
                            "format",
                            "nojsoncallback"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getMembersGroupList",
            "description": "Get a list of the members of a group. The call must be signed on behalf of a Flickr member, and the ability to see the group membership will be determined by the Flickr member's group privileges.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "groupId",
                    "type": "String",
                    "info": "Pass in the group id to where the topic belongs. Can be NSID or group alias. Making this parameter optional for legacy reasons, but it is highly recommended to pass this in to get faster performance.",
                    "required": true,
                    "vendorSchema": {
                        "name": "group_id"
                    }
                },
                {
                    "name": "perPage",
                    "type": "Number",
                    "info": "Number of items to return per page. If this argument is omitted, it defaults to 10. The maximum allowed value is 50.",
                    "required": false,
                    "vendorSchema": {
                        "name": "per_page"
                    }
                },
                {
                    "name": "page",
                    "type": "Number",
                    "info": "The page of results to return. If this argument is omitted, it defaults to 1.",
                    "required": false,
                    "vendorSchema": {
                        "name": "page"
                    }
                },
                {
                    "name": "memberTypes",
                    "type": "List",
                    "structure": {
                        "name": "singleMemberType",
                        "type": "Select",
                        "options": [
                            "2",
                            "3",
                            "4"
                        ],
                        "info": "Single extra name."
                    },
                    "info": "List of member types.By default returns all types.2: member.3: moderator.4: admin",
                    "required": false,
                    "vendorSchema": {
                        "name": "membertypes",
                        "format": "toString:{,}"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.groups.members.getList",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "api_key",
                            "method",
                            "group_id",
                            "page",
                            "per_page",
                            "format",
                            "membertypes",
                            "nojsoncallback"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "addPhotoToGroupPool",
            "description": "Add a photo to a group's pool.This method requires authentication with 'write' permission.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "groupId",
                    "type": "String",
                    "info": "The NSID of the group who's pool the photo is to be added to.",
                    "required": true,
                    "vendorSchema": {
                        "name": "group_id"
                    }
                },
                {
                    "name": "photoId",
                    "type": "String",
                    "info": "The id of the photo to add to the group pool. The photo must belong to the calling user.",
                    "required": true,
                    "vendorSchema": {
                        "name": "photo_id"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "post",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.groups.pools.add",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "api_key",
                            "method",
                            "group_id",
                            "format",
                            "photo_id",
                            "nojsoncallback"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getGroupsPoolsContext",
            "description": "Returns next and previous photos for a photo in a group pool.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "groupId",
                    "type": "String",
                    "info": "The nsid of the group who's pool to fetch the photo's context for.",
                    "required": true,
                    "vendorSchema": {
                        "name": "group_id"
                    }
                },
                {
                    "name": "photoId",
                    "type": "String",
                    "info": "The id of the photo to fetch the context for.",
                    "required": true,
                    "vendorSchema": {
                        "name": "photo_id"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.groups.pools.getContext",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "api_key",
                            "method",
                            "photo_id",
                            "user_id",
                            "nojsoncallback"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getGroupsPoolsList",
            "description": "Returns a list of groups to which you can add photos.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "perPage",
                    "type": "Number",
                    "info": "Number of items to return per page. If this argument is omitted, it defaults to 10. The maximum allowed value is 50.",
                    "required": false,
                    "vendorSchema": {
                        "name": "per_page"
                    }
                },
                {
                    "name": "page",
                    "type": "Number",
                    "info": "The page of results to return. If this argument is omitted, it defaults to 1.",
                    "required": false,
                    "vendorSchema": {
                        "name": "page"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.groups.pools.getGroups",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "api_secret",
                            "oauth_token",
                            "oauth_secret",
                            "api_key",
                            "method",
                            "page",
                            "per_page",
                            "format",
                            "nojsoncallback"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getGroupsPoolsPhoto",
            "description": "Returns a list of pool photos for a given group, based on the permissions of the group and the user logged in (if any).",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "groupId",
                    "type": "String",
                    "info": "The id of the group who's pool you which to get the photo list for.",
                    "required": true,
                    "vendorSchema": {
                        "name": "group_id"
                    }
                },
                {
                    "name": "tags",
                    "type": "String",
                    "info": "A tag to filter the pool with. At the moment only one tag at a time is supported.",
                    "required": false,
                    "vendorSchema": {
                        "name": "tags"
                    }
                },
                {
                    "name": "user_id",
                    "type": "String",
                    "info": "The nsid of a user. Specifiying this parameter will retrieve for you only those photos that the user has contributed to the group pool.",
                    "required": false,
                    "vendorSchema": {
                        "name": "user_id"
                    }
                },
                {
                    "name": "extras",
                    "type": "List",
                    "structure": {
                        "name": "extraInformation",
                        "type": "Select",
                        "options": [
                            "description",
                            "license",
                            "date_upload",
                            "date_taken",
                            "owner_name",
                            "icon_server",
                            "original_format",
                            "last_update",
                            "geo",
                            "tags",
                            "machine_tags",
                            "o_dims",
                            "views",
                            "media",
                            "path_alias",
                            "url_sq",
                            "url_t",
                            "url_s",
                            "url_q",
                            "url_m",
                            "url_n",
                            "url_z",
                            "url_c",
                            "url_l",
                            "url_o"
                        ],
                        "info": "Single extra name."
                    },
                    "info": "List of extra information to fetch for each returned record.",
                    "required": false,
                    "vendorSchema": {
                        "name": "extras",
                        "format": "toString:{,}"
                    }
                },
                {
                    "name": "perPage",
                    "type": "Number",
                    "info": "Number of items to return per page. If this argument is omitted, it defaults to 10. The maximum allowed value is 50.",
                    "required": false,
                    "vendorSchema": {
                        "name": "per_page"
                    }
                },
                {
                    "name": "page",
                    "type": "Number",
                    "info": "The page of results to return. If this argument is omitted, it defaults to 1.",
                    "required": false,
                    "vendorSchema": {
                        "name": "page"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.groups.pools.getPhotos",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "api_key",
                            "method",
                            "group_id",
                            "user_id",
                            "tags",
                            "extras",
                            "per_page",
                            "page",
                            "nojsoncallback"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "deletePhotoFromGroupPool",
            "description": "Remove a photo from a group pool.This method requires authentication with 'write' permission.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "groupId",
                    "type": "String",
                    "info": "The id of the photo to remove from the group pool. The photo must either be owned by the calling user of the calling user must be an administrator of the group. ",
                    "required": true,
                    "vendorSchema": {
                        "name": "group_id"
                    }
                },
                {
                    "name": "photoId",
                    "type": "String",
                    "info": "The NSID of the group who's pool the photo is to removed from.",
                    "required": true,
                    "vendorSchema": {
                        "name": "photo_id"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "post",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.groups.pools.remove",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "api_key",
                            "method",
                            "group_id",
                            "format",
                            "photo_id",
                            "nojsoncallback"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getInterestingPhotosByDate",
            "description": "Returns the list of interesting photos for the most recent day or a user-specified date.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "date",
                    "type": "DatePicker",
                    "info": "A specific date, formatted as YYYY-MM-DD, to return interesting photos for.",
                    "required": false,
                    "vendorSchema": {
                        "name": "date",
                        "format": "toFormat:{Y-m-d}"
                    }
                },
                {
                    "name": "extras",
                    "type": "List",
                    "structure": {
                        "name": "extraInformation",
                        "type": "Select",
                        "options": [
                            "description",
                            "license",
                            "date_upload",
                            "date_taken",
                            "owner_name",
                            "icon_server",
                            "original_format",
                            "last_update",
                            "geo",
                            "tags",
                            "machine_tags",
                            "o_dims",
                            "views",
                            "media",
                            "path_alias",
                            "url_sq",
                            "url_t",
                            "url_s",
                            "url_q",
                            "url_m",
                            "url_n",
                            "url_z",
                            "url_c",
                            "url_l",
                            "url_o"
                        ],
                        "info": "Single extra name."
                    },
                    "info": "List of extra information to fetch for each returned record.",
                    "required": false,
                    "vendorSchema": {
                        "name": "extras",
                        "format": "toString:{,}"
                    }
                },
                {
                    "name": "perPage",
                    "type": "Number",
                    "info": "Number of items to return per page. If this argument is omitted, it defaults to 10. The maximum allowed value is 50.",
                    "required": false,
                    "vendorSchema": {
                        "name": "per_page"
                    }
                },
                {
                    "name": "page",
                    "type": "Number",
                    "info": "The page of results to return. If this argument is omitted, it defaults to 1.",
                    "required": false,
                    "vendorSchema": {
                        "name": "page"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.interestingness.getList",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "api_key",
                            "method",
                            "date",
                            "format",
                            "extras",
                            "per_page",
                            "page",
                            "nojsoncallback"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getMachineTagsNamespaces",
            "description": "Return a list of unique namespaces, optionally limited by a given predicate, in alphabetical order.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "predicate",
                    "type": "String",
                    "info": "Limit the list of namespaces returned to those that have the following predicate.",
                    "required": false,
                    "vendorSchema": {
                        "name": "predicate"
                    }
                },
                {
                    "name": "perPage",
                    "type": "Number",
                    "info": "Number of items to return per page. If this argument is omitted, it defaults to 10. The maximum allowed value is 50.",
                    "required": false,
                    "vendorSchema": {
                        "name": "per_page"
                    }
                },
                {
                    "name": "page",
                    "type": "Number",
                    "info": "The page of results to return. If this argument is omitted, it defaults to 1.",
                    "required": false,
                    "vendorSchema": {
                        "name": "page"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.machinetags.getNamespaces",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "api_key",
                            "method",
                            "predicate",
                            "per_page",
                            "format",
                            "page",
                            "nojsoncallback"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getMachineTagsPairs",
            "description": "Return a list of unique namespace and predicate pairs, optionally limited by predicate or namespace, in alphabetical order.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "namespace",
                    "type": "String",
                    "info": "Limit the list of pairs returned to those that have the following namespace.",
                    "required": false,
                    "vendorSchema": {
                        "name": "namespace"
                    }
                },
                {
                    "name": "predicate",
                    "type": "String",
                    "info": "Limit the list of namespaces returned to those that have the following predicate.",
                    "required": false,
                    "vendorSchema": {
                        "name": "predicate"
                    }
                },
                {
                    "name": "perPage",
                    "type": "Number",
                    "info": "Number of items to return per page. If this argument is omitted, it defaults to 10. The maximum allowed value is 50.",
                    "required": false,
                    "vendorSchema": {
                        "name": "per_page"
                    }
                },
                {
                    "name": "page",
                    "type": "Number",
                    "info": "The page of results to return. If this argument is omitted, it defaults to 1.",
                    "required": false,
                    "vendorSchema": {
                        "name": "page"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.machinetags.getPairs",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "api_key",
                            "method",
                            "namespace",
                            "predicate",
                            "per_page",
                            "format",
                            "page",
                            "nojsoncallback"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getMachineTagsPredicates",
            "description": "Return a list of unique predicates, optionally limited by a given namespace.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "namespace",
                    "type": "String",
                    "info": "Limit the list of predicates returned to those that have the following namespace.",
                    "required": false,
                    "vendorSchema": {
                        "name": "namespace"
                    }
                },
                {
                    "name": "perPage",
                    "type": "Number",
                    "info": "Number of items to return per page. If this argument is omitted, it defaults to 10. The maximum allowed value is 50.",
                    "required": false,
                    "vendorSchema": {
                        "name": "per_page"
                    }
                },
                {
                    "name": "page",
                    "type": "Number",
                    "info": "The page of results to return. If this argument is omitted, it defaults to 1.",
                    "required": false,
                    "vendorSchema": {
                        "name": "page"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.machinetags.getPredicates",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "api_key",
                            "method",
                            "namespace",
                            "per_page",
                            "format",
                            "page",
                            "nojsoncallback"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getMachineTagsRecentValues",
            "description": "Fetch recently used (or created) machine tags values.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "addedSince",
                    "type": "DatePicker",
                    "info": "Only return machine tags values that have been added since this timestamp, in epoch seconds.",
                    "required": false,
                    "vendorSchema": {
                        "name": "added_since"
                    }
                },
                {
                    "name": "namespace",
                    "type": "String",
                    "info": "A namespace that all values should be restricted to.",
                    "required": false,
                    "vendorSchema": {
                        "name": "namespace"
                    }
                },
                {
                    "name": "predicate",
                    "type": "String",
                    "info": "A predicate that all values should be restricted to.",
                    "required": false,
                    "vendorSchema": {
                        "name": "predicate"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.machinetags.getRecentValues",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "api_key",
                            "method",
                            "namespace",
                            "added_since",
                            "format",
                            "predicate",
                            "nojsoncallback"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getMachineTagsValues",
            "description": "Return a list of unique values for a namespace and predicate.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "perPage",
                    "type": "Number",
                    "info": "Number of items to return per page. If this argument is omitted, it defaults to 100. The maximum allowed value is 500.",
                    "required": false,
                    "vendorSchema": {
                        "name": "per_page"
                    }
                },
                {
                    "name": "page",
                    "type": "Number",
                    "info": "The page of results to return. If this argument is omitted, it defaults to 1.",
                    "required": false,
                    "vendorSchema": {
                        "name": "page"
                    }
                },
                {
                    "name": "namespace",
                    "type": "String",
                    "info": "A namespace that all values should be restricted to.",
                    "required": true,
                    "vendorSchema": {
                        "name": "namespace"
                    }
                },
                {
                    "name": "predicate",
                    "type": "String",
                    "info": "A predicate that all values should be restricted to.",
                    "required": true,
                    "vendorSchema": {
                        "name": "predicate"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.machinetags.getValues",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "api_key",
                            "method",
                            "namespace",
                            "page",
                            "per_page",
                            "format",
                            "predicate",
                            "nojsoncallback"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getPandaList",
            "description": "Return a list of Flickr pandas, from whom you can request photos using the flickr.panda.getPhotos API method.More information about the pandas can be found in readme.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.panda.getList",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "api_key",
                            "method",
                            "format",
                            "nojsoncallback"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getPandaPhotos",
            "description": "Ask the Flickr Pandas for a list of recent public (and `safe`) photos. .More information about the pandas can be found in readme.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "pandaName",
                    "type": "Select",
                    "options": [
                        "ling ling",
                        "hsing hsing",
                        "wang wang"
                    ],
                    "info": "The name of the panda to ask for photos from.",
                    "required": true,
                    "vendorSchema": {
                        "name": "panda_name"
                    }
                },
                {
                    "name": "extras",
                    "type": "List",
                    "structure": {
                        "name": "extraInformation",
                        "type": "Select",
                        "options": [
                            "description",
                            "license",
                            "date_upload",
                            "date_taken",
                            "owner_name",
                            "icon_server",
                            "original_format",
                            "last_update",
                            "geo",
                            "tags",
                            "machine_tags",
                            "o_dims",
                            "views",
                            "media",
                            "path_alias",
                            "url_sq",
                            "url_t",
                            "url_s",
                            "url_q",
                            "url_m",
                            "url_n",
                            "url_z",
                            "url_c",
                            "url_l",
                            "url_o"
                        ],
                        "info": "Single extra name."
                    },
                    "info": "List of extra information to fetch for each returned record.",
                    "required": false,
                    "vendorSchema": {
                        "name": "extras",
                        "format": "toString:{,}"
                    }
                },
                {
                    "name": "perPage",
                    "type": "Number",
                    "info": "Number of items to return per page. If this argument is omitted, it defaults to 100. The maximum allowed value is 500.",
                    "required": false,
                    "vendorSchema": {
                        "name": "per_page"
                    }
                },
                {
                    "name": "page",
                    "type": "Number",
                    "info": "The page of results to return. If this argument is omitted, it defaults to 1.",
                    "required": false,
                    "vendorSchema": {
                        "name": "page"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.panda.getList",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "api_key",
                            "method",
                            "format",
                            "nojsoncallback",
                            "page",
                            "per_page",
                            "extras",
                            "panda_name"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getPeopleByEmail",
            "description": "Return a user's NSID, given their email address.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "findEmail",
                    "type": "String",
                    "info": "The email address of the user to find (may be primary or secondary).",
                    "required": true,
                    "vendorSchema": {
                        "name": "find_email"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.people.findByEmail",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "api_key",
                            "method",
                            "format",
                            "nojsoncallback",
                            "find_email"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getPeopleByUsername",
            "description": "Return a user's NSID, given their username.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "username",
                    "type": "String",
                    "info": "The username of the user to lookup.",
                    "required": true,
                    "vendorSchema": {
                        "name": "username"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.people.findByUsername",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "api_key",
                            "method",
                            "format",
                            "nojsoncallback",
                            "username"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getUserGroups",
            "description": "Returns the list of groups a user is a member of.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "The NSID of the user to fetch groups for.",
                    "required": true,
                    "vendorSchema": {
                        "name": "user_id"
                    }
                },
                {
                    "name": "extras",
                    "type": "List",
                    "structure": {
                        "name": "extraInformation",
                        "type": "Select",
                        "options": [
                            "privacy",
                            "throttle",
                            "restrictions"
                        ],
                        "info": "Single extra name."
                    },
                    "info": "List of extra information to fetch for each returned record.",
                    "required": false,
                    "vendorSchema": {
                        "name": "extras",
                        "format": "toString:{,}"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.people.getGroups",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "api_key",
                            "method",
                            "format",
                            "user_id",
                            "extras",
                            "nojsoncallback"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getUserInfo",
            "description": "Get information about a user.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "The NSID of the user to fetch information about.",
                    "required": true,
                    "vendorSchema": {
                        "name": "user_id"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.people.getInfo",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "api_key",
                            "method",
                            "format",
                            "nojsoncallback",
                            "user_id"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getPhotoVideoLimits",
            "description": "Returns the photo and video limits that apply to the calling user account.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.people.getLimits",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "api_key",
                            "method",
                            "format",
                            "nojsoncallback"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getUserPhoto",
            "description": "Return photos from the given user's photostream. Only photos visible to the calling user will be returned.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "The NSID of the user who's photos to return. A value of `me` will return the calling user's photos.",
                    "required": true,
                    "vendorSchema": {
                        "name": "user_id"
                    }
                },
                {
                    "name": "safeSearch",
                    "type": "Select",
                    "options": [
                        "1",
                        "2",
                        "3"
                    ],
                    "info": "Safe search setting.See more in readme.",
                    "required": false,
                    "vendorSchema": {
                        "name": "safe_search"
                    }
                },
                {
                    "name": "minUploadDate",
                    "type": "DatePicker",
                    "info": "Minimum upload date. Photos with an upload date greater than or equal to this value will be returned. ",
                    "required": false,
                    "vendorSchema": {
                        "name": "min_upload_date",
                        "format": "toFormat:{unixtime}"
                    }
                },
                {
                    "name": "maxUploadDate",
                    "type": "DatePicker",
                    "info": "Maximum upload date. Photos with an upload date less than or equal to this value will be returned. ",
                    "required": false,
                    "vendorSchema": {
                        "name": "max_upload_date",
                        "format": "toFormat:{unixtime}"
                    }
                },
                {
                    "name": "minTakenDate",
                    "type": "DatePicker",
                    "info": "Minimum taken date. Photos with an taken date greater than or equal to this value will be returned. ",
                    "required": false,
                    "vendorSchema": {
                        "name": "min_taken_date",
                        "format": "toFormat:{unixtime}"
                    }
                },
                {
                    "name": "maxTakenDate",
                    "type": "DatePicker",
                    "info": "Maximum taken date. Photos with an taken date less than or equal to this value will be returned. ",
                    "required": false,
                    "vendorSchema": {
                        "name": "max_taken_date",
                        "format": "toFormat:{unixtime}"
                    }
                },
                {
                    "name": "contentType",
                    "type": "Select",
                    "options": [
                        "1",
                        "2",
                        "3",
                        "4",
                        "5",
                        "6",
                        "7"
                    ],
                    "info": "Content Type.See more in readme.",
                    "required": false,
                    "vendorSchema": {
                        "name": "content_type"
                    }
                },
                {
                    "name": "privacyFilter",
                    "type": "Select",
                    "options": [
                        "1",
                        "2",
                        "3",
                        "4",
                        "5"
                    ],
                    "info": "Return photos only matching a certain privacy level. This only applies when making an authenticated call to view photos you own.See more in readme.",
                    "required": false,
                    "vendorSchema": {
                        "name": "privacy_filter"
                    }
                },
                {
                    "name": "extras",
                    "type": "List",
                    "structure": {
                        "name": "extraInformation",
                        "type": "Select",
                        "options": [
                            "description",
                            "license",
                            "date_upload",
                            "date_taken",
                            "owner_name",
                            "icon_server",
                            "original_format",
                            "last_update",
                            "geo",
                            "tags",
                            "machine_tags",
                            "o_dims",
                            "views",
                            "media",
                            "path_alias",
                            "url_sq",
                            "url_t",
                            "url_s",
                            "url_q",
                            "url_m",
                            "url_n",
                            "url_z",
                            "url_c",
                            "url_l",
                            "url_o"
                        ],
                        "info": "Single extra name."
                    },
                    "info": "List of extra information to fetch for each returned record.",
                    "required": false,
                    "vendorSchema": {
                        "name": "extras",
                        "format": "toString:{,}"
                    }
                },
                {
                    "name": "perPage",
                    "type": "Number",
                    "info": "Number of items to return per page. If this argument is omitted, it defaults to 100. The maximum allowed value is 500.",
                    "required": false,
                    "vendorSchema": {
                        "name": "per_page"
                    }
                },
                {
                    "name": "page",
                    "type": "Number",
                    "info": "The page of results to return. If this argument is omitted, it defaults to 1.",
                    "required": false,
                    "vendorSchema": {
                        "name": "page"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.people.getPhotos",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "api_key",
                            "method",
                            "format",
                            "nojsoncallback",
                            "page",
                            "per_page",
                            "extras",
                            "privacy_filter",
                            "content_type",
                            "max_taken_date",
                            "min_taken_date",
                            "max_upload_date",
                            "min_upload_date",
                            "safe_search",
                            "user_id"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getParticularMemberPhotos",
            "description": "Returns a list of photos containing a particular Flickr member.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "The NSID of the user who's photos to return. A value of `me` will return the calling user's photos.",
                    "required": true,
                    "vendorSchema": {
                        "name": "user_id"
                    }
                },
                {
                    "name": "ownerId",
                    "type": "String",
                    "info": "An NSID of a Flickr member. This will restrict the list of photos to those taken by that member.",
                    "required": false,
                    "vendorSchema": {
                        "name": "owner_id"
                    }
                },
                {
                    "name": "extras",
                    "type": "List",
                    "structure": {
                        "name": "extraInformation",
                        "type": "Select",
                        "options": [
                            "description",
                            "license",
                            "date_upload",
                            "date_taken",
                            "date_person_added",
                            "owner_name",
                            "icon_server",
                            "original_format",
                            "last_update",
                            "geo",
                            "tags",
                            "machine_tags",
                            "o_dims",
                            "views",
                            "media",
                            "path_alias",
                            "url_sq",
                            "url_t",
                            "url_s",
                            "url_q",
                            "url_m",
                            "url_n",
                            "url_z",
                            "url_c",
                            "url_l",
                            "url_o"
                        ],
                        "info": "Single extra name."
                    },
                    "info": "List of extra information to fetch for each returned record.",
                    "required": false,
                    "vendorSchema": {
                        "name": "extras",
                        "format": "toString:{,}"
                    }
                },
                {
                    "name": "perPage",
                    "type": "Number",
                    "info": "Number of items to return per page. If this argument is omitted, it defaults to 100. The maximum allowed value is 500.",
                    "required": false,
                    "vendorSchema": {
                        "name": "per_page"
                    }
                },
                {
                    "name": "page",
                    "type": "Number",
                    "info": "The page of results to return. If this argument is omitted, it defaults to 1.",
                    "required": false,
                    "vendorSchema": {
                        "name": "page"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.people.getPhotosOf",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "api_key",
                            "method",
                            "format",
                            "nojsoncallback",
                            "page",
                            "per_page",
                            "extras",
                            "owner_id",
                            "user_id"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getUserPublicGroups",
            "description": "Returns the list of public groups a user is a member of.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "The NSID of the user to fetch groups for.",
                    "required": true,
                    "vendorSchema": {
                        "name": "user_id"
                    }
                },
                {
                    "name": "invitationOnly",
                    "type": "String",
                    "info": "Include public groups that require an invitation or administrator approval to join.",
                    "required": false,
                    "vendorSchema": {
                        "name": "invitation_only"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.people.getPublicGroups",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "api_key",
                            "method",
                            "format",
                            "nojsoncallback",
                            "invitation_only",
                            "user_id"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getUserPublicPhotos",
            "description": "Get a list of public photos for the given user.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "The NSID of the user who's photos to return.",
                    "required": true,
                    "vendorSchema": {
                        "name": "user_id"
                    }
                },
                {
                    "name": "safeSearch",
                    "type": "Select",
                    "options": [
                        "1",
                        "2",
                        "3"
                    ],
                    "info": "Safe search setting.See more in readme.",
                    "required": false,
                    "vendorSchema": {
                        "name": "safe_search"
                    }
                },
                {
                    "name": "extras",
                    "type": "List",
                    "structure": {
                        "name": "extraInformation",
                        "type": "Select",
                        "options": [
                            "description",
                            "license",
                            "date_upload",
                            "date_taken",
                            "owner_name",
                            "icon_server",
                            "original_format",
                            "last_update",
                            "geo",
                            "tags",
                            "machine_tags",
                            "o_dims",
                            "views",
                            "media",
                            "path_alias",
                            "url_sq",
                            "url_t",
                            "url_s",
                            "url_q",
                            "url_m",
                            "url_n",
                            "url_z",
                            "url_c",
                            "url_l",
                            "url_o"
                        ],
                        "info": "Single extra name."
                    },
                    "info": "List of extra information to fetch for each returned record.",
                    "required": false,
                    "vendorSchema": {
                        "name": "extras",
                        "format": "toString:{,}"
                    }
                },
                {
                    "name": "perPage",
                    "type": "Number",
                    "info": "Number of items to return per page. If this argument is omitted, it defaults to 100. The maximum allowed value is 500.",
                    "required": false,
                    "vendorSchema": {
                        "name": "per_page"
                    }
                },
                {
                    "name": "page",
                    "type": "Number",
                    "info": "The page of results to return. If this argument is omitted, it defaults to 1.",
                    "required": false,
                    "vendorSchema": {
                        "name": "page"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.people.getPublicPhotos",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "api_key",
                            "method",
                            "format",
                            "nojsoncallback",
                            "safe_search",
                            "user_id",
                            "extras",
                            "page",
                            "per_page"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getUploadStatus",
            "description": "Returns information for the calling user related to photo uploads.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.people.getUploadStatus",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "api_key",
                            "method",
                            "format",
                            "nojsoncallback"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "addTagsToPhoto",
            "description": "Add tags to a photo.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "photoId",
                    "type": "String",
                    "info": "The id of the photo to add tags to.",
                    "required": true,
                    "vendorSchema": {
                        "name": "photo_id"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "tags",
                    "type": "List",
                    "structure": {
                        "name": "tag",
                        "info": "Single tag.",
                        "type": "String"
                    },
                    "info": "The tags to add to the photo.",
                    "required": true,
                    "vendorSchema": {
                        "name": "tags",
                        "format": "toString:{,}"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "post",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.photos.addTags",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "api_key",
                            "method",
                            "format",
                            "nojsoncallback",
                            "tags",
                            "photo_id"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "deletePhoto",
            "description": "Delete a photo from flickr.This method requires authentication with 'delete' permission.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "photoId",
                    "type": "String",
                    "info": "The id of the photo to delete.",
                    "required": true,
                    "vendorSchema": {
                        "name": "photo_id"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "post",
                "vendorFieldsStructure": [
                    {
                        "method": "fflickr.photos.delete",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "api_key",
                            "method",
                            "format",
                            "nojsoncallback",
                            "photo_id"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getAllPhotoContexts",
            "description": "Returns all visible sets and pools the photo belongs to.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "photoId",
                    "type": "String",
                    "info": "The photo to return information for.",
                    "required": true,
                    "vendorSchema": {
                        "name": "photo_id"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.photos.getAllContexts",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "api_key",
                            "method",
                            "format",
                            "nojsoncallback",
                            "photo_id"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getUserContactsPhotos",
            "description": "Fetch a list of recent photos from the calling users' contacts.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "count",
                    "type": "Number",
                    "info": "Number of photos to return. Defaults to 10, maximum 50. This is only used if single_photo is not passed.",
                    "required": false,
                    "vendorSchema": {
                        "name": "count"
                    }
                },
                {
                    "name": "justFriends",
                    "type": "Select",
                    "options": [
                        "true"
                    ],
                    "info": "Set as true to only show photos from friends and family (excluding regular contacts).",
                    "required": false,
                    "vendorSchema": {
                        "name": "just_friends"
                    }
                },
                {
                    "name": "singlePhoto",
                    "type": "String",
                    "info": "Only fetch one photo (the latest) per contact, instead of all photos in chronological order.",
                    "required": false,
                    "vendorSchema": {
                        "name": "single_photo"
                    }
                },
                {
                    "name": "includeSelf",
                    "type": "Select",
                    "options": [
                        "true"
                    ],
                    "info": "Set to 1 to include photos from the calling user.",
                    "required": false,
                    "vendorSchema": {
                        "name": "include_self"
                    }
                },
                {
                    "name": "extras",
                    "type": "List",
                    "structure": {
                        "name": "extraInformation",
                        "type": "Select",
                        "options": [
                            "description",
                            "license",
                            "date_upload",
                            "date_taken",
                            "owner_name",
                            "icon_server",
                            "original_format",
                            "last_update",
                            "geo",
                            "tags",
                            "machine_tags",
                            "o_dims",
                            "views",
                            "media",
                            "path_alias",
                            "url_sq",
                            "url_t",
                            "url_s",
                            "url_q",
                            "url_m",
                            "url_n",
                            "url_z",
                            "url_c",
                            "url_l",
                            "url_o"
                        ],
                        "info": "Single extra name."
                    },
                    "info": "List of extra information to fetch for each returned record.",
                    "required": false,
                    "vendorSchema": {
                        "name": "extras",
                        "format": "toString:{,}"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.photos.getContactsPhotos",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "api_key",
                            "method",
                            "format",
                            "nojsoncallback",
                            "count",
                            "just_friends",
                            "single_photo",
                            "include_self",
                            "extras"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getUserContactsPublicPhotos",
            "description": "Fetch a list of recent public photos from a users' contacts.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "The NSID of the user to fetch photos for.",
                    "required": true,
                    "vendorSchema": {
                        "name": "user_id"
                    }
                },
                {
                    "name": "count",
                    "type": "Number",
                    "info": "Number of photos to return. Defaults to 10, maximum 50. This is only used if single_photo is not passed.",
                    "required": false,
                    "vendorSchema": {
                        "name": "count"
                    }
                },
                {
                    "name": "justFriends",
                    "type": "Select",
                    "options": [
                        "true"
                    ],
                    "info": "Set as true to only show photos from friends and family (excluding regular contacts).",
                    "required": false,
                    "vendorSchema": {
                        "name": "just_friends"
                    }
                },
                {
                    "name": "singlePhoto",
                    "type": "String",
                    "info": "Only fetch one photo (the latest) per contact, instead of all photos in chronological order.",
                    "required": false,
                    "vendorSchema": {
                        "name": "single_photo"
                    }
                },
                {
                    "name": "includeSelf",
                    "type": "Select",
                    "options": [
                        "true"
                    ],
                    "info": "Set to 1 to include photos from the calling user.",
                    "required": false,
                    "vendorSchema": {
                        "name": "include_self"
                    }
                },
                {
                    "name": "extras",
                    "type": "List",
                    "structure": {
                        "name": "extraInformation",
                        "type": "Select",
                        "options": [
                            "description",
                            "license",
                            "date_upload",
                            "date_taken",
                            "owner_name",
                            "icon_server",
                            "original_format",
                            "last_update",
                            "geo",
                            "tags",
                            "machine_tags",
                            "o_dims",
                            "views",
                            "media",
                            "path_alias",
                            "url_sq",
                            "url_t",
                            "url_s",
                            "url_q",
                            "url_m",
                            "url_n",
                            "url_z",
                            "url_c",
                            "url_l",
                            "url_o"
                        ],
                        "info": "Single extra name."
                    },
                    "info": "List of extra information to fetch for each returned record.",
                    "required": false,
                    "vendorSchema": {
                        "name": "extras",
                        "format": "toString:{,}"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.photos.getContactsPublicPhotos",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "api_key",
                            "method",
                            "format",
                            "nojsoncallback",
                            "count",
                            "just_friends",
                            "single_photo",
                            "include_self",
                            "extras",
                            "user_id"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getPhotoStreamContexts",
            "description": "Returns next and previous photos for a photo in a photostream.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "photoId",
                    "type": "String",
                    "info": "The id of the photo to fetch the context for.",
                    "required": true,
                    "vendorSchema": {
                        "name": "photo_id"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.photos.getContext",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "api_key",
                            "method",
                            "format",
                            "nojsoncallback",
                            "photo_id"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getPhotosCountsForDateRanges",
            "description": "Gets a list of photo counts for the given date ranges for the calling user.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "dates",
                    "type": "List",
                    "structure": {
                        "name": "date",
                        "type": "datePicker",
                        "info": "Single date."
                    },
                    "info": "List of dates, denoting the periods to return counts for.They should be specified smallest first.2 dates minimum.",
                    "required": true,
                    "vendorSchema": {
                        "name": "dates",
                        "format": "toString:{,}"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.photos.getCounts",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "api_key",
                            "method",
                            "format",
                            "nojsoncallback",
                            "dates"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getExifTagsForPhoto",
            "description": "Retrieves a list of EXIF\/TIFF\/GPS tags for a given photo. The calling user must have permission to view the photo.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "photoId",
                    "type": "String",
                    "info": "The id of the photo to fetch information for.",
                    "required": true,
                    "vendorSchema": {
                        "name": "photo_id"
                    }
                },
                {
                    "name": "secret",
                    "type": "String",
                    "info": "The secret for the photo. If the correct secret is passed then permissions checking is skipped. This enables the 'sharing' of individual photos by passing around the id and secret.",
                    "required": false,
                    "vendorSchema": {
                        "name": "secret"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.photos.getExif",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "api_key",
                            "method",
                            "format",
                            "nojsoncallback",
                            "photo_id",
                            "secret"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getPeopleByFavoritePhotoId",
            "description": "Returns the list of people who have favorited a given photo.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "photoId",
                    "type": "String",
                    "info": "The ID of the photo to fetch the favoriters list for.",
                    "required": true,
                    "vendorSchema": {
                        "name": "photo_id"
                    }
                },
                {
                    "name": "perPage",
                    "type": "Number",
                    "info": "Number of items to return per page. If this argument is omitted, it defaults to 10. The maximum allowed value is 50.",
                    "required": false,
                    "vendorSchema": {
                        "name": "per_page"
                    }
                },
                {
                    "name": "page",
                    "type": "Number",
                    "info": "The page of results to return. If this argument is omitted, it defaults to 1.",
                    "required": false,
                    "vendorSchema": {
                        "name": "page"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.photos.getFavorites",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "api_key",
                            "method",
                            "format",
                            "nojsoncallback",
                            "photo_id",
                            "per_page",
                            "page"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getPhotoInfo",
            "description": "Get information about a photo. The calling user must have permission to view the photo.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "photoId",
                    "type": "String",
                    "info": "The id of the photo to get information for.",
                    "required": true,
                    "vendorSchema": {
                        "name": "photo_id"
                    }
                },
                {
                    "name": "secret",
                    "type": "String",
                    "info": "The secret for the photo. If the correct secret is passed then permissions checking is skipped. This enables the 'sharing' of individual photos by passing around the id and secret.",
                    "required": false,
                    "vendorSchema": {
                        "name": "secret"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.photos.getInfo",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "api_key",
                            "method",
                            "format",
                            "nojsoncallback",
                            "photo_id",
                            "secret"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getNotInSetPhoto",
            "description": "Returns a list of your photos that are not part of any sets.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "maxUploadDate",
                    "type": "DatePicker",
                    "info": "Maximum upload date. Photos with an upload date less than or equal to this value will be returned.",
                    "required": false,
                    "vendorSchema": {
                        "name": "max_upload_date",
                        "format": "toFormat:{unixtime}"
                    }
                },
                {
                    "name": "minTakenDate",
                    "type": "DatePicker",
                    "info": "Minimum taken date. Photos with an taken date greater than or equal to this value will be returned.",
                    "required": false,
                    "vendorSchema": {
                        "name": "min_taken_date",
                        "format": "toFormat:{unixtime}"
                    }
                },
                {
                    "name": "maxTakenDate",
                    "type": "DatePicker",
                    "info": "Maximum taken date. Photos with an taken date less than or equal to this value will be returned. ",
                    "required": false,
                    "vendorSchema": {
                        "name": "max_taken_date",
                        "format": "toFormat:{unixtime}"
                    }
                },
                {
                    "name": "privacyFilter",
                    "type": "Select",
                    "options": [
                        "1",
                        "2",
                        "3",
                        "4",
                        "5"
                    ],
                    "info": "Return photos only matching a certain privacy level. ",
                    "required": false,
                    "vendorSchema": {
                        "name": "privacy_filter"
                    }
                },
                {
                    "name": "media",
                    "type": "Select",
                    "options": [
                        "all",
                        "photos",
                        "videos"
                    ],
                    "info": "Filter results by media type.All default.",
                    "required": false,
                    "vendorSchema": {
                        "name": "media"
                    }
                },
                {
                    "name": "min_upload_date",
                    "type": "DatePicker",
                    "info": "Minimum upload date. Photos with an upload date greater than or equal to this value will be returned.",
                    "required": false,
                    "vendorSchema": {
                        "name": "min_upload_date",
                        "format": "toFormat:{unixtime}"
                    }
                },
                {
                    "name": "extras",
                    "type": "List",
                    "structure": {
                        "name": "extraInformation",
                        "type": "Select",
                        "options": [
                            "description",
                            "license",
                            "date_upload",
                            "date_taken",
                            "owner_name",
                            "icon_server",
                            "original_format",
                            "last_update",
                            "geo",
                            "tags",
                            "machine_tags",
                            "o_dims",
                            "views",
                            "media",
                            "path_alias",
                            "url_sq",
                            "url_t",
                            "url_s",
                            "url_q",
                            "url_m",
                            "url_n",
                            "url_z",
                            "url_c",
                            "url_l",
                            "url_o"
                        ],
                        "info": "Single extra name."
                    },
                    "info": "List of extra information to fetch for each returned record.",
                    "required": false,
                    "vendorSchema": {
                        "name": "extras",
                        "format": "toString:{,}"
                    }
                },
                {
                    "name": "perPage",
                    "type": "Number",
                    "info": "Number of items to return per page. If this argument is omitted, it defaults to 100. The maximum allowed value is 500.",
                    "required": false,
                    "vendorSchema": {
                        "name": "per_page"
                    }
                },
                {
                    "name": "page",
                    "type": "Number",
                    "info": "The page of results to return. If this argument is omitted, it defaults to 1.",
                    "required": false,
                    "vendorSchema": {
                        "name": "page"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.photos.getNotInSet",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "api_key",
                            "method",
                            "format",
                            "nojsoncallback",
                            "max_upload_date",
                            "min_taken_date",
                            "max_taken_date",
                            "privacy_filter",
                            "media",
                            "min_upload_date",
                            "extras",
                            "per_page",
                            "page"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getPermissionsForPhoto",
            "description": "Get permissions for a photo.This method requires authentication with 'read' permission.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "photoId",
                    "type": "String",
                    "info": "The id of the photo to get permissions for.",
                    "required": true,
                    "vendorSchema": {
                        "name": "photo_id"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.photos.getPerms",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "api_key",
                            "method",
                            "format",
                            "nojsoncallback",
                            "photo_id"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getPopularPhotos",
            "description": "Returns a list of popular photos.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "The NSID of the user to get a galleries list for. If none is specified, the calling user is assumed.",
                    "required": true,
                    "vendorSchema": {
                        "name": "user_id"
                    }
                },
                {
                    "name": "sort",
                    "type": "Select",
                    "options": [
                        "faves",
                        "views",
                        "comments",
                        "interesting"
                    ],
                    "info": "The sort order.Deafults to interesting.",
                    "required": false,
                    "vendorSchema": {
                        "name": "sort"
                    }
                },
                {
                    "name": "extras",
                    "type": "List",
                    "structure": {
                        "name": "extraInformation",
                        "type": "Select",
                        "options": [
                            "description",
                            "license",
                            "date_upload",
                            "date_taken",
                            "owner_name",
                            "icon_server",
                            "original_format",
                            "last_update",
                            "geo",
                            "tags",
                            "machine_tags",
                            "o_dims",
                            "views",
                            "media",
                            "path_alias",
                            "url_sq",
                            "url_t",
                            "url_s",
                            "url_q",
                            "url_m",
                            "url_n",
                            "url_z",
                            "url_c",
                            "url_l",
                            "url_o"
                        ],
                        "info": "Single extra name."
                    },
                    "info": "List of extra information to fetch for each returned record.",
                    "required": false,
                    "vendorSchema": {
                        "name": "extras",
                        "format": "toString:{,}"
                    }
                },
                {
                    "name": "perPage",
                    "type": "Number",
                    "info": "Number of items to return per page. If this argument is omitted, it defaults to 100. The maximum allowed value is 500.",
                    "required": false,
                    "vendorSchema": {
                        "name": "per_page"
                    }
                },
                {
                    "name": "page",
                    "type": "Number",
                    "info": "The page of results to return. If this argument is omitted, it defaults to 1.",
                    "required": false,
                    "vendorSchema": {
                        "name": "page"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.photos.getPopular",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "api_key",
                            "method",
                            "format",
                            "sort",
                            "extras",
                            "per_page",
                            "page"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getRecentPhotos",
            "description": "Returns a list of the latest public photos uploaded to flickr.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "extras",
                    "type": "List",
                    "structure": {
                        "name": "extraInformation",
                        "type": "Select",
                        "options": [
                            "description",
                            "license",
                            "date_upload",
                            "date_taken",
                            "owner_name",
                            "icon_server",
                            "original_format",
                            "last_update",
                            "geo",
                            "tags",
                            "machine_tags",
                            "o_dims",
                            "views",
                            "media",
                            "path_alias",
                            "url_sq",
                            "url_t",
                            "url_s",
                            "url_q",
                            "url_m",
                            "url_n",
                            "url_z",
                            "url_c",
                            "url_l",
                            "url_o"
                        ],
                        "info": "Single extra name."
                    },
                    "info": "List of extra information to fetch for each returned record.",
                    "required": false,
                    "vendorSchema": {
                        "name": "extras",
                        "format": "toString:{,}"
                    }
                },
                {
                    "name": "perPage",
                    "type": "Number",
                    "info": "Number of items to return per page. If this argument is omitted, it defaults to 100. The maximum allowed value is 500.",
                    "required": false,
                    "vendorSchema": {
                        "name": "per_page"
                    }
                },
                {
                    "name": "page",
                    "type": "Number",
                    "info": "The page of results to return. If this argument is omitted, it defaults to 1.",
                    "required": false,
                    "vendorSchema": {
                        "name": "page"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.photos.getRecent",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "api_key",
                            "method",
                            "format",
                            "extras",
                            "per_page",
                            "page"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getPhotoSizes",
            "description": "Returns the available sizes for a photo. The calling user must have permission to view the photo.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "photoId",
                    "type": "String",
                    "info": "The id of the photo to fetch size information for.",
                    "required": true,
                    "vendorSchema": {
                        "name": "photo_id"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.photos.getSizes",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "api_key",
                            "method",
                            "format",
                            "photo_id"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getUntaggedPhotos",
            "description": "Returns a list of your photos with no tags.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "minUploadDate",
                    "type": "DatePicker",
                    "info": "Minimum upload date. Photos with an upload date greater than or equal to this value will be returned. ",
                    "required": false,
                    "vendorSchema": {
                        "name": "min_upload_date",
                        "format": "toFormat:{unixtime}"
                    }
                },
                {
                    "name": "maxUploadDate",
                    "type": "DatePicker",
                    "info": "Maximum upload date. Photos with an upload date less than or equal to this value will be returned. ",
                    "required": false,
                    "vendorSchema": {
                        "name": "max_upload_date",
                        "format": "toFormat:{unixtime}"
                    }
                },
                {
                    "name": "minTakenDate",
                    "type": "DatePicker",
                    "info": "Minimum taken date. Photos with an taken date greater than or equal to this value will be returned. ",
                    "required": false,
                    "vendorSchema": {
                        "name": "min_taken_date",
                        "format": "toFormat:{unixtime}"
                    }
                },
                {
                    "name": "maxTakenDate",
                    "type": "DatePicker",
                    "info": "Maximum taken date. Photos with an taken date less than or equal to this value will be returned. ",
                    "required": false,
                    "vendorSchema": {
                        "name": "max_taken_date",
                        "format": "toFormat:{unixtime}"
                    }
                },
                {
                    "name": "privacyFilter",
                    "type": "Select",
                    "options": [
                        "1",
                        "2",
                        "3",
                        "4",
                        "5"
                    ],
                    "info": "Return photos only matching a certain privacy level.",
                    "required": false,
                    "vendorSchema": {
                        "name": "privacy_filter"
                    }
                },
                {
                    "name": "media",
                    "type": "Select",
                    "options": [
                        "all",
                        "photos",
                        "videos"
                    ],
                    "info": "Filter results by media type.All (default).",
                    "required": false,
                    "vendorSchema": {
                        "name": "media"
                    }
                },
                {
                    "name": "extras",
                    "type": "List",
                    "structure": {
                        "name": "extraInformation",
                        "type": "Select",
                        "options": [
                            "description",
                            "license",
                            "date_upload",
                            "date_taken",
                            "owner_name",
                            "icon_server",
                            "original_format",
                            "last_update",
                            "geo",
                            "tags",
                            "machine_tags",
                            "o_dims",
                            "views",
                            "media",
                            "path_alias",
                            "url_sq",
                            "url_t",
                            "url_s",
                            "url_q",
                            "url_m",
                            "url_n",
                            "url_z",
                            "url_c",
                            "url_l",
                            "url_o"
                        ],
                        "info": "Single extra name."
                    },
                    "info": "List of extra information to fetch for each returned record.",
                    "required": false,
                    "vendorSchema": {
                        "name": "extras",
                        "format": "toString:{,}"
                    }
                },
                {
                    "name": "perPage",
                    "type": "Number",
                    "info": "Number of items to return per page. If this argument is omitted, it defaults to 100. The maximum allowed value is 500.",
                    "required": false,
                    "vendorSchema": {
                        "name": "per_page"
                    }
                },
                {
                    "name": "page",
                    "type": "Number",
                    "info": "The page of results to return. If this argument is omitted, it defaults to 1.",
                    "required": false,
                    "vendorSchema": {
                        "name": "page"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.photos.getUntagged",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "api_key",
                            "method",
                            "format",
                            "nojsoncallback",
                            "min_upload_date",
                            "max_upload_date",
                            "min_taken_date",
                            "max_taken_date",
                            "privacy_filter",
                            "media",
                            "extras",
                            "page",
                            "per_page"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getGeoTaggedPhotos",
            "description": "Returns a list of your geo-tagged photos.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "minUploadDate",
                    "type": "DatePicker",
                    "info": "Minimum upload date. Photos with an upload date greater than or equal to this value will be returned. ",
                    "required": false,
                    "vendorSchema": {
                        "name": "min_upload_date",
                        "format": "toFormat:{unixtime}"
                    }
                },
                {
                    "name": "maxUploadDate",
                    "type": "DatePicker",
                    "info": "Maximum upload date. Photos with an upload date less than or equal to this value will be returned. ",
                    "required": false,
                    "vendorSchema": {
                        "name": "max_upload_date",
                        "format": "toFormat:{unixtime}"
                    }
                },
                {
                    "name": "maxTakenDate",
                    "type": "DatePicker",
                    "info": "Maximum taken date. Photos with an taken date less than or equal to this value will be returned. ",
                    "required": false,
                    "vendorSchema": {
                        "name": "max_taken_date",
                        "format": "toFormat:{unixtime}"
                    }
                },
                {
                    "name": "minTakenDate",
                    "type": "DatePicker",
                    "info": "Minimum taken date. Photos with an taken date greater than or equal to this value will be returned. ",
                    "required": false,
                    "vendorSchema": {
                        "name": "min_taken_date",
                        "format": "toFormat:{unixtime}"
                    }
                },
                {
                    "name": "privacyFilter",
                    "type": "Select",
                    "options": [
                        "1",
                        "2",
                        "3",
                        "4",
                        "5"
                    ],
                    "info": "Return photos only matching a certain privacy level.",
                    "required": false,
                    "vendorSchema": {
                        "name": "privacy_filter"
                    }
                },
                {
                    "name": "media",
                    "type": "Select",
                    "options": [
                        "all",
                        "photos",
                        "videos"
                    ],
                    "info": "Filter results by media type.All (default).",
                    "required": false,
                    "vendorSchema": {
                        "name": "media"
                    }
                },
                {
                    "name": "extras",
                    "type": "List",
                    "structure": {
                        "name": "extraInformation",
                        "type": "Select",
                        "options": [
                            "description",
                            "license",
                            "date_upload",
                            "date_taken",
                            "owner_name",
                            "icon_server",
                            "original_format",
                            "last_update",
                            "geo",
                            "tags",
                            "machine_tags",
                            "o_dims",
                            "views",
                            "media",
                            "path_alias",
                            "url_sq",
                            "url_t",
                            "url_s",
                            "url_q",
                            "url_m",
                            "url_n",
                            "url_z",
                            "url_c",
                            "url_l",
                            "url_o"
                        ],
                        "info": "Single extra name."
                    },
                    "info": "List of extra information to fetch for each returned record.",
                    "required": false,
                    "vendorSchema": {
                        "name": "extras",
                        "format": "toString:{,}"
                    }
                },
                {
                    "name": "perPage",
                    "type": "Number",
                    "info": "Number of items to return per page. If this argument is omitted, it defaults to 100. The maximum allowed value is 500.",
                    "required": false,
                    "vendorSchema": {
                        "name": "per_page"
                    }
                },
                {
                    "name": "page",
                    "type": "Number",
                    "info": "The page of results to return. If this argument is omitted, it defaults to 1.",
                    "required": false,
                    "vendorSchema": {
                        "name": "page"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.photos.getWithGeoData",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "api_key",
                            "method",
                            "format",
                            "nojsoncallback",
                            "min_upload_date",
                            "max_upload_date",
                            "min_taken_date",
                            "max_taken_date",
                            "privacy_filter",
                            "media",
                            "extras",
                            "page",
                            "per_page"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getPhotosWithoutGeoData",
            "description": "Returns a list of your photos which haven't been geo-tagged.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "minUploadDate",
                    "type": "DatePicker",
                    "info": "Minimum upload date. Photos with an upload date greater than or equal to this value will be returned. ",
                    "required": false,
                    "vendorSchema": {
                        "name": "min_upload_date",
                        "format": "toFormat:{unixtime}"
                    }
                },
                {
                    "name": "maxUploadDate",
                    "type": "DatePicker",
                    "info": "Maximum upload date. Photos with an upload date less than or equal to this value will be returned. ",
                    "required": false,
                    "vendorSchema": {
                        "name": "max_upload_date",
                        "format": "toFormat:{unixtime}"
                    }
                },
                {
                    "name": "minTakenDate",
                    "type": "DatePicker",
                    "info": "Minimum taken date. Photos with an taken date greater than or equal to this value will be returned. ",
                    "required": false,
                    "vendorSchema": {
                        "name": "min_taken_date",
                        "format": "toFormat:{unixtime}"
                    }
                },
                {
                    "name": "maxTakenDate",
                    "type": "DatePicker",
                    "info": "Maximum taken date. Photos with an taken date less than or equal to this value will be returned. ",
                    "required": false,
                    "vendorSchema": {
                        "name": "max_taken_date",
                        "format": "toFormat:{unixtime}"
                    }
                },
                {
                    "name": "privacyFilter",
                    "type": "Select",
                    "options": [
                        "1",
                        "2",
                        "3",
                        "4",
                        "5"
                    ],
                    "info": "Return photos only matching a certain privacy level.",
                    "required": false,
                    "vendorSchema": {
                        "name": "privacy_filter"
                    }
                },
                {
                    "name": "media",
                    "type": "Select",
                    "options": [
                        "all",
                        "photos",
                        "videos"
                    ],
                    "info": "Filter results by media type.All (default).",
                    "required": false,
                    "vendorSchema": {
                        "name": "media"
                    }
                },
                {
                    "name": "extras",
                    "type": "List",
                    "structure": {
                        "name": "extraInformation",
                        "type": "Select",
                        "options": [
                            "description",
                            "license",
                            "date_upload",
                            "date_taken",
                            "owner_name",
                            "icon_server",
                            "original_format",
                            "last_update",
                            "geo",
                            "tags",
                            "machine_tags",
                            "o_dims",
                            "views",
                            "media",
                            "path_alias",
                            "url_sq",
                            "url_t",
                            "url_s",
                            "url_q",
                            "url_m",
                            "url_n",
                            "url_z",
                            "url_c",
                            "url_l",
                            "url_o"
                        ],
                        "info": "Single extra name."
                    },
                    "info": "List of extra information to fetch for each returned record.",
                    "required": false,
                    "vendorSchema": {
                        "name": "extras",
                        "format": "toString:{,}"
                    }
                },
                {
                    "name": "perPage",
                    "type": "Number",
                    "info": "Number of items to return per page. If this argument is omitted, it defaults to 100. The maximum allowed value is 500.",
                    "required": false,
                    "vendorSchema": {
                        "name": "per_page"
                    }
                },
                {
                    "name": "page",
                    "type": "Number",
                    "info": "The page of results to return. If this argument is omitted, it defaults to 1.",
                    "required": false,
                    "vendorSchema": {
                        "name": "page"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.photos.getWithGeoData",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "api_key",
                            "method",
                            "format",
                            "nojsoncallback",
                            "min_upload_date",
                            "max_upload_date",
                            "min_taken_date",
                            "max_taken_date",
                            "privacy_filter",
                            "media",
                            "extras",
                            "page",
                            "per_page"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getRecentlyUpdatedPhotos",
            "description": "Return a list of your photos that have been recently created or which have been recently modified.Recently modified may mean that the photo's metadata (title, description, tags) may have been changed or a comment has been added (or just modified somehow :-)",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "minDate",
                    "type": "DatePicker",
                    "info": "A Unix timestamp or any English textual datetime description indicating the date from which modifications should be compared.",
                    "required": true,
                    "vendorSchema": {
                        "name": "min_date",
                        "format": "toFormat:{unixtime}"
                    }
                },
                {
                    "name": "extras",
                    "type": "List",
                    "structure": {
                        "name": "extraInformation",
                        "type": "Select",
                        "options": [
                            "description",
                            "license",
                            "date_upload",
                            "date_taken",
                            "owner_name",
                            "icon_server",
                            "original_format",
                            "last_update",
                            "geo",
                            "tags",
                            "machine_tags",
                            "o_dims",
                            "views",
                            "media",
                            "path_alias",
                            "url_sq",
                            "url_t",
                            "url_s",
                            "url_q",
                            "url_m",
                            "url_n",
                            "url_z",
                            "url_c",
                            "url_l",
                            "url_o"
                        ],
                        "info": "Single extra name."
                    },
                    "info": "List of extra information to fetch for each returned record.",
                    "required": false,
                    "vendorSchema": {
                        "name": "extras",
                        "format": "toString:{,}"
                    }
                },
                {
                    "name": "perPage",
                    "type": "Number",
                    "info": "Number of items to return per page. If this argument is omitted, it defaults to 100. The maximum allowed value is 500.",
                    "required": false,
                    "vendorSchema": {
                        "name": "per_page"
                    }
                },
                {
                    "name": "page",
                    "type": "Number",
                    "info": "The page of results to return. If this argument is omitted, it defaults to 1.",
                    "required": false,
                    "vendorSchema": {
                        "name": "page"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.photos.recentlyUpdated",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "api_key",
                            "method",
                            "format",
                            "nojsoncallback",
                            "min_date",
                            "extras",
                            "page",
                            "per_page"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "removeTagFromPhoto",
            "description": "Remove a tag from a photo.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "tagId",
                    "type": "String",
                    "info": "The tag to remove from the photo. This parameter should contain a tag id.",
                    "required": true,
                    "vendorSchema": {
                        "name": "tag_id"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "post",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.photos.removeTag",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "api_key",
                            "method",
                            "format",
                            "nojsoncallback",
                            "tag_id"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "searchPhotos",
            "description": "Return a list of photos matching some criteria. Only photos visible to the calling user will be returned. To return private or semi-private photos, the caller must be authenticated with 'read' permissions, and have permission to view the photos. Unauthenticated calls will only return public photos.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "The NSID of the user who's photo to search. If this parameter isn't passed then everybody's public photos will be searched. A value of `me` will search against the calling user's photos for authenticated calls.",
                    "required": false,
                    "vendorSchema": {
                        "name": "user_id"
                    }
                },
                {
                    "name": "tags",
                    "type": "List",
                    "structure": {
                        "name": "tag",
                        "info": "Single tag.",
                        "type": "String"
                    },
                    "info": "Photos with one or more of the tags listed will be returned.",
                    "required": false,
                    "vendorSchema": {
                        "name": "tags",
                        "format": "toString:{,}"
                    }
                },
                {
                    "name": "tagMode",
                    "type": "Select",
                    "options": [
                        "any",
                        "all"
                    ],
                    "info": "Either 'any' for an OR combination of tags, or 'all' for an AND combination. Defaults to 'any' if not specified.",
                    "required": false,
                    "vendorSchema": {
                        "name": "tag_mode"
                    }
                },
                {
                    "name": "text",
                    "type": "String",
                    "info": "A free text search. Photos who's title, description or tags contain the text will be returned. You can exclude results that match a term by prepending it with a - character.",
                    "required": false,
                    "vendorSchema": {
                        "name": "text"
                    }
                },
                {
                    "name": "minUploadDate",
                    "type": "DatePicker",
                    "info": "Minimum upload date. Photos with an upload date greater than or equal to this value will be returned. ",
                    "required": false,
                    "vendorSchema": {
                        "name": "min_upload_date",
                        "format": "toFormat:{unixtime}"
                    }
                },
                {
                    "name": "maxUploadDate",
                    "type": "DatePicker",
                    "info": "Maximum upload date. Photos with an upload date less than or equal to this value will be returned. ",
                    "required": false,
                    "vendorSchema": {
                        "name": "max_upload_date",
                        "format": "toFormat:{unixtime}"
                    }
                },
                {
                    "name": "minTakenDate",
                    "type": "DatePicker",
                    "info": "Minimum taken date. Photos with an taken date greater than or equal to this value will be returned. ",
                    "required": false,
                    "vendorSchema": {
                        "name": "min_taken_date",
                        "format": "toFormat:{unixtime}"
                    }
                },
                {
                    "name": "maxTakenDate",
                    "type": "DatePicker",
                    "info": "Maximum taken date. Photos with an taken date less than or equal to this value will be returned. ",
                    "required": false,
                    "vendorSchema": {
                        "name": "max_taken_date",
                        "format": "toFormat:{unixtime}"
                    }
                },
                {
                    "name": "license",
                    "type": "List",
                    "structure":{
                        "name":"licenseId",
                        "type":"String",
                        "info":"Single license id."
                    },
                    "info": "The license id for photos (for possible values see the flickr.photos.licenses.getInfo method). Multiple licenses may be comma-separated.",
                    "required": false,
                    "vendorSchema": {
                        "name": "license"
                    }
                },
                {
                    "name": "sort",
                    "type": "Select",
                    "options": [
                        "date-posted-desc",
                        "date-taken-asc",
                        "date-taken-desc",
                        "interestingness-desc",
                        "interestingness-asc",
                        "relevance"
                    ],
                    "info": "The order in which to sort returned photos. Deafults to date-posted-desc (unless you are doing a radial geo query, in which case the default sorting is by ascending distance from the point specified).",
                    "required": false,
                    "vendorSchema": {
                        "name": "sort"
                    }
                },
                {
                    "name": "privacyFilter",
                    "type": "Select",
                    "options": [
                        "1",
                        "2",
                        "3",
                        "4",
                        "5"
                    ],
                    "info": "Return photos only matching a certain privacy level.",
                    "required": false,
                    "vendorSchema": {
                        "name": "privacy_filter"
                    }
                },
                {
                    "name": "bbox",
                    "type": "List",
                    "structure": {
                        "type": "Number",
                        "name": "values",
                        "info": "defining the Bounding Box of the area that will be searched. "
                    },
                    "info": "The 4 values represent the bottom-left corner of the box and the top-right corner, minimum_longitude, minimum_latitude, maximum_longitude, maximum_latitude.See more in readme.",
                    "required": false,
                    "vendorSchema": {
                        "name": "bbox"
                    }
                },
                {
                    "name": "accuracy",
                    "type": "Number",
                    "info": "Recorded accuracy level of the location information. Current range is 1-16.See more in readme.",
                    "required": false,
                    "vendorSchema": {
                        "name": "accuracy"
                    }
                },
                {
                    "name": "safeSearch",
                    "type": "Select",
                    "options": [
                        "1",
                        "2",
                        "3"
                    ],
                    "info": "Safe search setting.See more in readme.",
                    "required": false,
                    "vendorSchema": {
                        "name": "safe_search"
                    }
                },
                {
                    "name": "contentType",
                    "type": "Select",
                    "options": [
                        "1",
                        "2",
                        "3",
                        "4",
                        "5",
                        "6",
                        "7"
                    ],
                    "info": "Content Type.See more in readme.",
                    "required": false,
                    "vendorSchema": {
                        "name": "content_type"
                    }
                },
                {
                    "name": "machineTags",
                    "type": "String",
                    "info": "Aside from passing in a fully formed machine tag.See more in readme.",
                    "required": false,
                    "vendorSchema": {
                        "name": "machine_tags"
                    }
                },
                {
                    "name": "machineTagMode",
                    "type": "Select",
                    "options": [
                        "any",
                        "all"
                    ],
                    "info": "Either 'any' for an OR combination of tags, or 'all' for an AND combination. Defaults to 'any' if not specified.",
                    "required": false,
                    "vendorSchema": {
                        "name": "machine_tag_mode"
                    }
                },
                {
                    "name": "groupId",
                    "type": "String",
                    "info": "The id of a group who's pool to search. If specified, only matching photos posted to the group's pool will be returned.",
                    "required": false,
                    "vendorSchema": {
                        "name": "group_id"
                    }
                },
                {
                    "name": "contacts",
                    "type": "Select",
                    "options": [
                        "all",
                        "ff"
                    ],
                    "info": "Search your contacts. Either 'all' or 'ff' for just friends and family. (Experimental)",
                    "required": false,
                    "vendorSchema": {
                        "name": "contacts"
                    }
                },
                {
                    "name": "woeId",
                    "type": "String",
                    "info": "A 32-bit identifier that uniquely represents spatial entities.See more in readme. ",
                    "required": false,
                    "vendorSchema": {
                        "name": "woe_id"
                    }
                },
                {
                    "name": "placeId",
                    "type": "String",
                    "info": "A Flickr place id. (not used if bbox argument is present).See more in readme. ",
                    "required": false,
                    "vendorSchema": {
                        "name": "place_id"
                    }
                },
                {
                    "name": "media",
                    "type": "Select",
                    "options": [
                        "all",
                        "photos",
                        "videos"
                    ],
                    "info": "Filter results by media type.All (default).",
                    "required": false,
                    "vendorSchema": {
                        "name": "media"
                    }
                },
                {
                    "name": "hasGeo",
                    "type": "String",
                    "info": "Any photo that has been geotagged, or if the value is `0` any photo that has not been geotagged.See more in readme. ",
                    "required": false,
                    "vendorSchema": {
                        "name": "has_geo"
                    }
                },
                {
                    "name": "geoContext",
                    "type": "Select",
                    "options": [
                        "0",
                        "1",
                        "2"
                    ],
                    "info": "Geo context is a numeric value representing the photo's geotagginess beyond latitude and longitude. For example, you may wish to search for photos that were taken `indoors` or `outdoors`. ",
                    "required": false,
                    "vendorSchema": {
                        "name": "geo_context"
                    }
                },
                {
                    "name": "coordinates",
                    "type": "Map",
                    "info": "A valid longitude and latitude in decimal format, for doing radial geo queries. ",
                    "required": false,
                    "vendorSchema": {
                        "name": "coordinates"
                    }
                },
                {
                    "name": "radiusUnits",
                    "type": "Select",
                    "options": [
                        "mi",
                        "km"
                    ],
                    "info": "The unit of measure when doing radial geo queries. Valid options are `mi` (miles) and `km` (kilometers). The default is `km`.",
                    "required": false,
                    "vendorSchema": {
                        "name": "radius_units"
                    }
                },
                {
                    "name": "isCommons",
                    "type": "Select",
                    "options": [
                        "true",
                        "false"
                    ],
                    "info": "Limit the scope of the search to only photos that are part of the Flickr Commons project. Default is false.",
                    "required": false,
                    "vendorSchema": {
                        "name": "is_commons"
                    }
                },
                {
                    "name": "inGallery",
                    "type": "Select",
                    "options": [
                        "true",
                        "false"
                    ],
                    "info": "Limit the scope of the search to only photos that are in a gallery? Default is false, search all photos.",
                    "required": false,
                    "vendorSchema": {
                        "name": "in_gallery"
                    }
                },
                {
                    "name": "isGetty",
                    "type": "Select",
                    "options": [
                        "true",
                        "false"
                    ],
                    "info": "Limit the scope of the search to only photos that are for sale on Getty. Default is false.",
                    "required": false,
                    "vendorSchema": {
                        "name": "is_getty"
                    }
                },
                {
                    "name": "radius",
                    "type": "Number",
                    "info": "A valid radius used for geo queries, greater than zero and less than 20 miles (or 32 kilometers), for use with point-based geo queries. The default value is 5 (km).",
                    "required": false,
                    "vendorSchema": {
                        "name": "radius"
                    }
                },
                {
                    "name": "extras",
                    "type": "List",
                    "structure": {
                        "name": "extraInformation",
                        "type": "Select",
                        "options": [
                            "description",
                            "license",
                            "date_upload",
                            "date_taken",
                            "owner_name",
                            "icon_server",
                            "original_format",
                            "last_update",
                            "geo",
                            "tags",
                            "machine_tags",
                            "o_dims",
                            "views",
                            "media",
                            "path_alias",
                            "url_sq",
                            "url_t",
                            "url_s",
                            "url_q",
                            "url_m",
                            "url_n",
                            "url_z",
                            "url_c",
                            "url_l",
                            "url_o"
                        ],
                        "info": "Single extra name."
                    },
                    "info": "List of extra information to fetch for each returned record.",
                    "required": false,
                    "vendorSchema": {
                        "name": "extras",
                        "format": "toString:{,}"
                    }
                },
                {
                    "name": "perPage",
                    "type": "Number",
                    "info": "Number of items to return per page. If this argument is omitted, it defaults to 100. The maximum allowed value is 500.",
                    "required": false,
                    "vendorSchema": {
                        "name": "per_page"
                    }
                },
                {
                    "name": "page",
                    "type": "Number",
                    "info": "The page of results to return. If this argument is omitted, it defaults to 1.",
                    "required": false,
                    "vendorSchema": {
                        "name": "page"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.photos.search",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "api_key",
                            "method",
                            "format",
                            "nojsoncallback",
                            "min_upload_date",
                            "max_upload_date",
                            "min_taken_date",
                            "max_taken_date",
                            "privacy_filter",
                            "media",
                            "user_id",
                            "tags",
                            "tag_mode",
                            "text",
                            "license",
                            "sort",
                            "privacy_filter",
                            "bbox",
                            "accuracy",
                            "safe_search",
                            "content_type",
                            "machine_tags",
                            "machine_tag_mode",
                            "group_id",
                            "contacts",
                            "woe_id",
                            "place_id",
                            "media",
                            "has_geo",
                            "geo_context",
                            "radius",
                            "radius_units",
                            "is_commons",
                            "in_gallery",
                            "is_getty",
                            "extras",
                            "page",
                            "per_page"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "setContentTypeOfPhoto",
            "description": "Set the content type of a photo.This method requires authentication with 'write' permission.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "photoId",
                    "type": "String",
                    "info": "The id of the photo to set the adultness of.",
                    "required": true,
                    "vendorSchema": {
                        "name": "photo_id"
                    }
                },
                {
                    "name": "contentType",
                    "type": "Select",
                    "options": [
                        "1",
                        "2",
                        "3"
                    ],
                    "info": "The content type of the photo. Must be one of: 1 for Photo, 2 for Screenshot, and 3 for Other.",
                    "required": true,
                    "vendorSchema": {
                        "name": "content_type"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "post",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.photos.setContentType",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "api_key",
                            "method",
                            "format",
                            "nojsoncallback",
                            "content_type",
                            "photo_id"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "setPhotoDates",
            "description": "Set one or both of the dates for a photo.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "photoId",
                    "type": "String",
                    "info": "The id of the photo to edit dates for.",
                    "required": true,
                    "vendorSchema": {
                        "name": "photo_id"
                    }
                },
                {
                    "name": "datePosted",
                    "type": "DatePicker",
                    "info": "The date the photo was uploaded to flickr",
                    "required": false,
                    "vendorSchema": {
                        "name": "date_posted"
                    }
                },
                {
                    "name": "dateTaken",
                    "type": "DatePicker",
                    "info": "The date the photo was taken.",
                    "required": false,
                    "vendorSchema": {
                        "name": "date_taken"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "post",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.photos.setDates",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "api_key",
                            "method",
                            "format",
                            "nojsoncallback",
                            "date_taken_granularity",
                            "photo_id",
                            "date_taken",
                            "date_posted"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "setMetaInformationForPhoto",
            "description": "Set the meta information for a photo.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "photoId",
                    "type": "String",
                    "info": "The id of the photo to set information for.",
                    "required": true,
                    "vendorSchema": {
                        "name": "photo_id"
                    }
                },
                {
                    "name": "title",
                    "type": "String",
                    "info": "The title for the photo. At least one of title or description must be set.",
                    "required": false,
                    "vendorSchema": {
                        "name": "title"
                    }
                },
                {
                    "name": "description",
                    "type": "String",
                    "info": "The description for the photo. At least one of title or description must be set.",
                    "required": false,
                    "vendorSchema": {
                        "name": "description"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "post",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.photos.setMeta",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "api_key",
                            "method",
                            "format",
                            "nojsoncallback",
                            "photo_id",
                            "title",
                            "descriptions"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "setPermissionsForPhoto",
            "description": "Set permissions for a photo.This method requires authentication with 'write' permission.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "photoId",
                    "type": "String",
                    "info": "The id of the photo to set information for.",
                    "required": true,
                    "vendorSchema": {
                        "name": "photo_id"
                    }
                },
                {
                    "name": "isPublic",
                    "type": "Select",
                    "options": [
                        "1",
                        "0"
                    ],
                    "info": "1 to set the photo to public, 0 to set it to private.",
                    "required": false,
                    "vendorSchema": {
                        "name": "is_public"
                    }
                },
                {
                    "name": "isFriend",
                    "type": "Select",
                    "options": [
                        "1",
                        "0"
                    ],
                    "info": "1 to make the photo visible to friends when private, 0 to not.",
                    "required": false,
                    "vendorSchema": {
                        "name": "is_friend"
                    }
                },
                {
                    "name": "permComment",
                    "type": "Select",
                    "options": [
                        "0",
                        "1",
                        "2",
                        "3"
                    ],
                    "info": "Who can add comments to the photo and it's notes.0: nobody 1: friends & family 2: contacts 3: everybody ",
                    "required": false,
                    "vendorSchema": {
                        "name": "perm_comment"
                    }
                },
                {
                    "name": "permAddmeta",
                    "type": "Select",
                    "options": [
                        "0",
                        "1",
                        "2",
                        "3"
                    ],
                    "info": "who can add notes and tags to the photo.0: nobody 1: friends & family 2: contacts 3: everybody ",
                    "required": false,
                    "vendorSchema": {
                        "name": "perm_addmeta"
                    }
                },
                {
                    "name": "isFamily",
                    "type": "Select",
                    "options": [
                        "1",
                        "0"
                    ],
                    "info": "1 to make the photo visible to family when private, 0 to not.",
                    "required": false,
                    "vendorSchema": {
                        "name": "is_family"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "post",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.photos.setPerms",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "api_key",
                            "method",
                            "format",
                            "nojsoncallback",
                            "photo_id",
                            "perm_addmeta",
                            "perm_comment",
                            "is_family",
                            "is_friend",
                            "is_public"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "setSafetyLevelOfPhoto",
            "description": "Set the safety level of a photo.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "photoId",
                    "type": "String",
                    "info": "The id of the photo to set information for.",
                    "required": true,
                    "vendorSchema": {
                        "name": "photo_id"
                    }
                },
                {
                    "name": "safetyLevel",
                    "type": "Select",
                    "options": [
                        "1",
                        "2",
                        "3"
                    ],
                    "info": "The safety level of the photo. Must be one of: 1 for Safe, 2 for Moderate, and 3 for Restricted.",
                    "required": false,
                    "vendorSchema": {
                        "name": "safety_level"
                    }
                },
                {
                    "name": "hidden",
                    "type": "Select",
                    "options": [
                        "1",
                        "0"
                    ],
                    "info": "Whether or not to additionally hide the photo from public searches. Must be either 1 for Yes or 0 for No.",
                    "required": false,
                    "vendorSchema": {
                        "name": "hidden"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "post",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.photos.setSafetyLevel",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "api_key",
                            "method",
                            "format",
                            "nojsoncallback",
                            "photo_id",
                            "safety_level",
                            "hidden"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "setTagsForPhoto",
            "description": "Set the tags for a photo.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "photoId",
                    "type": "String",
                    "info": "The id of the photo to set information for.",
                    "required": true,
                    "vendorSchema": {
                        "name": "photo_id"
                    }
                },
                {
                    "name": "tags",
                    "type": "List",
                    "structure": {
                        "name": "tag",
                        "info": "Single tag.",
                        "type": "String"
                    },
                    "info": "All tags for the photo (as a single space-delimited string).",
                    "required": true,
                    "vendorSchema": {
                        "name": "tags",
                        "format": "toString:{ }"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "post",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.photos.setTags",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "api_key",
                            "method",
                            "format",
                            "nojsoncallback",
                            "photo_id",
                            "tags"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "addCommentToPhoto",
            "description": "Add comment to a photo as the currently authenticated user.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "photoId",
                    "type": "String",
                    "info": "The id of the photo to add a comment to.",
                    "required": true,
                    "vendorSchema": {
                        "name": "photo_id"
                    }
                },
                {
                    "name": "commentText",
                    "type": "String",
                    "info": "Text of the comment.",
                    "required": true,
                    "vendorSchema": {
                        "name": "comment_text"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "post",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.photos.comments.addComment",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "api_key",
                            "method",
                            "format",
                            "nojsoncallback",
                            "photo_id",
                            "comment_text"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "deleteCommentFromPhoto",
            "description": "Delete a comment as the currently authenticated user.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "commentId",
                    "type": "String",
                    "info": "The id of the comment to edit.",
                    "required": true,
                    "vendorSchema": {
                        "name": "comment_id"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "post",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.photos.comments.deleteComment",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "api_key",
                            "method",
                            "format",
                            "nojsoncallback",
                            "comment_id"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getPhotoComments",
            "description": "Returns the comments for a photo.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "photoId",
                    "type": "String",
                    "info": "The id of the photo to fetch comments for.",
                    "required": true,
                    "vendorSchema": {
                        "name": "photo_id"
                    }
                },
                {
                    "name": "minCommentDate",
                    "type": "DatePicker",
                    "info": "Minimum date that a a comment was added.",
                    "required": false,
                    "vendorSchema": {
                        "name": "min_comment_date",
                        "format": "toFormat:{unixtime}"
                    }
                },
                {
                    "name": "maxCommentDate",
                    "type": "DatePicker",
                    "info": "Maximum date that a comment was added. ",
                    "required": false,
                    "vendorSchema": {
                        "name": "max_comment_date",
                        "format": "toFormat:{unixtime}"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "post",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.photos.comments.getList",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "api_key",
                            "method",
                            "format",
                            "nojsoncallback",
                            "photo_id",
                            "min_comment_date",
                            "max_comment_date"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "updatePhotoComment",
            "description": "Edit the text of a comment as the currently authenticated user.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "commentId",
                    "type": "String",
                    "info": "The id of the comment to edit.",
                    "required": true,
                    "vendorSchema": {
                        "name": "comment_id"
                    }
                },
                {
                    "name": "commentText",
                    "type": "String",
                    "info": "Update the comment to this text.",
                    "required": true,
                    "vendorSchema": {
                        "name": "comment_text"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "post",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.photos.comments.editComment",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "api_key",
                            "method",
                            "format",
                            "nojsoncallback",
                            "comment_id",
                            "comment_text"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getPhotoCommentsForContacts",
            "description": "Return the list of photos belonging to your contacts that have been commented on recently.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "dateLastcomment",
                    "type": "DatePicker",
                    "info": "Limits the resultset to photos that have been commented on since this date. The date should be in the form of a Unix timestamp.",
                    "required": false,
                    "vendorSchema": {
                        "name": "date_lastcomment",
                        "format": "toFormat:{unixtime}"
                    }
                },
                {
                    "name": "contactsFilter",
                    "type": "List",
                    "structure": {
                        "name": "contactNSID",
                        "type": "String",
                        "info": "Single contactNSID"
                    },
                    "info": "List of contact NSIDs to limit the scope of the query to.",
                    "required": false,
                    "vendorSchema": {
                        "name": "comcontacts_filterment_text",
                        "format": "toString:{,}"
                    }
                },
                {
                    "name": "extras",
                    "type": "List",
                    "structure": {
                        "name": "extraInformation",
                        "type": "Select",
                        "options": [
                            "description",
                            "license",
                            "date_upload",
                            "date_taken",
                            "owner_name",
                            "icon_server",
                            "original_format",
                            "last_update",
                            "geo",
                            "tags",
                            "machine_tags",
                            "o_dims",
                            "views",
                            "media",
                            "path_alias",
                            "url_sq",
                            "url_t",
                            "url_s",
                            "url_q",
                            "url_m",
                            "url_n",
                            "url_z",
                            "url_c",
                            "url_l",
                            "url_o"
                        ],
                        "info": "Single extra name."
                    },
                    "info": "List of extra information to fetch for each returned record.",
                    "required": false,
                    "vendorSchema": {
                        "name": "extras",
                        "format": "toString:{,}"
                    }
                },
                {
                    "name": "perPage",
                    "type": "Number",
                    "info": "Number of items to return per page. If this argument is omitted, it defaults to 100. The maximum allowed value is 500.",
                    "required": false,
                    "vendorSchema": {
                        "name": "per_page"
                    }
                },
                {
                    "name": "page",
                    "type": "Number",
                    "info": "The page of results to return. If this argument is omitted, it defaults to 1.",
                    "required": false,
                    "vendorSchema": {
                        "name": "page"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "post",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.photos.comments.getRecentForContacts",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "api_key",
                            "method",
                            "format",
                            "nojsoncallback",
                            "date_lastcomment",
                            "contacts_filter",
                            "extras",
                            "per_page",
                            "page"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "batchCorrectPhotoLocation",
            "description": "Correct the places hierarchy for all the photos for a user at a given latitude, longitude and accuracy.Batch corrections are processed in a delayed queue so it may take a few minutes before the changes are reflected in a user's photos.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "coordinates",
                    "type": "Map",
                    "info": "The latitude of the photos to be update whose valid range is -90 to 90.The longitude of the photos to be updated whose valid range is -180 to 180. ",
                    "required": true,
                    "vendorSchema": {
                        "name": "coordinates"
                    }
                },
                {
                    "name": "accuracy",
                    "type": "Number",
                    "info": "Recorded accuracy level of the photos to be updated. World level is 1, Country is ~3, Region ~6, City ~11, Street ~16. Current range is 1-16. Defaults to 16 if not specified.",
                    "required": true,
                    "vendorSchema": {
                        "name": "accuracy"
                    }
                },
                {
                    "name": "placeId",
                    "type": "String",
                    "info": "A Flickr Places ID. (While optional, you must pass either a valid Places ID or a WOE ID.)",
                    "required": false,
                    "vendorSchema": {
                        "name": "place_id"
                    }
                },
                {
                    "name": "woeId",
                    "type": "String",
                    "info": "A Where On Earth (WOE) ID. (While optional, you must pass either a valid Places ID or a WOE ID.)",
                    "required": false,
                    "vendorSchema": {
                        "name": "woe_id"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "post",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.photos.geo.batchCorrectLocation",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "api_key",
                            "method",
                            "format",
                            "nojsoncallback",
                            "lat",
                            "lon",
                            "accuracy",
                            "place_id",
                            "woe_id"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "correctPhotoGeoLocation",
            "description": "Correct photo geo location.This method requires authentication with 'write' permission.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "photoId",
                    "type": "String",
                    "info": "The ID of the photo whose WOE location is being corrected.",
                    "required": true,
                    "vendorSchema": {
                        "name": "photo_id"
                    }
                },
                {
                    "name": "placeId",
                    "type": "String",
                    "info": "A Flickr Places ID. (While optional, you must pass either a valid Places ID or a WOE ID.)",
                    "required": false,
                    "vendorSchema": {
                        "name": "place_id"
                    }
                },
                {
                    "name": "woeId",
                    "type": "String",
                    "info": "A Where On Earth (WOE) ID. (While optional, you must pass either a valid Places ID or a WOE ID.)",
                    "required": false,
                    "vendorSchema": {
                        "name": "woe_id"
                    }
                },
                {
                    "name": "foursquareId",
                    "type": "String",
                    "info": "The venue ID for a Foursquare location. (If not passed in with correction, any existing foursquare venue will be removed).",
                    "required": false,
                    "vendorSchema": {
                        "name": "foursquare_id"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "post",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.photos.geo.correctLocation",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "api_key",
                            "method",
                            "format",
                            "nojsoncallback",
                            "foursquare_id",
                            "place_id",
                            "woe_id",
                            "photo_id"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getGeoDataForPhoto",
            "description": "Get the geo data (latitude and longitude and the accuracy level) for a photo.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "photoId",
                    "type": "String",
                    "info": "The id of the photo you want to retrieve location data for.",
                    "required": true,
                    "vendorSchema": {
                        "name": "photo_id"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.photos.geo.getLocation",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "api_key",
                            "method",
                            "format",
                            "nojsoncallback",
                            "extras",
                            "photo_id"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getPermissionsForPhotoGeoData",
            "description": "Get permissions for who may view geo data for a photo.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "photoId",
                    "type": "String",
                    "info": "The id of the photo to get permissions for.",
                    "required": true,
                    "vendorSchema": {
                        "name": "photo_id"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.photos.geo.getPerms",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "api_key",
                            "method",
                            "format",
                            "nojsoncallback",
                            "photo_id"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getPhotosByCoordinates",
            "description": "Return a list of photos for the calling user at a specific latitude, longitude and accuracy.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "coordinates",
                    "type": "Map",
                    "info": "The latitude of the photos to be update whose valid range is -90 to 90.The longitude of the photos to be updated whose valid range is -180 to 180. ",
                    "required": true,
                    "vendorSchema": {
                        "name": "coordinates"
                    }
                },
                {
                    "name": "accuracy",
                    "type": "Number",
                    "info": "Recorded accuracy level of the photos to be updated. World level is 1, Country is ~3, Region ~6, City ~11, Street ~16. Current range is 1-16. Defaults to 16 if not specified.",
                    "required": false,
                    "vendorSchema": {
                        "name": "accuracy"
                    }
                },
                {
                    "name": "extras",
                    "type": "List",
                    "structure": {
                        "name": "extraInformation",
                        "type": "Select",
                        "options": [
                            "description",
                            "license",
                            "date_upload",
                            "date_taken",
                            "owner_name",
                            "icon_server",
                            "original_format",
                            "last_update",
                            "geo",
                            "tags",
                            "machine_tags",
                            "o_dims",
                            "views",
                            "media",
                            "path_alias",
                            "url_sq",
                            "url_t",
                            "url_s",
                            "url_q",
                            "url_m",
                            "url_n",
                            "url_z",
                            "url_c",
                            "url_l",
                            "url_o"
                        ],
                        "info": "Single extra name."
                    },
                    "info": "List of extra information to fetch for each returned record.",
                    "required": false,
                    "vendorSchema": {
                        "name": "extras",
                        "format": "toString:{,}"
                    }
                },
                {
                    "name": "perPage",
                    "type": "Number",
                    "info": "Number of items to return per page. If this argument is omitted, it defaults to 100. The maximum allowed value is 500.",
                    "required": false,
                    "vendorSchema": {
                        "name": "per_page"
                    }
                },
                {
                    "name": "page",
                    "type": "Number",
                    "info": "The page of results to return. If this argument is omitted, it defaults to 1.",
                    "required": false,
                    "vendorSchema": {
                        "name": "page"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.photos.geo.photosForLocation",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "api_key",
                            "method",
                            "format",
                            "nojsoncallback",
                            "lat",
                            "lon",
                            "accuracy",
                            "extras",
                            "per_page",
                            "page"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "removePhotoGeoData",
            "description": "Removes the geo data associated with a photo.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "photoId",
                    "type": "String",
                    "info": "The id of the photo you want to remove location data from.",
                    "required": true,
                    "vendorSchema": {
                        "name": "photo_id"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "post",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.photos.geo.removeLocation",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "api_key",
                            "method",
                            "format",
                            "nojsoncallback",
                            "photo_id"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "setGeoTagForPhoto",
            "description": "Indicate the state of a photo's geotagginess beyond latitude and longitude.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "photoId",
                    "type": "String",
                    "info": "The id of the photo you want to remove location data from.",
                    "required": true,
                    "vendorSchema": {
                        "name": "photo_id"
                    }
                },
                {
                    "name": "context",
                    "type": "Select",
                    "options": [
                        "0",
                        "1",
                        "2"
                    ],
                    "info": "Context is a numeric value representing the photo's geotagginess beyond latitude and longitude. For example, you may wish to indicate that a photo was taken `indoors` or `outdoors`. ",
                    "required": true,
                    "vendorSchema": {
                        "name": "context"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "post",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.photos.geo.removeLocation",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "api_key",
                            "method",
                            "format",
                            "nojsoncallback",
                            "photo_id",
                            "context"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "setGeoLocationForPhoto",
            "description": "Sets the geo data (latitude and longitude and, optionally, the accuracy level) for a photo. Before users may assign location data to a photo they must define who, by default, may view that information. Users can edit this preference at http:\/\/www.flickr.com\/account\/geo\/privacy\/. If a user has not set this preference, the API method will return an error.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "photoId",
                    "type": "String",
                    "info": "The id of the photo to set location data for.",
                    "required": true,
                    "vendorSchema": {
                        "name": "photo_id"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "coordinates",
                    "type": "Map",
                    "info": "The latitude of the photos to be update whose valid range is -90 to 90.The longitude of the photos to be updated whose valid range is -180 to 180. ",
                    "required": true,
                    "vendorSchema": {
                        "name": "coordinates"
                    }
                },
                {
                    "name": "accuracy",
                    "type": "Number",
                    "info": "Recorded accuracy level of the photos to be updated. World level is 1, Country is ~3, Region ~6, City ~11, Street ~16. Current range is 1-16. Defaults to 16 if not specified.",
                    "required": false,
                    "vendorSchema": {
                        "name": "accuracy"
                    }
                },
                {
                    "name": "context",
                    "type": "Select",
                    "options": [
                        "0",
                        "1",
                        "2"
                    ],
                    "info": "Context is a numeric value representing the photo's geotagginess beyond latitude and longitude. For example, you may wish to indicate that a photo was taken `indoors` or `outdoors`. ",
                    "required": false,
                    "vendorSchema": {
                        "name": "context"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.photos.geo.setLocation",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "api_key",
                            "method",
                            "format",
                            "nojsoncallback",
                            "lat",
                            "lon",
                            "accuracy",
                            "context",
                            "photo_id"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "setPermissionForGeoDataPhoto",
            "description": "Set the permission for who may view the geo data associated with a photo.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "isPublic",
                    "type": "Select",
                    "options": [
                        "1",
                        "0"
                    ],
                    "info": "1 to set viewing permissions for the photo's location data to public, 0 to set it to private.",
                    "required": true,
                    "vendorSchema": {
                        "name": "is_public"
                    }
                },
                {
                    "name": "isFriend",
                    "type": "Select",
                    "options": [
                        "1",
                        "0"
                    ],
                    "info": "1 to set viewing permissions for the photo's location data to friends, 0 to set it to private.",
                    "required": true,
                    "vendorSchema": {
                        "name": "is_friend"
                    }
                },
                {
                    "name": "isContact",
                    "type": "Select",
                    "options": [
                        "1",
                        "0"
                    ],
                    "info": "1 to set viewing permissions for the photo's location data to contacts, 0 to set it to private.",
                    "required": true,
                    "vendorSchema": {
                        "name": "is_contact"
                    }
                },
                {
                    "name": "isFamily",
                    "type": "Select",
                    "options": [
                        "1",
                        "0"
                    ],
                    "info": "1 to set viewing permissions for the photo's location data to family, 0 to set it to private.",
                    "required": true,
                    "vendorSchema": {
                        "name": "is_family"
                    }
                },
                {
                    "name": "photoId",
                    "type": "Select",
                    "info": "The id of the photo to get permissions for.",
                    "required": true,
                    "vendorSchema": {
                        "name": "photo_id"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest",
                "method": "post",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.photos.geo.setPerms",
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "api_key",
                            "method",
                            "format",
                            "nojsoncallback",
                            "photo_id",
                            "is_family",
                            "is_friend",
                            "is_contact",
                            "is_public"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "uploadPhoto",
            "description": "Upload Photo to Flickr.This method requires authentication with 'write' permission.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "photoUrl",
                    "type": "File",
                    "info": "Url of the photo.",
                    "required": true,
                    "vendorSchema": {
                        "name": "photo_url"
                    }
                },
                {
                    "name": "title",
                    "type": "String",
                    "info": "The title of the photo.",
                    "required": false,
                    "vendorSchema": {
                        "name": "title"
                    }
                },
                {
                    "name": "description",
                    "type": "String",
                    "info": "A description of the photo. May contain some limited HTML.",
                    "required": false,
                    "vendorSchema": {
                        "name": "description"
                    }
                },
                {
                    "name": "tags",
                    "type": "List",
                    "structure": {
                        "name": "tag",
                        "info": "Single tag.",
                        "type": "String"
                    },
                    "info": "The tags to add to the photo.",
                    "required": false,
                    "vendorSchema": {
                        "name": "tags",
                        "format": "toString:{,}"
                    }
                },
                {
                    "name": "isPublic",
                    "type": "Select",
                    "options": [
                        "1",
                        "0"
                    ],
                    "info": "1 to set viewing permissions for the photo's location data to public, 0 to set it to private.",
                    "required": false,
                    "vendorSchema": {
                        "name": "is_public"
                    }
                },
                {
                    "name": "isFriend",
                    "type": "Select",
                    "options": [
                        "1",
                        "0"
                    ],
                    "info": "1 to set viewing permissions for the photo's location data to friends, 0 to set it to private.",
                    "required": false,
                    "vendorSchema": {
                        "name": "is_friend"
                    }
                },
                {
                    "name": "isFamily",
                    "type": "Select",
                    "options": [
                        "1",
                        "0"
                    ],
                    "info": "1 to set viewing permissions for the photo's location data to family, 0 to set it to private.",
                    "required": false,
                    "vendorSchema": {
                        "name": "is_family"
                    }
                },
                {
                    "name": "safetyLevel",
                    "type": "Select",
                    "options": [
                        "1",
                        "2",
                        "3"
                    ],
                    "info": "Set to 1 for Safe, 2 for Moderate, or 3 for Restricted. If omitted or an invalid value is passed, will be set to user's default",
                    "required": false,
                    "vendorSchema": {
                        "name": "safety_level"
                    }
                },
                {
                    "name": "contentType",
                    "type": "Select",
                    "options": [
                        "1",
                        "2",
                        "3"
                    ],
                    "info": "Set to 1 for Photo, 2 for Screenshot, or 3 for Other. If omitted , will be set to user's default",
                    "required": false,
                    "vendorSchema": {
                        "name": "content_type"
                    }
                },
                {
                    "name": "hidden",
                    "type": "Select",
                    "options": [
                        "1",
                        "2"
                    ],
                    "info": "Set to 1 to keep the photo in global search results, 2 to hide from public searches. If omitted, will be set based to user's default",
                    "required": false,
                    "vendorSchema": {
                        "name": "hidden"
                    }
                }

            ],
            "vendorRequest": {
                "url": "https://up.flickr.com/services/upload/",
                "method": "post",
                "vendorFieldsStructure": [
                    {
                        "format": "json",
                        "nojsoncallback": "1"
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "api_key",
                            "method",
                            "format",
                            "nojsoncallback",
                            "title",
                            "description",
                            "tags",
                            "safety_level",
                            "content_type",
                            "hidden",
                            "is_family",
                            "is_friend",
                            "is_public"
                        ]
                    }
                ]
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "lookupUser",
            "description": "Returns a user NSID, given the url to a user's photos or profile.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "url",
                    "type": "String",
                    "info": "The url to the user's profile or photos page.",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.urls.lookupUser",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "method",
                            "url",
                            "format",
                            "api_key",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "lookupGroup",
            "description": "Returns a group NSID, given the url to a group's page or photo pool.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },

                {
                    "name": "url",
                    "type": "String",
                    "info": "The url to the group's page or photo pool.",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.urls.lookupGroup",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "method",
                            "url",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "lookupGallery",
            "description": "Returns gallery info, by url.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },

                {
                    "name": "url",
                    "type": "String",
                    "info": "The url to gallery",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.urls.lookupGallery",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "method",
                            "url",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getUserProfile",
            "description": "Returns the url to a user's profile.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },

                {
                    "name": "userId",
                    "type": "String",
                    "info": "The NSID of the user to fetch the url for. If omitted, the calling user is assumed.          ",
                    "required": true,
                    "vendorSchema": {
                        "name": "user_id"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.urls.getUserProfile",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "method",
                            "user_id",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getUserPhotosUrl",
            "description": "Returns the url to a user's photos.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },

                {
                    "name": "userId",
                    "type": "String",
                    "info": "The NSID of the user to fetch the url for. If omitted, the calling user is assumed.          ",
                    "required": true,
                    "vendorSchema": {
                        "name": "user_id"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.urls.getUserPhotos",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "method",
                            "user_id",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getGroup",
            "description": "Returns the url to a group's page.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },

                {
                    "name": "groupId",
                    "type": "String",
                    "info": "The NSID of the group to fetch the url for.",
                    "required": true,
                    "vendorSchema": {
                        "name": "group_id"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.urls.getGroup",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "method",
                            "group_id",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getTestimonialsBy",
            "description": "Get approved testimonials written by the given user",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "ID of the user to get testimonials written by",
                    "required": true,
                    "vendorSchema": {
                        "name": "user_id"
                    }
                },
                {
                    "name": "page",
                    "type": "Number",
                    "info": "Page number. Default is 0",
                    "required": false,
                    "vendorSchema": {
                        "name": "page"
                    }
                },
                {
                    "name": "perPage",
                    "type": "Number",
                    "info": "Number of testimonials to return per page. Default is 10, maximum is 50",
                    "required": false,
                    "vendorSchema": {
                        "name": "per_page"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.testimonials.getTestimonialsBy",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "per_page",
                            "page",
                            "method",
                            "user_id",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getTestimonialsAboutBy",
            "description": "Get the approved testimonial by the currently logged-in user about the given user. Note that at most 1 testimonial will be returned",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "ID of the user to get testimonials written about",
                    "required": true,
                    "vendorSchema": {
                        "name": "user_id"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.testimonials.getTestimonialsAboutBy",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "method",
                            "user_id",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getTestimonialsAbout",
            "description": "Get approved testimonials about the given user",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "ID of the user to get testimonials written about",
                    "required": true,
                    "vendorSchema": {
                        "name": "user_id"
                    }
                },
                {
                    "name": "page",
                    "type": "Number",
                    "info": "Page number. Default is 0",
                    "required": false,
                    "vendorSchema": {
                        "name": "page"
                    }
                },
                {
                    "name": "perPage",
                    "type": "Number",
                    "info": "Number of testimonials to return per page. Default is 10, maximum is 50",
                    "required": false,
                    "vendorSchema": {
                        "name": "per_page"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.testimonials.getTestimonialsAbout",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "per_page",
                            "page",
                            "method",
                            "user_id",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getPendingTestimonialsBy",
            "description": "Get all pending testimonials written by the given user",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "page",
                    "type": "Number",
                    "info": "Page number. Default is 0",
                    "required": false,
                    "vendorSchema": {
                        "name": "page"
                    }
                },
                {
                    "name": "perPage",
                    "type": "Number",
                    "info": "Number of testimonials to return per page. Default is 10, maximum is 50",
                    "required": false,
                    "vendorSchema": {
                        "name": "per_page"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.testimonials.getPendingTestimonialsBy",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "per_page",
                            "page",
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getPendingTestimonialsAboutBy",
            "description": "Get the pending testimonial by the currently logged-in user about the given user. Note that at most 1 testimonial will be returned",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "ID of the user to get testimonials written about",
                    "required": true,
                    "vendorSchema": {
                        "name": "user_id"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.testimonials.getPendingTestimonialsAboutBy",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "user_id",
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getPendingTestimonialsAbout",
            "description": "Get all pending testimonials written about the given user",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "page",
                    "type": "Number",
                    "info": "Page number. Default is 0",
                    "required": false,
                    "vendorSchema": {
                        "name": "page"
                    }
                },
                {
                    "name": "perPage",
                    "type": "Number",
                    "info": "Number of testimonials to return per page. Default is 10, maximum is 50",
                    "required": false,
                    "vendorSchema": {
                        "name": "per_page"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.testimonials.getPendingTestimonialsAbout",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "per_page",
                            "page",
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getAllTestimonialsBy",
            "description": "Get all testimonials (pending and approved) written by the given user",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "page",
                    "type": "Number",
                    "info": "Page number. Default is 0",
                    "required": false,
                    "vendorSchema": {
                        "name": "page"
                    }
                },
                {
                    "name": "perPage",
                    "type": "Number",
                    "info": "Number of testimonials to return per page. Default is 10, maximum is 50",
                    "required": false,
                    "vendorSchema": {
                        "name": "per_page"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.testimonials.getAllTestimonialsBy",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "per_page",
                            "page",
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getAllTestimonialsAboutBy",
            "description": "Get the testimonial by the currently logged-in user about the given user, regardless of approval status. Note that at most 1 testimonial will be returned",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "ID of the user to get testimonials written about",
                    "required": true,
                    "vendorSchema": {
                        "name": "user_id"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.testimonials.getAllTestimonialsAboutBy",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "user_id",
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getAllTestimonialsAbout",
            "description": "Get all testimonials (pending and approved) written about the given user",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "page",
                    "type": "Number",
                    "info": "Page number. Default is 0",
                    "required": false,
                    "vendorSchema": {
                        "name": "page"
                    }
                },
                {
                    "name": "perPage",
                    "type": "Number",
                    "info": "Number of testimonials to return per page. Default is 10, maximum is 50",
                    "required": false,
                    "vendorSchema": {
                        "name": "per_page"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.testimonials.getAllTestimonialsAbout",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "per_page",
                            "page",
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "addTestimonial",
            "description": "Get all testimonials (pending and approved) written about the given user",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "ID of the user the testimonial is about",
                    "required": true,
                    "vendorSchema": {
                        "name": "user_id"
                    }
                },
                {
                    "name": "testimonialText",
                    "type": "String",
                    "info": "The text of the testimonial. HTML\/BBCode is not accepted",
                    "required": false,
                    "vendorSchema": {
                        "name": "testimonial_text"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "post",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.testimonials.addTestimonial",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "testimonial_text",
                            "user_id",
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "approveTestimonial",
            "description": "Approve a testimonial that has been written about the currently loggedin user",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "testimonialId",
                    "type": "String",
                    "info": "ID of the testimonial to approve",
                    "required": true,
                    "vendorSchema": {
                        "name": "testimonial_id"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "post",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.testimonials.approveTestimonial",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "testimonial_id",
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "deleteTestimonial",
            "description": "Delete a testimonial that has been written about the currently loggedin user",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "testimonialId",
                    "type": "String",
                    "info": "ID of the testimonial to delete",
                    "required": true,
                    "vendorSchema": {
                        "name": "testimonial_id"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "post",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.testimonials.deleteTestimonial",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "testimonial_id",
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "editTestimonial",
            "description": "Change the text of a testimonial. The loggedin user must be the author of the existing testimonial. ",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "testimonialId",
                    "type": "String",
                    "info": "ID of the testimonial to edit",
                    "required": true,
                    "vendorSchema": {
                        "name": "testimonial_id"
                    }
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "ID of the user the testimonial is about",
                    "required": true,
                    "vendorSchema": {
                        "name": "user_id"
                    }
                },
                {
                    "name": "testimonialText",
                    "type": "String",
                    "info": "The text of the testimonial. HTML\/BBCode is not accepted",
                    "required": false,
                    "vendorSchema": {
                        "name": "testimonial_text"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "post",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.testimonials.editTestimonial",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "testimonial_text",
                            "user_id",
                            "testimonial_id",
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "testEcho",
            "description": "A testing method which echo's all parameters back in the response.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                }

            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.test.echo",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "testLogin",
            "description": "A testing method which checks if the caller is logged in then returns their username.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.test.login",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "testNull",
            "description": "Null test",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.test.null",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getCollectionDomains",
            "description": "Get a list of referring domains for a collection",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "date",
                    "type": "DatePicker",
                    "info": "Stats will be returned for this date. This should be in either be in YYYY-MM-DD",
                    "required": true,
                    "vendorSchema": {
                        "format": "toFormat:{Y-m-d}"
                    }
                },
                {
                    "name": "collectionId",
                    "type": "String",
                    "info": "The id of the collection to get stats for. If not provided, stats for all collections will be returned.",
                    "required": false,
                    "vendorSchema": {
                        "name": "collection_id"
                    }
                },
                {
                    "name": "page",
                    "type": "Number",
                    "info": "Page number. Default is 0",
                    "required": false,
                    "vendorSchema": {
                        "name": "page"
                    }
                },
                {
                    "name": "perPage",
                    "type": "Number",
                    "info": "Number of items to return per page. Default is 10, maximum is 50",
                    "required": false,
                    "vendorSchema": {
                        "name": "per_page"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.stats.getCollectionDomains",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "page",
                            "per_page",
                            "collection_id",
                            "date",
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getCollectionReferrers",
            "description": "Get a list of referrers from a given domain to a collection",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "date",
                    "type": "DatePicker",
                    "info": "Stats will be returned for this date. This should be in either be in YYYY-MM-DD",
                    "required": true,
                    "vendorSchema": {
                        "format": "toFormat:{Y-m-d}"
                    }
                },
                {
                    "name": "collectionId",
                    "type": "String",
                    "info": "The id of the collection to get stats for. If not provided, stats for all collections will be returned.",
                    "required": false,
                    "vendorSchema": {
                        "name": "collection_id"
                    }
                },
                {
                    "name": "domain",
                    "type": "String",
                    "info": "he domain to return referrers for. This should be a hostname (eg: \"flickr.com\") with no protocol or pathname.",
                    "required": true,
                    "vendorSchema": {
                        "name": "domain"
                    }
                },
                {
                    "name": "page",
                    "type": "Number",
                    "info": "Page number. Default is 0",
                    "required": false,
                    "vendorSchema": {
                        "name": "page"
                    }
                },
                {
                    "name": "perPage",
                    "type": "Number",
                    "info": "Number of items to return per page. Default is 10, maximum is 50",
                    "required": false,
                    "vendorSchema": {
                        "name": "per_page"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.stats.getCollectionReferrers",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "domain",
                            "page",
                            "per_page",
                            "collection_id",
                            "date",
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getCollectionStats",
            "description": "Get the number of views on a collection for a given date.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "date",
                    "type": "DatePicker",
                    "info": "Stats will be returned for this date. This should be in either be in YYYY-MM-DD",
                    "required": true,
                    "vendorSchema": {
                        "format": "toFormat:{Y-m-d}"
                    }
                },
                {
                    "name": "collectionId",
                    "type": "String",
                    "info": "The id of the collection to get stats for. If not provided, stats for all collections will be returned.",
                    "required": true,
                    "vendorSchema": {
                        "name": "collection_id"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.stats.getCollectionStats",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "collection_id",
                            "date",
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getCSVFiles",
            "description": "Returns a list of URLs for text files containing all your stats data (from November 26th 2007 onwards) for the currently auth'd user.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.stats.getCSVFiles",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getPhotoDomains",
            "description": "Get a list of referring domains for a photo",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "date",
                    "type": "DatePicker",
                    "info": "Stats will be returned for this date. This should be in either be in YYYY-MM-DD",
                    "required": true,
                    "vendorSchema": {
                        "format": "toFormat:{Y-m-d}"
                    }
                },
                {
                    "name": "photoId",
                    "type": "String",
                    "info": "The id of the photo to get stats for. If not provided, stats for all photos will be returned.",
                    "required": false,
                    "vendorSchema": {
                        "name": "photo_id"
                    }
                },
                {
                    "name": "page",
                    "type": "Number",
                    "info": "Page number. Default is 0",
                    "required": false,
                    "vendorSchema": {
                        "name": "page"
                    }
                },
                {
                    "name": "perPage",
                    "type": "Number",
                    "info": "Number of items to return per page. Default is 10, maximum is 50",
                    "required": false,
                    "vendorSchema": {
                        "name": "per_page"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.stats.getPhotoDomains",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "page",
                            "per_page",
                            "photo_id",
                            "date",
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getPhotoReferrers",
            "description": "Get a list of referrers from a given domain to a photo",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "date",
                    "type": "DatePicker",
                    "info": "Stats will be returned for this date. This should be in either be in YYYY-MM-DD",
                    "required": true,
                    "vendorSchema": {
                        "format": "toFormat:{Y-m-d}"
                    }
                },
                {
                    "name": "domain",
                    "type": "String",
                    "info": "he domain to return referrers for. This should be a hostname (eg: \"flickr.com\") with no protocol or pathname.",
                    "required": true,
                    "vendorSchema": {
                        "name": "domain"
                    }
                },
                {
                    "name": "photoId",
                    "type": "String",
                    "info": "The id of the photo to get stats for. If not provided, stats for all photos will be returned.",
                    "required": false,
                    "vendorSchema": {
                        "name": "photo_id"
                    }
                },
                {
                    "name": "page",
                    "type": "Number",
                    "info": "Page number. Default is 0",
                    "required": false,
                    "vendorSchema": {
                        "name": "page"
                    }
                },
                {
                    "name": "perPage",
                    "type": "Number",
                    "info": "Number of items to return per page. Default is 10, maximum is 50",
                    "required": false,
                    "vendorSchema": {
                        "name": "per_page"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.stats.getPhotoReferrers",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "domain",
                            "page",
                            "per_page",
                            "photo_id",
                            "date",
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getPhotosetDomains",
            "description": "Get a list of referring domains for a photoset",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "date",
                    "type": "DatePicker",
                    "info": "Stats will be returned for this date. This should be in either be in YYYY-MM-DD",
                    "required": true,
                    "vendorSchema": {
                        "format": "toFormat:{Y-m-d}"
                    }
                },
                {
                    "name": "photosetId",
                    "type": "String",
                    "info": "The id of the photoset to get stats for. If not provided, stats for all photosets will be returned.",
                    "required": false,
                    "vendorSchema": {
                        "name": "photoset_id"
                    }
                },
                {
                    "name": "page",
                    "type": "Number",
                    "info": "Page number. Default is 0",
                    "required": false,
                    "vendorSchema": {
                        "name": "page"
                    }
                },
                {
                    "name": "perPage",
                    "type": "Number",
                    "info": "Number of items to return per page. Default is 10, maximum is 50",
                    "required": false,
                    "vendorSchema": {
                        "name": "per_page"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.stats.getPhotosetDomains",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "page",
                            "per_page",
                            "photoset_id",
                            "date",
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getPhotosetReferrers",
            "description": "Get a list of referrers from a given domain to a photoset",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "date",
                    "type": "DatePicker",
                    "info": "Stats will be returned for this date. This should be in either be in YYYY-MM-DD",
                    "required": true,
                    "vendorSchema": {
                        "format": "toFormat:{Y-m-d}"
                    }
                },
                {
                    "name": "domain",
                    "type": "String",
                    "info": "The domain to return referrers for. This should be a hostname (eg: \"flickr.com\") with no protocol or pathname.",
                    "required": true,
                    "vendorSchema": {
                        "name": "domain"
                    }
                },
                {
                    "name": "photosetId",
                    "type": "String",
                    "info": "The id of the photoset to get stats for. If not provided, stats for all photosets will be returned.",
                    "required": false,
                    "vendorSchema": {
                        "name": "photoset_id"
                    }
                },
                {
                    "name": "page",
                    "type": "Number",
                    "info": "Page number. Default is 0",
                    "required": false,
                    "vendorSchema": {
                        "name": "page"
                    }
                },
                {
                    "name": "perPage",
                    "type": "Number",
                    "info": "Number of items to return per page. Default is 10, maximum is 50",
                    "required": false,
                    "vendorSchema": {
                        "name": "per_page"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.stats.getPhotosetReferrers",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "domain",
                            "page",
                            "per_page",
                            "photoset_id",
                            "date",
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getPhotosetStats",
            "description": "Get the number of views on a photoset for a given date.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "date",
                    "type": "DatePicker",
                    "info": "Stats will be returned for this date. This should be in either be in YYYY-MM-DD",
                    "required": true,
                    "vendorSchema": {
                        "format": "toFormat:{Y-m-d}"
                    }
                },
                {
                    "name": "photosetId",
                    "type": "String",
                    "info": "The id of the photoset to get stats for. If not provided, stats for all photosets will be returned.",
                    "required": false,
                    "vendorSchema": {
                        "name": "photoset_id"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.stats.getPhotosetStats",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "photoset_id",
                            "date",
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getUserPhotoStats",
            "description": "Get the number of views on a photo for a given date.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "date",
                    "type": "DatePicker",
                    "info": "Stats will be returned for this date. This should be in either be in YYYY-MM-DD",
                    "required": true,
                    "vendorSchema": {
                        "format": "toFormat:{Y-m-d}"
                    }
                },
                {
                    "name": "photoId",
                    "type": "String",
                    "info": "The id of the photo to get stats for. If not provided, stats for all photos will be returned.",
                    "required": false,
                    "vendorSchema": {
                        "name": "photo_id"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.stats.getPhotoStats",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "photo_id",
                            "date",
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getPhotostreamDomains",
            "description": "Get a list of referring domains for a photostream",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "date",
                    "type": "DatePicker",
                    "info": "Stats will be returned for this date. This should be in either be in YYYY-MM-DD",
                    "required": true,
                    "vendorSchema": {
                        "format": "toFormat:{Y-m-d}"
                    }
                },
                {
                    "name": "page",
                    "type": "Number",
                    "info": "Page number. Default is 0",
                    "required": false,
                    "vendorSchema": {
                        "name": "page"
                    }
                },
                {
                    "name": "perPage",
                    "type": "Number",
                    "info": "Number of items to return per page. Default is 10, maximum is 50",
                    "required": false,
                    "vendorSchema": {
                        "name": "per_page"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.stats.getPhotostreamDomains",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "page",
                            "per_page",
                            "date",
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getPhotostreamReferrers",
            "description": "Get a list of referrers from a given domain to a user's photostream",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "date",
                    "type": "DatePicker",
                    "info": "Stats will be returned for this date. This should be in either be in YYYY-MM-DD",
                    "required": true,
                    "vendorSchema": {
                        "format": "toFormat:{Y-m-d}"
                    }
                },
                {
                    "name": "domain",
                    "type": "String",
                    "info": "The domain to return referrers for. This should be a hostname (eg: \"flickr.com\") with no protocol or pathname.",
                    "required": true,
                    "vendorSchema": {
                        "name": "domain"
                    }
                },
                {
                    "name": "page",
                    "type": "Number",
                    "info": "Page number. Default is 0",
                    "required": false,
                    "vendorSchema": {
                        "name": "page"
                    }
                },
                {
                    "name": "perPage",
                    "type": "Number",
                    "info": "Number of items to return per page. Default is 10, maximum is 50",
                    "required": false,
                    "vendorSchema": {
                        "name": "per_page"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.stats.getPhotostreamReferrers",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "domain",
                            "page",
                            "per_page",
                            "date",
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getPhotostreamStats",
            "description": "Get the number of views on a user's photostream for a given date.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "date",
                    "type": "DatePicker",
                    "info": "Stats will be returned for this date. This should be in either be in YYYY-MM-DD",
                    "required": true,
                    "vendorSchema": {
                        "format": "toFormat:{Y-m-d}"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.stats.getPhotostreamStats",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "date",
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getPopularPhotoStats",
            "description": "List the photos with the most views, comments or favorites",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "date",
                    "type": "DatePicker",
                    "info": "Stats will be returned for this date. This should be in either be in YYYY-MM-DD",
                    "required": false,
                    "vendorSchema": {
                        "format": "toFormat:{Y-m-d}"
                    }
                },
                {
                    "name": "sort",
                    "type": "String",
                    "info": "The order in which to sort returned photos. Defaults to views.",
                    "required": false
                },
                {
                    "name": "page",
                    "type": "Number",
                    "info": "Page number. Default is 0",
                    "required": false,
                    "vendorSchema": {
                        "name": "page"
                    }
                },
                {
                    "name": "perPage",
                    "type": "Number",
                    "info": "Number of items to return per page. Default is 10, maximum is 50",
                    "required": false,
                    "vendorSchema": {
                        "name": "per_page"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.stats.getPopularPhotos",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "sort",
                            "page",
                            "per_page",
                            "date",
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getTotalViews",
            "description": "Get the overall view counts for an account",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "date",
                    "type": "DatePicker",
                    "info": "Stats will be returned for this date. This should be in either be in YYYY-MM-DD",
                    "required": true,
                    "vendorSchema": {
                        "format": "toFormat:{Y-m-d}"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.stats.getTotalViews",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "date",
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getClusterPhotos",
            "description": "Returns the first 24 photos for a given tag cluster",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "tag",
                    "type": "String",
                    "info": "The tag that this cluster belongs to.",
                    "required": true
                },
                {
                    "name": "clusterId",
                    "type": "String",
                    "info": "The top three tags for the cluster, separated by dashes (just like the url).",
                    "required": true,
                    "vendorSchema": {
                        "name": "cluster_id"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.tags.getClusterPhotos",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "cluster_id",
                            "tag",
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getClusters",
            "description": "Gives you a list of tag clusters for the given tag.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "tag",
                    "type": "String",
                    "info": "The tag that this cluster belongs to.",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.tags.getClusters",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "tag",
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getHotList",
            "description": "Returns a list of hot tags for the given period.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "period",
                    "type": "Select",
                    "options": [
                        "day",
                        "week"
                    ],
                    "info": "The period for which to fetch hot tags. Valid values are day and week (defaults to day).",
                    "required": false
                },
                {
                    "name": "count",
                    "type": "Number",
                    "info": "The number of tags to return. Defaults to 20. Maximum allowed value is 200.",
                    "required": false
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.tags.getHotList",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "count",
                            "period",
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getListPhoto",
            "description": "Get the tag list for a given photo.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "photoId",
                    "type": "String",
                    "info": "The id of the photo to return tags for.",
                    "required": true,
                    "vendorSchema": {
                        "name": "photo_id"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.tags.getListPhoto",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "photo_id",
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getListUser",
            "description": "Get the tag list for a given user (or the currently logged in user).",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "photoId",
                    "type": "String",
                    "info": "The NSID of the user to fetch the tag list for. If this argument is not specified, the currently logged in user (if any) is assumed.",
                    "required": false,
                    "vendorSchema": {
                        "name": "user_id"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.tags.getListUser",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "user_id",
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getListUserPopular",
            "description": "Get the popular tags for a given user (or the currently logged in user).",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "photoId",
                    "type": "String",
                    "info": "The NSID of the user to fetch the tag list for. If this argument is not specified, the currently logged in user (if any) is assumed.",
                    "required": false,
                    "vendorSchema": {
                        "name": "user_id"
                    }
                },
                {
                    "name": "count",
                    "type": "Number",
                    "info": "The number of tags to return. Defaults to 20. Maximum allowed value is 200.",
                    "required": false
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.tags.getListUserPopular",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "count",
                            "user_id",
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getListUserRaw",
            "description": "Get the raw versions of a given tag (or all tags) for the currently logged-in user.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "tag",
                    "type": "String",
                    "info": "The tag you want to retrieve all raw versions for.",
                    "required": false
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.tags.getListUserRaw",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "tag",
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getMostFrequentlyUsed",
            "description": "Returns a list of most frequently used tags for a user.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.tags.getMostFrequentlyUsed",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getRelated",
            "description": "Returns a list of tags 'related' to the given tag, based on clustered usage analysis.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "tag",
                    "type": "String",
                    "info": "The tag you want to retrieve all related tags for.",
                    "required": false
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.tags.getRelated",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "tag",
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getMethodInfo",
            "description": "Returns information for a given flickr API method.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "methodName",
                    "type": "String",
                    "info": "The name of the method to fetch information for.",
                    "required": true,
                    "vendorSchema": {
                        "name": "method_name"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.reflection.getMethodInfo",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "method_name",
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getMethods",
            "description": "Returns a list of available flickr API methods.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.reflection.getMethods",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getSubscriptions",
            "description": "Returns a list of the subscriptions for the logged-in user.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.push.getSubscriptions",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getTopics",
            "description": "All the different flavours of anteater.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.push.getTopics",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "subscribe",
            "description": "Subscribe to event",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "topic",
                    "type": "String",
                    "info": "The type of subscription.",
                    "required": true,
                    "vendorSchema": {
                        "name": "topic"
                    }
                },
                {
                    "name": "callback",
                    "type": "String",
                    "info": "The url for the subscription endpoint.",
                    "required": true,
                    "vendorSchema": {
                        "name": "callback"
                    }
                },
                {
                    "name": "verify",
                    "type": "Select",
                    "options": [
                        "sync",
                        "async"
                    ],
                    "info": "The verification mode, either sync or async.",
                    "required": true,
                    "vendorSchema": {
                        "name": "verify"
                    }
                },
                {
                    "name": "verifyToken",
                    "type": "String",
                    "info": "The verification token to be echoed back to the subscriber during the verification callback",
                    "required": false,
                    "vendorSchema": {
                        "name": "verify_token"
                    }
                },
                {
                    "name": "leaseSeconds",
                    "type": "Number",
                    "info": "Number of seconds for which the subscription will be valid. Legal values are 60 to 86400",
                    "required": false,
                    "vendorSchema": {
                        "name": "lease_seconds"
                    }
                },
                {
                    "name": "woeIds",
                    "type": "Number",
                    "info": "A 32-bit integer for a Where on Earth ID. Only valid if topic is geo. ",
                    "required": false,
                    "vendorSchema": {
                        "name": "woe_ids"
                    }
                },
                {
                    "name": "placeIds",
                    "type": "List",
                    "structure": {
                        "name": "placeId",
                        "type": "String",
                        "info": "Single place id"
                    },
                    "info": "A list of Flickr place IDs. Only valid if topic is geo. ",
                    "required": false,
                    "vendorSchema": {
                        "name": "place_ids",
                        "format": "toString:{,}"
                    }
                },
                {
                    "name": "coordinates",
                    "type": "Map",
                    "info": "Defines the coordinates for a radial query centered around (lat, lon).",
                    "required": false
                },
                {
                    "name": "radius",
                    "type": "String",
                    "info": "A radius value, in the units defined by radiusUnits. ",
                    "required": false
                },
                {
                    "name": "radiusUnits",
                    "type": "Select",
                    "options": [
                        "mi",
                        "km"
                    ],
                    "info": "Defines the units for the radius parameter. Only valid if topic is geo. Options are mi and km. Default is km. ",
                    "required": false,
                    "vendorSchema": {
                        "name": "radius_units"
                    }
                },
                {
                    "name": "accuracy",
                    "type": "Number",
                    "info": "Defines the minimum accuracy required for photos to be included in a subscription. Only valid if topic is geo Legal values are 1-16, default is 1 (i.e. any accuracy level).",
                    "required": false,
                    "vendorSchema": {
                        "name": "accuracy"
                    }
                },
                {
                    "name": "nsIds",
                    "type": "List",
                    "structure": {
                        "name": "nsId",
                        "type": "String",
                        "info": "Single ns id"
                    },
                    "info": "A list of nsids representing Flickr Commons institutions",
                    "required": false,
                    "vendorSchema": {
                        "name": "nsids",
                        "format": "toString:{,}"
                    }
                },
                {
                    "name": "tags",
                    "type": "List",
                    "structure": {
                        "name": "tag",
                        "type": "String",
                        "info": "Single tag"
                    },
                    "info": "A list of strings to be used for tag subscriptions. ",
                    "required": false,
                    "vendorSchema": {
                        "name": "tags",
                        "format": "toString:{,}"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.push.subscribe",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "tags",
                            "nsids",
                            "accuracy",
                            "radius_units",
                            "radius",
                            "lat",
                            "lon",
                            "place_ids",
                            "woe_ids",
                            "lease_seconds",
                            "verify_token",
                            "verify",
                            "callback",
                            "topic",
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "unsubscribe",
            "description": "Unsibscribe from event",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "topic",
                    "type": "String",
                    "info": "The type of subscription. ",
                    "required": true,
                    "vendorSchema": {
                        "name": "topic"
                    }
                },
                {
                    "name": "callback",
                    "type": "String",
                    "info": "The url for the subscription endpoint (must be the same url as was used when creating the subscription).",
                    "required": true,
                    "vendorSchema": {
                        "name": "callback"
                    }
                },
                {
                    "name": "verify",
                    "type": "Select",
                    "options": [
                        "sync",
                        "async"
                    ],
                    "info": "The verification mode, either sync or async.",
                    "required": true,
                    "vendorSchema": {
                        "name": "verify"
                    }
                },
                {
                    "name": "verifyToken",
                    "type": "String",
                    "info": "The verification token to be echoed back to the subscriber during the verification callback",
                    "required": false,
                    "vendorSchema": {
                        "name": "verify_token"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.push.unsubscribe",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "verify_token",
                            "verify",
                            "callback",
                            "topic",
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getProfile",
            "description": "Returns specified user's profile info, respecting profile privacy settings",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "The NSID of the user to fetch the url for. ",
                    "required": true,
                    "vendorSchema": {
                        "name": "user_id"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.profile.getProfile",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "method",
                            "user_id",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getContentType",
            "description": "Returns the default content type preference for the user.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.prefs.getContentType",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getGeoPerms",
            "description": "Returns the default privacy level for geographic information attached to the user's photos",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.prefs.getGeoPerms",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getHidden",
            "description": "Returns the default hidden preference for the user.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.prefs.getHidden",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getPrivacy",
            "description": "Returns the default privacy level preference for the user.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.prefs.getPrivacy",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getSafetyLevel",
            "description": "Returns the default safety level preference for the user.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.prefs.getSafetyLevel",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "findPlace",
            "description": "Find place by query",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "query",
                    "type": "String",
                    "info": "The query string to use for place ID lookups",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.places.find",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "query",
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "findByLatLon",
            "description": "Returns the default safety level preference for the user.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "coordinates",
                    "type": "Map",
                    "info": "Defines the coordinates for a radial query centered around (lat, lon).",
                    "required": true
                },
                {
                    "name": "accuracy",
                    "type": "Number",
                    "info": "Recorded accuracy level of the location information. Legal values are 1-16, default is 1 (i.e. any accuracy level).",
                    "required": false
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.places.findByLatLon",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "accuracy",
                            "lon",
                            "lat",
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getChildrenWithPhotosPublicByPlaceId",
            "description": "Return a list of locations with public photos that are parented by Places ID.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "placeId",
                    "type": "String",
                    "info": "A Flickr Places ID. ",
                    "required": true,
                    "vendorSchema": {
                        "name": "place_id"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.places.getChildrenWithPhotosPublic",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "place_id",
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getChildrenWithPhotosPublicByWoeId",
            "description": "Return a list of locations with public photos that are parented by Woe ID.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "woeId",
                    "type": "String",
                    "info": "A Where On Earth (WOE) ID.",
                    "required": true,
                    "vendorSchema": {
                        "name": "woe_id"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.places.getChildrenWithPhotosPublic",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "woe_id",
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getInfoByPlaceId",
            "description": "Get informations about a place.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "placeId",
                    "type": "String",
                    "info": "A Flickr Places ID. ",
                    "required": true,
                    "vendorSchema": {
                        "name": "place_id"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.places.getInfo",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "place_id",
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getInfoByWoeId",
            "description": "Get place info by Woe ID.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "woeId",
                    "type": "String",
                    "info": "A Where On Earth (WOE) ID.",
                    "required": true,
                    "vendorSchema": {
                        "name": "woe_id"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.places.getInfo",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "woe_id",
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getInfoByUrl",
            "description": "Lookup information about a place, by its flickr.com\/places URL.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "url",
                    "type": "String",
                    "info": "A flickr.com\/places URL in the form of \/country\/region\/city. For example: \/Canada\/Quebec\/Montreal",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.places.getInfoByUrl",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "url",
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getPlaceTypes",
            "description": "Fetches a list of available place types for Flickr.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.places.getPlaceTypes",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getShapeHistoryByPlaceId",
            "description": "Return an historical list of all the shape data generated",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "placeId",
                    "type": "String",
                    "info": "A Flickr Places ID. ",
                    "required": true,
                    "vendorSchema": {
                        "name": "place_id"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.places.getShapeHistory",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "place_id",
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getShapeHistoryByWoeId",
            "description": "Return an historical list of all the shape data generated",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "woeId",
                    "type": "String",
                    "info": "A Where On Earth (WOE) ID.",
                    "required": true,
                    "vendorSchema": {
                        "name": "woe_id"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.places.getShapeHistory",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "woe_id",
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getTopPlacesList",
            "description": "Return the top 100 most geotagged places for a day.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "woeId",
                    "type": "String",
                    "info": "A Where On Earth (WOE) ID.",
                    "required": false,
                    "vendorSchema": {
                        "name": "woe_id"
                    }
                },
                {
                    "name": "placeId",
                    "type": "String",
                    "info": "A Flickr Places ID. ",
                    "required": false,
                    "vendorSchema": {
                        "name": "place_id"
                    }
                },
                {
                    "name": "date",
                    "type": "DatePicker",
                    "info": "Stats will be returned for this date. This should be in either be in YYYY-MM-DD",
                    "required": true,
                    "vendorSchema": {
                        "format": "toFormat:{Y-m-d}"
                    }
                },
                {
                    "name": "placeTypeId",
                    "type": "Select",
                    "options": [
                        "7",
                        "8",
                        "12",
                        "22",
                        "29"
                    ],
                    "info": "The numeric ID for a specific place type to cluster photos by.",
                    "required": true,
                    "vendorSchema": {
                        "name": "place_type_id"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.places.getShapeHistory",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "place_type_id",
                            "date",
                            "place_id",
                            "woe_id",
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "placesForBoundingBox",
            "description": "Return all the locations of a matching place type for a bounding box.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "minBBox",
                    "type": "Map",
                    "info": "The bottom-left corner of the box",
                    "required": true
                },
                {
                    "name": "maxBBox",
                    "type": "Map",
                    "info": "The top-right corner of the box",
                    "required": true
                },
                {
                    "name": "placeTypeId",
                    "type": "Select",
                    "options": [
                        "7",
                        "8",
                        "12",
                        "22",
                        "29"
                    ],
                    "info": "The numeric ID for a specific place type to cluster photos by.",
                    "required": false,
                    "vendorSchema": {
                        "name": "place_type_id"
                    }
                },
                {
                    "name": "placeType",
                    "type": "Select",
                    "options": [
                        "neighbourhood",
                        "locality",
                        "county",
                        "region",
                        "country",
                        "continent"
                    ],
                    "info": "The name of place type to using as the starting point to search for places in a bounding box. ",
                    "required": false,
                    "vendorSchema": {
                        "name": "place_type"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.places.placesForBoundingBox",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "place_type",
                            "place_type_id",
                            "bbox",
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "placesForContactsByPlaceId",
            "description": "Return a list of the top 100 unique places clustered by a given placetype for a user's contacts.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "placeTypeId",
                    "type": "Select",
                    "options": [
                        "7",
                        "8",
                        "12",
                        "22",
                        "29"
                    ],
                    "info": "The numeric ID for a specific place type to cluster photos by.",
                    "required": false,
                    "vendorSchema": {
                        "name": "place_type_id"
                    }
                },
                {
                    "name": "placeType",
                    "type": "Select",
                    "options": [
                        "neighbourhood",
                        "locality",
                        "county",
                        "region",
                        "country",
                        "continent"
                    ],
                    "info": "The name of place type to using as the starting point to search for places in a bounding box. ",
                    "required": false,
                    "vendorSchema": {
                        "name": "place_type"
                    }
                },
                {
                    "name": "placeId",
                    "type": "String",
                    "info": "A Flickr Places ID. ",
                    "required": true,
                    "vendorSchema": {
                        "name": "place_id"
                    }
                },
                {
                    "name": "threshold",
                    "type": "Number",
                    "info": "The minimum number of photos that a place type must have to be included. ",
                    "required": false,
                    "vendorSchema": {
                        "name": "threshold"
                    }
                },
                {
                    "name": "contacts",
                    "type": "Select",
                    "options": [
                        "all",
                        "ff"
                    ],
                    "info": "Search your contacts. Either 'all' or 'ff' for just friends and family. (Default is all)",
                    "required": false,
                    "vendorSchema": {
                        "name": "contacts"
                    }
                },
                {
                    "name": "minUploadDate",
                    "type": "DatePicker",
                    "info": "Minimum upload date. This should be in YYYY-MM-DD",
                    "required": false,
                    "vendorSchema": {
                        "format": "toFormat:{Y-m-d}",
                        "name": "min_upload_date"
                    }
                },
                {
                    "name": "maxUploadDate",
                    "type": "DatePicker",
                    "info": "Minimum upload date. This should be in YYYY-MM-DD",
                    "required": false,
                    "vendorSchema": {
                        "format": "toFormat:{Y-m-d}",
                        "name": "max_upload_date"
                    }
                },
                {
                    "name": "minTakenDate",
                    "type": "DatePicker",
                    "info": "Minimum taken date. This should be in YYYY-MM-DD",
                    "required": false,
                    "vendorSchema": {
                        "format": "toFormat:{Y-m-d}",
                        "name": "min_taken_date"
                    }
                },
                {
                    "name": "maxTakenDate",
                    "type": "DatePicker",
                    "info": "Minimum taken date. This should be in YYYY-MM-DD",
                    "required": false,
                    "vendorSchema": {
                        "format": "toFormat:{Y-m-d}",
                        "name": "max_taken_date"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.places.placesForContacts",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "max_taken_date",
                            "min_taken_date",
                            "max_upload_date",
                            "min_upload_date",
                            "contacts",
                            "threshold",
                            "place_type",
                            "place_type_id",
                            "place_id",
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "placesForContactsByWoeId",
            "description": "Return a list of the top 100 unique places clustered by a given placetype for a user's contacts.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "placeTypeId",
                    "type": "Select",
                    "options": [
                        "7",
                        "8",
                        "12",
                        "22",
                        "29"
                    ],
                    "info": "The numeric ID for a specific place type to cluster photos by.",
                    "required": false,
                    "vendorSchema": {
                        "name": "place_type_id"
                    }
                },
                {
                    "name": "placeType",
                    "type": "Select",
                    "options": [
                        "neighbourhood",
                        "locality",
                        "county",
                        "region",
                        "country",
                        "continent"
                    ],
                    "info": "The name of place type to using as the starting point to search for places in a bounding box. ",
                    "required": false,
                    "vendorSchema": {
                        "name": "place_type"
                    }
                },
                {
                    "name": "woeId",
                    "type": "String",
                    "info": "Where on Earth Id",
                    "required": true,
                    "vendorSchema": {
                        "name": "woe_id"
                    }
                },
                {
                    "name": "threshold",
                    "type": "Number",
                    "info": "The minimum number of photos that a place type must have to be included. ",
                    "required": false,
                    "vendorSchema": {
                        "name": "threshold"
                    }
                },
                {
                    "name": "contacts",
                    "type": "Select",
                    "options": [
                        "all",
                        "ff"
                    ],
                    "info": "Search your contacts. Either 'all' or 'ff' for just friends and family. (Default is all)",
                    "required": false,
                    "vendorSchema": {
                        "name": "contacts"
                    }
                },
                {
                    "name": "minUploadDate",
                    "type": "DatePicker",
                    "info": "Minimum upload date. This should be in YYYY-MM-DD",
                    "required": false,
                    "vendorSchema": {
                        "format": "toFormat:{Y-m-d}",
                        "name": "min_upload_date"
                    }
                },
                {
                    "name": "maxUploadDate",
                    "type": "DatePicker",
                    "info": "Minimum upload date. This should be in YYYY-MM-DD",
                    "required": false,
                    "vendorSchema": {
                        "format": "toFormat:{Y-m-d}",
                        "name": "max_upload_date"
                    }
                },
                {
                    "name": "minTakenDate",
                    "type": "DatePicker",
                    "info": "Minimum taken date. This should be in YYYY-MM-DD",
                    "required": false,
                    "vendorSchema": {
                        "format": "toFormat:{Y-m-d}",
                        "name": "min_taken_date"
                    }
                },
                {
                    "name": "maxTakenDate",
                    "type": "DatePicker",
                    "info": "Minimum taken date. This should be in YYYY-MM-DD",
                    "required": false,
                    "vendorSchema": {
                        "format": "toFormat:{Y-m-d}",
                        "name": "max_taken_date"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.places.placesForContacts",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "max_taken_date",
                            "min_taken_date",
                            "max_upload_date",
                            "min_upload_date",
                            "contacts",
                            "threshold",
                            "place_type",
                            "place_type_id",
                            "woe_id",
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "placesForTagsByPlaceId",
            "description": "Return a list of the top 100 unique places clustered by a given placetype for set of tags.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "placeTypeId",
                    "type": "Select",
                    "options": [
                        "7",
                        "8",
                        "12",
                        "22",
                        "29"
                    ],
                    "info": "The numeric ID for a specific place type to cluster photos by.",
                    "required": false,
                    "vendorSchema": {
                        "name": "place_type_id"
                    }
                },
                {
                    "name": "placeId",
                    "type": "String",
                    "info": "A Flickr Places ID. ",
                    "required": true,
                    "vendorSchema": {
                        "name": "place_id"
                    }
                },
                {
                    "name": "threshold",
                    "type": "Number",
                    "info": "The minimum number of photos that a place type must have to be included. ",
                    "required": false,
                    "vendorSchema": {
                        "name": "threshold"
                    }
                },
                {
                    "name": "tags",
                    "type": "List",
                    "structure": {
                        "name": "tag",
                        "type": "String",
                        "info": "Single tag"
                    },
                    "info": "Photos with one or more of the tags listed will be returned. ",
                    "required": true,
                    "vendorSchema": {
                        "name": "tags",
                        "format": "toString:{,}"
                    }
                },
                {
                    "name": "tagMode",
                    "type": "Select",
                    "options": [
                        "any",
                        "all"
                    ],
                    "info": "Either 'any' for an OR combination of tags, or 'all' for an AND combination. Defaults to 'any' if not specified.",
                    "required": false,
                    "vendorSchema": {
                        "name": "tag_mode"
                    }
                },
                {
                    "name": "minUploadDate",
                    "type": "DatePicker",
                    "info": "Minimum upload date. This should be in YYYY-MM-DD",
                    "required": false,
                    "vendorSchema": {
                        "format": "toFormat:{Y-m-d}",
                        "name": "min_upload_date"
                    }
                },
                {
                    "name": "maxUploadDate",
                    "type": "DatePicker",
                    "info": "Minimum upload date. This should be in YYYY-MM-DD",
                    "required": false,
                    "vendorSchema": {
                        "format": "toFormat:{Y-m-d}",
                        "name": "max_upload_date"
                    }
                },
                {
                    "name": "minTakenDate",
                    "type": "DatePicker",
                    "info": "Minimum taken date. This should be in YYYY-MM-DD",
                    "required": false,
                    "vendorSchema": {
                        "format": "toFormat:{Y-m-d}",
                        "name": "min_taken_date"
                    }
                },
                {
                    "name": "maxTakenDate",
                    "type": "DatePicker",
                    "info": "Minimum taken date. This should be in YYYY-MM-DD",
                    "required": false,
                    "vendorSchema": {
                        "format": "toFormat:{Y-m-d}",
                        "name": "max_taken_date"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.places.placesForTags",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "max_taken_date",
                            "min_taken_date",
                            "max_upload_date",
                            "min_upload_date",
                            "tags",
                            "tag_mode",
                            "threshold",
                            "place_type_id",
                            "place_id",
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "placesForTagsByWoeId",
            "description": "Return a list of the top 100 unique places clustered by a given placetype for set of tags.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "placeTypeId",
                    "type": "Select",
                    "options": [
                        "7",
                        "8",
                        "12",
                        "22",
                        "29"
                    ],
                    "info": "The numeric ID for a specific place type to cluster photos by.",
                    "required": false,
                    "vendorSchema": {
                        "name": "place_type_id"
                    }
                },
                {
                    "name": "woeId",
                    "type": "String",
                    "info": "Where on Earth ID. ",
                    "required": true,
                    "vendorSchema": {
                        "name": "woe_id"
                    }
                },
                {
                    "name": "threshold",
                    "type": "Number",
                    "info": "The minimum number of photos that a place type must have to be included. ",
                    "required": false,
                    "vendorSchema": {
                        "name": "threshold"
                    }
                },
                {
                    "name": "tags",
                    "type": "List",
                    "structure": {
                        "name": "tag",
                        "type": "String",
                        "info": "Single tag"
                    },
                    "info": "Photos with one or more of the tags listed will be returned. ",
                    "required": true,
                    "vendorSchema": {
                        "name": "tags",
                        "format": "toString:{,}"
                    }
                },
                {
                    "name": "tagMode",
                    "type": "Select",
                    "options": [
                        "any",
                        "all"
                    ],
                    "info": "Either 'any' for an OR combination of tags, or 'all' for an AND combination. Defaults to 'any' if not specified.",
                    "required": false,
                    "vendorSchema": {
                        "name": "tag_mode"
                    }
                },
                {
                    "name": "minUploadDate",
                    "type": "DatePicker",
                    "info": "Minimum upload date. This should be in YYYY-MM-DD",
                    "required": false,
                    "vendorSchema": {
                        "format": "toFormat:{Y-m-d}",
                        "name": "min_upload_date"
                    }
                },
                {
                    "name": "maxUploadDate",
                    "type": "DatePicker",
                    "info": "Minimum upload date. This should be in YYYY-MM-DD",
                    "required": false,
                    "vendorSchema": {
                        "format": "toFormat:{Y-m-d}",
                        "name": "max_upload_date"
                    }
                },
                {
                    "name": "minTakenDate",
                    "type": "DatePicker",
                    "info": "Minimum taken date. This should be in YYYY-MM-DD",
                    "required": false,
                    "vendorSchema": {
                        "format": "toFormat:{Y-m-d}",
                        "name": "min_taken_date"
                    }
                },
                {
                    "name": "maxTakenDate",
                    "type": "DatePicker",
                    "info": "Minimum taken date. This should be in YYYY-MM-DD",
                    "required": false,
                    "vendorSchema": {
                        "format": "toFormat:{Y-m-d}",
                        "name": "max_taken_date"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.places.placesForTags",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "max_taken_date",
                            "min_taken_date",
                            "max_upload_date",
                            "min_upload_date",
                            "tags",
                            "tag_mode",
                            "threshold",
                            "place_type_id",
                            "woe_id",
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "placesForMachineTagsByPlaceId",
            "description": "Return a list of the top 100 unique places clustered by a given placetype for set of machine tags.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "placeTypeId",
                    "type": "Select",
                    "options": [
                        "7",
                        "8",
                        "12",
                        "22",
                        "29"
                    ],
                    "info": "The numeric ID for a specific place type to cluster photos by.",
                    "required": false,
                    "vendorSchema": {
                        "name": "place_type_id"
                    }
                },
                {
                    "name": "placeId",
                    "type": "String",
                    "info": "A Flickr Places ID. ",
                    "required": true,
                    "vendorSchema": {
                        "name": "place_id"
                    }
                },
                {
                    "name": "threshold",
                    "type": "Number",
                    "info": "The minimum number of photos that a place type must have to be included. ",
                    "required": false,
                    "vendorSchema": {
                        "name": "threshold"
                    }
                },
                {
                    "name": "machineTags",
                    "type": "List",
                    "structure": {
                        "name": "tag",
                        "type": "String",
                        "info": "Single tag"
                    },
                    "info": "Photos with one or more of the tags listed will be returned. ",
                    "required": true,
                    "vendorSchema": {
                        "name": "machine_tags",
                        "format": "toString:{,}"
                    }
                },
                {
                    "name": "machineTagMode",
                    "type": "Select",
                    "options": [
                        "any",
                        "all"
                    ],
                    "info": "Either 'any' for an OR combination of tags, or 'all' for an AND combination. Defaults to 'any' if not specified.",
                    "required": false,
                    "vendorSchema": {
                        "name": "machine_tag_mode"
                    }
                },
                {
                    "name": "minUploadDate",
                    "type": "DatePicker",
                    "info": "Minimum upload date. This should be in YYYY-MM-DD",
                    "required": false,
                    "vendorSchema": {
                        "format": "toFormat:{Y-m-d}",
                        "name": "min_upload_date"
                    }
                },
                {
                    "name": "maxUploadDate",
                    "type": "DatePicker",
                    "info": "Minimum upload date. This should be in YYYY-MM-DD",
                    "required": false,
                    "vendorSchema": {
                        "format": "toFormat:{Y-m-d}",
                        "name": "max_upload_date"
                    }
                },
                {
                    "name": "minTakenDate",
                    "type": "DatePicker",
                    "info": "Minimum taken date. This should be in YYYY-MM-DD",
                    "required": false,
                    "vendorSchema": {
                        "format": "toFormat:{Y-m-d}",
                        "name": "min_taken_date"
                    }
                },
                {
                    "name": "maxTakenDate",
                    "type": "DatePicker",
                    "info": "Minimum taken date. This should be in YYYY-MM-DD",
                    "required": false,
                    "vendorSchema": {
                        "format": "toFormat:{Y-m-d}",
                        "name": "max_taken_date"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.places.placesForTags",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "machine_tags",
                            "max_taken_date",
                            "min_taken_date",
                            "max_upload_date",
                            "min_upload_date",
                            "machine_tag_mode",
                            "threshold",
                            "place_type_id",
                            "place_id",
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "placesForMachineTagsByWoeId",
            "description": "Return a list of the top 100 unique places clustered by a given placetype for set of machine tags.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "placeTypeId",
                    "type": "Select",
                    "options": [
                        "7",
                        "8",
                        "12",
                        "22",
                        "29"
                    ],
                    "info": "The numeric ID for a specific place type to cluster photos by.",
                    "required": false,
                    "vendorSchema": {
                        "name": "place_type_id"
                    }
                },
                {
                    "name": "woeId",
                    "type": "String",
                    "info": "Where on Earth ID. ",
                    "required": true,
                    "vendorSchema": {
                        "name": "woe_id"
                    }
                },
                {
                    "name": "threshold",
                    "type": "Number",
                    "info": "The minimum number of photos that a place type must have to be included. ",
                    "required": false,
                    "vendorSchema": {
                        "name": "threshold"
                    }
                },
                {
                    "name": "machineTags",
                    "type": "List",
                    "structure": {
                        "name": "tag",
                        "type": "String",
                        "info": "Single tag"
                    },
                    "info": "Photos with one or more of the tags listed will be returned. ",
                    "required": true,
                    "vendorSchema": {
                        "name": "machine_tags",
                        "format": "toString:{,}"
                    }
                },
                {
                    "name": "machineTagMode",
                    "type": "Select",
                    "options": [
                        "any",
                        "all"
                    ],
                    "info": "Either 'any' for an OR combination of tags, or 'all' for an AND combination. Defaults to 'any' if not specified.",
                    "required": false,
                    "vendorSchema": {
                        "name": "machine_tag_mode"
                    }
                },
                {
                    "name": "minUploadDate",
                    "type": "DatePicker",
                    "info": "Minimum upload date. This should be in YYYY-MM-DD",
                    "required": false,
                    "vendorSchema": {
                        "format": "toFormat:{Y-m-d}",
                        "name": "min_upload_date"
                    }
                },
                {
                    "name": "maxUploadDate",
                    "type": "DatePicker",
                    "info": "Minimum upload date. This should be in YYYY-MM-DD",
                    "required": false,
                    "vendorSchema": {
                        "format": "toFormat:{Y-m-d}",
                        "name": "max_upload_date"
                    }
                },
                {
                    "name": "minTakenDate",
                    "type": "DatePicker",
                    "info": "Minimum taken date. This should be in YYYY-MM-DD",
                    "required": false,
                    "vendorSchema": {
                        "format": "toFormat:{Y-m-d}",
                        "name": "min_taken_date"
                    }
                },
                {
                    "name": "maxTakenDate",
                    "type": "DatePicker",
                    "info": "Minimum taken date. This should be in YYYY-MM-DD",
                    "required": false,
                    "vendorSchema": {
                        "format": "toFormat:{Y-m-d}",
                        "name": "max_taken_date"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.places.placesForTags",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "max_taken_date",
                            "min_taken_date",
                            "max_upload_date",
                            "min_upload_date",
                            "machine_tags",
                            "machine_tag_mode",
                            "threshold",
                            "place_type_id",
                            "woe_id",
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "placesForUserByPlaceId",
            "description": "Return a list of the top 100 unique places clustered by a given placetype for a user.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "placeTypeId",
                    "type": "Select",
                    "options": [
                        "7",
                        "8",
                        "12",
                        "22",
                        "29"
                    ],
                    "info": "The numeric ID for a specific place type to cluster photos by.",
                    "required": false,
                    "vendorSchema": {
                        "name": "place_type_id"
                    }
                },
                {
                    "name": "placeType",
                    "type": "Select",
                    "options": [
                        "neighbourhood",
                        "locality",
                        "county",
                        "region",
                        "country",
                        "continent"
                    ],
                    "info": "The name of place type to using as the starting point to search for places in a bounding box. ",
                    "required": false,
                    "vendorSchema": {
                        "name": "place_type"
                    }
                },
                {
                    "name": "placeId",
                    "type": "String",
                    "info": "A Flickr Places ID. ",
                    "required": true,
                    "vendorSchema": {
                        "name": "place_id"
                    }
                },
                {
                    "name": "threshold",
                    "type": "Number",
                    "info": "The minimum number of photos that a place type must have to be included. ",
                    "required": false,
                    "vendorSchema": {
                        "name": "threshold"
                    }
                },
                {
                    "name": "minUploadDate",
                    "type": "DatePicker",
                    "info": "Minimum upload date. This should be in YYYY-MM-DD",
                    "required": false,
                    "vendorSchema": {
                        "format": "toFormat:{Y-m-d}",
                        "name": "min_upload_date"
                    }
                },
                {
                    "name": "maxUploadDate",
                    "type": "DatePicker",
                    "info": "Minimum upload date. This should be in YYYY-MM-DD",
                    "required": false,
                    "vendorSchema": {
                        "format": "toFormat:{Y-m-d}",
                        "name": "max_upload_date"
                    }
                },
                {
                    "name": "minTakenDate",
                    "type": "DatePicker",
                    "info": "Minimum taken date. This should be in YYYY-MM-DD",
                    "required": false,
                    "vendorSchema": {
                        "format": "toFormat:{Y-m-d}",
                        "name": "min_taken_date"
                    }
                },
                {
                    "name": "maxTakenDate",
                    "type": "DatePicker",
                    "info": "Minimum taken date. This should be in YYYY-MM-DD",
                    "required": false,
                    "vendorSchema": {
                        "format": "toFormat:{Y-m-d}",
                        "name": "max_taken_date"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.places.placesForUser",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "max_taken_date",
                            "min_taken_date",
                            "max_upload_date",
                            "min_upload_date",
                            "threshold",
                            "place_type",
                            "place_type_id",
                            "place_id",
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "placesForUserByWoeId",
            "description": "Return a list of the top 100 unique places clustered by a given placetype for a user.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "placeTypeId",
                    "type": "Select",
                    "options": [
                        "7",
                        "8",
                        "12",
                        "22",
                        "29"
                    ],
                    "info": "The numeric ID for a specific place type to cluster photos by.",
                    "required": false,
                    "vendorSchema": {
                        "name": "place_type_id"
                    }
                },
                {
                    "name": "placeType",
                    "type": "Select",
                    "options": [
                        "neighbourhood",
                        "locality",
                        "county",
                        "region",
                        "country",
                        "continent"
                    ],
                    "info": "The name of place type to using as the starting point to search for places in a bounding box. ",
                    "required": false,
                    "vendorSchema": {
                        "name": "place_type"
                    }
                },
                {
                    "name": "woeId",
                    "type": "String",
                    "info": "Where on Earth Id",
                    "required": true,
                    "vendorSchema": {
                        "name": "woe_id"
                    }
                },
                {
                    "name": "threshold",
                    "type": "Number",
                    "info": "The minimum number of photos that a place type must have to be included. ",
                    "required": false,
                    "vendorSchema": {
                        "name": "threshold"
                    }
                },
                {
                    "name": "minUploadDate",
                    "type": "DatePicker",
                    "info": "Minimum upload date. This should be in YYYY-MM-DD",
                    "required": false,
                    "vendorSchema": {
                        "format": "toFormat:{Y-m-d}",
                        "name": "min_upload_date"
                    }
                },
                {
                    "name": "maxUploadDate",
                    "type": "DatePicker",
                    "info": "Minimum upload date. This should be in YYYY-MM-DD",
                    "required": false,
                    "vendorSchema": {
                        "format": "toFormat:{Y-m-d}",
                        "name": "max_upload_date"
                    }
                },
                {
                    "name": "minTakenDate",
                    "type": "DatePicker",
                    "info": "Minimum taken date. This should be in YYYY-MM-DD",
                    "required": false,
                    "vendorSchema": {
                        "format": "toFormat:{Y-m-d}",
                        "name": "min_taken_date"
                    }
                },
                {
                    "name": "maxTakenDate",
                    "type": "DatePicker",
                    "info": "Minimum taken date. This should be in YYYY-MM-DD",
                    "required": false,
                    "vendorSchema": {
                        "format": "toFormat:{Y-m-d}",
                        "name": "max_taken_date"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.places.placesForUser",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "max_taken_date",
                            "min_taken_date",
                            "max_upload_date",
                            "min_upload_date",
                            "threshold",
                            "place_type",
                            "place_type_id",
                            "woe_id",
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "resolvePlaceId",
            "description": "Find Flickr Places information by Place ID.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "placeId",
                    "type": "String",
                    "info": "A Flickr Places ID. ",
                    "required": true,
                    "vendorSchema": {
                        "name": "place_id"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.places.resolvePlaceId",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "method",
                            "place_id",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "resolvePlaceURL",
            "description": "Find Flickr Places information by Place URL.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "placeUrl",
                    "type": "String",
                    "info": "A Flickr Places URL. ",
                    "required": true,
                    "vendorSchema": {
                        "name": "url"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.places.resolvePlaceURL",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "method",
                            "url",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "tagsForPlaceByPlaceId",
            "description": "Return a list of the top 100 unique tags for a Flickr Places",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "placeId",
                    "type": "String",
                    "info": "A Flickr Places ID. ",
                    "required": true,
                    "vendorSchema": {
                        "name": "place_id"
                    }
                },
                {
                    "name": "minUploadDate",
                    "type": "DatePicker",
                    "info": "Minimum upload date. This should be in YYYY-MM-DD",
                    "required": false,
                    "vendorSchema": {
                        "format": "toFormat:{Y-m-d}",
                        "name": "min_upload_date"
                    }
                },
                {
                    "name": "maxUploadDate",
                    "type": "DatePicker",
                    "info": "Minimum upload date. This should be in YYYY-MM-DD",
                    "required": false,
                    "vendorSchema": {
                        "format": "toFormat:{Y-m-d}",
                        "name": "max_upload_date"
                    }
                },
                {
                    "name": "minTakenDate",
                    "type": "DatePicker",
                    "info": "Minimum taken date. This should be in YYYY-MM-DD",
                    "required": false,
                    "vendorSchema": {
                        "format": "toFormat:{Y-m-d}",
                        "name": "min_taken_date"
                    }
                },
                {
                    "name": "maxTakenDate",
                    "type": "DatePicker",
                    "info": "Minimum taken date. This should be in YYYY-MM-DD",
                    "required": false,
                    "vendorSchema": {
                        "format": "toFormat:{Y-m-d}",
                        "name": "max_taken_date"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.places.tagsForPlace",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "max_taken_date",
                            "min_taken_date",
                            "max_upload_date",
                            "min_upload_date",
                            "place_id",
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "tagsForPlaceByWoeId",
            "description": "Return a list of the top 100 unique tags for a Where on Earth (WOE) ID",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "woeId",
                    "type": "String",
                    "info": "Where on Earth Id",
                    "required": true,
                    "vendorSchema": {
                        "name": "woe_id"
                    }
                },
                {
                    "name": "minUploadDate",
                    "type": "DatePicker",
                    "info": "Minimum upload date. This should be in YYYY-MM-DD",
                    "required": false,
                    "vendorSchema": {
                        "format": "toFormat:{Y-m-d}",
                        "name": "min_upload_date"
                    }
                },
                {
                    "name": "maxUploadDate",
                    "type": "DatePicker",
                    "info": "Minimum upload date. This should be in YYYY-MM-DD",
                    "required": false,
                    "vendorSchema": {
                        "format": "toFormat:{Y-m-d}",
                        "name": "max_upload_date"
                    }
                },
                {
                    "name": "minTakenDate",
                    "type": "DatePicker",
                    "info": "Minimum taken date. This should be in YYYY-MM-DD",
                    "required": false,
                    "vendorSchema": {
                        "format": "toFormat:{Y-m-d}",
                        "name": "min_taken_date"
                    }
                },
                {
                    "name": "maxTakenDate",
                    "type": "DatePicker",
                    "info": "Minimum taken date. This should be in YYYY-MM-DD",
                    "required": false,
                    "vendorSchema": {
                        "format": "toFormat:{Y-m-d}",
                        "name": "max_taken_date"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.places.tagsForPlace",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "max_taken_date",
                            "min_taken_date",
                            "max_upload_date",
                            "min_upload_date",
                            "woe_id",
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "addComment",
            "description": "Add a comment to a photoset.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "photosetId",
                    "type": "String",
                    "info": "The id of the photoset",
                    "required": true,
                    "vendorSchema": {
                        "name": "photoset_id"
                    }
                },
                {
                    "name": "commentText",
                    "type": "String",
                    "info": "Text of the comment",
                    "required": true,
                    "vendorSchema": {
                        "name": "comment_text"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "post",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.photosets.comments.addComment",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "photoset_id",
                            "comment_text",
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "editComment",
            "description": "Add a comment to a photoset.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "commentId",
                    "type": "String",
                    "info": "Id of the comment",
                    "required": true,
                    "vendorSchema": {
                        "name": "comment_id"
                    }
                },
                {
                    "name": "commentText",
                    "type": "String",
                    "info": "Text of the comment",
                    "required": true,
                    "vendorSchema": {
                        "name": "comment_text"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "post",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.photosets.comments.editComment",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "comment_id",
                            "comment_text",
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "deleteComment",
            "description": "Delete a comment to a photoset.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "commentId",
                    "type": "String",
                    "info": "Id of the comment",
                    "required": true,
                    "vendorSchema": {
                        "name": "comment_id"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "post",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.photosets.comments.deleteComment",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "comment_id",
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getPhotosetComments",
            "description": "Returns the comments for a photoset.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "photosetId",
                    "type": "String",
                    "info": "Id of the photoset",
                    "required": true,
                    "vendorSchema": {
                        "name": "photoset_id"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.photosets.comments.getList",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "photoset_id",
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "addPhotoToPhotoset",
            "description": "Add a photo to the end of an existing photoset.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "photosetId",
                    "type": "String",
                    "info": "Id of the photoset",
                    "required": true,
                    "vendorSchema": {
                        "name": "photoset_id"
                    }
                },
                {
                    "name": "photoId",
                    "type": "String",
                    "info": "Id of the photo",
                    "required": true,
                    "vendorSchema": {
                        "name": "photo_id"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "post",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.photosets.addPhoto",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "photo_id",
                            "photoset_id",
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "createPhotoset",
            "description": "Create a new photoset for the calling user.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "title",
                    "type": "String",
                    "info": "Title of the photoset",
                    "required": true
                },
                {
                    "name": "primaryPhotoId",
                    "type": "String",
                    "info": "The id of the photo to represent this set. The photo must belong to the calling user.",
                    "required": true,
                    "vendorSchema": {
                        "name": "primary_photo_id"
                    }
                },
                {
                    "name": "description",
                    "type": "String",
                    "info": "Description of the photoset",
                    "required": false
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "post",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.photosets.addPhoto",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "description",
                            "primary_photo_id",
                            "title",
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "deletePhotoset",
            "description": "Delete a photoset.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "photosetId",
                    "type": "String",
                    "info": "Id of the photoset",
                    "required": true,
                    "vendorSchema": {
                        "name": "photoset_id"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "post",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.photosets.delete",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "photoset_id",
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "editPhotosetMeta",
            "description": "Modify the meta-data for a photoset.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "photosetId",
                    "type": "String",
                    "info": "Id of the photoset",
                    "required": true,
                    "vendorSchema": {
                        "name": "photoset_id"
                    }
                },
                {
                    "name": "title",
                    "type": "String",
                    "info": "Title of the photoset",
                    "required": true
                },
                {
                    "name": "description",
                    "type": "String",
                    "info": "Description of the photoset",
                    "required": false
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "post",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.photosets.editMeta",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "description",
                            "title",
                            "photoset_id",
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "editPhotosetPhotos",
            "description": "Modify the photos of the photoset.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "photosetId",
                    "type": "String",
                    "info": "Id of the photoset",
                    "required": true,
                    "vendorSchema": {
                        "name": "photoset_id"
                    }
                },
                {
                    "name": "primaryPhotoId",
                    "type": "String",
                    "info": "The id of the photo to represent this set. The photo must belong to the calling user.",
                    "required": true,
                    "vendorSchema": {
                        "name": "primary_photo_id"
                    }
                },
                {
                    "name": "photoIds",
                    "type": "List",
                    "structure": {
                        "name": "photoId",
                        "type": "String",
                        "info": "Single photo id"
                    },
                    "info": "Photo ids to include in the set",
                    "required": true,
                    "vendorSchema": {
                        "name": "photo_ids",
                        "format": "toString:{,}"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "post",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.photosets.editPhotos",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "photo_ids",
                            "primary_photo_id",
                            "photoset_id",
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getPhotosetContext",
            "description": "Returns next and previous photos for a photo in a set.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "photosetId",
                    "type": "String",
                    "info": "Id of the photoset",
                    "required": true,
                    "vendorSchema": {
                        "name": "photoset_id"
                    }
                },
                {
                    "name": "photoId",
                    "type": "String",
                    "info": "The id of the photo to fetch the context for.",
                    "required": true,
                    "vendorSchema": {
                        "name": "photo_id"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.photosets.getContext",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "photo_id",
                            "photoset_id",
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getUserPhotosets",
            "description": "Returns the photosets belonging to the specified user.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": false,
                    "vendorSchema": {
                        "name": "user_id"
                    }
                },
                {
                    "name": "page",
                    "type": "Number",
                    "info": "Page number. Default is 0",
                    "required": false,
                    "vendorSchema": {
                        "name": "page"
                    }
                },
                {
                    "name": "perPage",
                    "type": "Number",
                    "info": "Number of items to return per page. Default is 10, maximum is 50",
                    "required": false,
                    "vendorSchema": {
                        "name": "per_page"
                    }
                },
                {
                    "name": "photoIds",
                    "type": "List",
                    "structure": {
                        "name": "photoId",
                        "type": "String",
                        "info": "Single photo id"
                    },
                    "info": "If specified, each returned set will include a list of these photo ids that are present in the set",
                    "required": false,
                    "vendorSchema": {
                        "name": "photo_ids",
                        "format": "toString:{,}"
                    }
                },
                {
                    "name": "primaryPhotoExtras",
                    "type": "List",
                    "structure": {
                        "name": "photoId",
                        "type": "Select",
                        "options": [
                            "license",
                            "date_upload",
                            "date_taken",
                            "owner_name",
                            "icon_server",
                            "original_format",
                            "last_update",
                            "geo",
                            "tags",
                            "machine_tags",
                            "o_dims",
                            "views",
                            "media",
                            "path_alias",
                            "url_sq",
                            "url_t",
                            "url_s",
                            "url_m",
                            "url_o"
                        ],
                        "info": "Single photo extra"
                    },
                    "info": "Extra information to fetch for the primary photo.",
                    "required": false,
                    "vendorSchema": {
                        "name": "primary_photo_extras",
                        "format": "toString:{,}"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.photosets.getList",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "primary_photo_extras",
                            "photo_ids",
                            "per_page",
                            "page",
                            "user_id",
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getUserPhotosInPhotoset",
            "description": "Get the list of photos in a set.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true,
                    "vendorSchema": {
                        "name": "user_id"
                    }
                },
                {
                    "name": "photosetId",
                    "type": "String",
                    "info": "Id of the photoset",
                    "required": true,
                    "vendorSchema": {
                        "name": "photoset_id"
                    }
                },
                {
                    "name": "page",
                    "type": "Number",
                    "info": "Page number. Default is 0",
                    "required": false,
                    "vendorSchema": {
                        "name": "page"
                    }
                },
                {
                    "name": "perPage",
                    "type": "Number",
                    "info": "Number of items to return per page. Default is 10, maximum is 50",
                    "required": false,
                    "vendorSchema": {
                        "name": "per_page"
                    }
                },
                {
                    "name": "extras",
                    "type": "List",
                    "structure": {
                        "name": "photoId",
                        "type": "Select",
                        "options": [
                            "license",
                            "date_upload",
                            "date_taken",
                            "owner_name",
                            "icon_server",
                            "original_format",
                            "last_update",
                            "geo",
                            "tags",
                            "machine_tags",
                            "o_dims",
                            "views",
                            "media",
                            "path_alias",
                            "url_sq",
                            "url_t",
                            "url_s",
                            "url_m",
                            "url_o"
                        ],
                        "info": "Single photo extra"
                    },
                    "info": "Extra information to fetch for each returned record",
                    "required": false,
                    "vendorSchema": {
                        "name": "extras",
                        "format": "toString:{,}"
                    }
                },
                {
                    "name": "privacyFilter",
                    "type": "Select",
                    "options": [
                        1,
                        2,
                        3,
                        4,
                        5
                    ],
                    "info": "Return photos only matching a certain privacy level",
                    "required": false,
                    "vendorSchema": {
                        "name": "privacy_filter"
                    }
                },
                {
                    "name": "media",
                    "type": "Select",
                    "options": [
                        "all",
                        "photos",
                        "videos"
                    ],
                    "info": "Filter results by media type. Possible values are all (default), photos or videos",
                    "required": false
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.photosets.getPhotos",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "media",
                            "privacy_filter",
                            "extras",
                            "per_page",
                            "page",
                            "photoset_id",
                            "user_id",
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "orderSets",
            "description": "Set the order of photosets for the calling user.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "photosetIds",
                    "type": "List",
                    "structure": {
                        "name": "photosetId",
                        "type": "String",
                        "info": "Single photoset id"
                    },
                    "info": "List of photoset IDs, ordered with the set to show first, first in the list.",
                    "required": true,
                    "vendorSchema": {
                        "name": "photoset_ids",
                        "format": "toString:{,}"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.photosets.orderSets",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "photoset_ids",
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "removePhotoFromPhotoset",
            "description": "Remove a photo from a photoset.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "photosetId",
                    "type": "String",
                    "info": "Id of the photoset",
                    "required": true,
                    "vendorSchema": {
                        "name": "photoset_id"
                    }
                },
                {
                    "name": "photoId",
                    "type": "String",
                    "info": "Id of the photo",
                    "required": true,
                    "vendorSchema": {
                        "name": "photo_id"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "post",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.photosets.removePhoto",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "photo_id",
                            "photoset_id",
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "removePhotosFromPhotoset",
            "description": "Remove several photos from a photoset.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "photosetId",
                    "type": "String",
                    "info": "Id of the photoset",
                    "required": true,
                    "vendorSchema": {
                        "name": "photoset_id"
                    }
                },
                {
                    "name": "photoIds",
                    "type": "List",
                    "structure": {
                        "name": "photoId",
                        "type": "String",
                        "info": "Single photo id"
                    },
                    "info": "Photo ids to remove from the set",
                    "required": true,
                    "vendorSchema": {
                        "name": "photo_ids",
                        "format": "toString:{,}"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "post",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.photosets.removePhotos",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "photo_ids",
                            "photoset_id",
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "reorderPhotosInPhotoset",
            "description": "List of photo ids. Photos that are not in the list will keep their original order",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "photosetId",
                    "type": "String",
                    "info": "Id of the photoset",
                    "required": true,
                    "vendorSchema": {
                        "name": "photoset_id"
                    }
                },
                {
                    "name": "photoIds",
                    "type": "List",
                    "structure": {
                        "name": "photoId",
                        "type": "String",
                        "info": "Single photo id"
                    },
                    "info": "Photo ids to remove from the set",
                    "required": true,
                    "vendorSchema": {
                        "name": "photo_ids",
                        "format": "toString:{,}"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "post",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.photosets.reorderPhotos",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "photo_ids",
                            "photoset_id",
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "setPrimaryPhoto",
            "description": "Set photoset primary photo",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "photosetId",
                    "type": "String",
                    "info": "Id of the photoset",
                    "required": true,
                    "vendorSchema": {
                        "name": "photoset_id"
                    }
                },
                {
                    "name": "photoId",
                    "type": "String",
                    "info": "Id of the photo",
                    "required": true,
                    "vendorSchema": {
                        "name": "photo_id"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "post",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.photosets.setPrimaryPhoto",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "photo_id",
                            "photoset_id",
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "checkUploadTickets",
            "description": "Checks the status of one or more asynchronous photo upload tickets.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "tickets",
                    "type": "List",
                    "structure": {
                        "name": "ticket",
                        "type": "String",
                        "info": "Single ticket"
                    },
                    "info": "List of ticket ids",
                    "required": true,
                    "vendorSchema": {
                        "name": "tickets",
                        "format": "toString:{,}"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.photos.upload.checkTickets",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "tickets",
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "rotatePhoto",
            "description": "Rotate a photo.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "degrees",
                    "type": "Select",
                    "options": [
                        "90",
                        "180",
                        "270"
                    ],
                    "info": "Degrees to rotate",
                    "required": true
                },
                {
                    "name": "photoId",
                    "type": "String",
                    "info": "Id of the photo",
                    "required": true,
                    "vendorSchema": {
                        "name": "photo_id"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "post",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.photos.transform.rotate",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "photo_id",
                            "degrees",
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "approveSuggestion",
            "description": "Approve a suggestion for a photo.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "suggestionId",
                    "type": "String",
                    "info": "Id of the suggestion",
                    "required": true,
                    "vendorSchema": {
                        "name": "suggestion_id"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "post",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.photos.suggestions.approveSuggestion",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "suggestion_id",
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getSuggenstionsList",
            "description": "Return a list of suggestions for a user that are pending approval.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "statusId",
                    "type": "Select",
                    "options": [
                        "0",
                        "1",
                        "2"
                    ],
                    "info": "Only show suggestions with a given status.",
                    "required": true,
                    "vendorSchema": {
                        "name": "status_id"
                    }
                },
                {
                    "name": "photoId",
                    "type": "String",
                    "info": "Id of the photo",
                    "required": true,
                    "vendorSchema": {
                        "name": "photo_id"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.photos.suggestions.getList",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "photo_id",
                            "status_id",
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "rejectSuggestion",
            "description": "Reject a suggestion for a photo.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "suggestionId",
                    "type": "String",
                    "info": "Id of the suggestion",
                    "required": true,
                    "vendorSchema": {
                        "name": "suggestion_id"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "post",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.photos.suggestions.rejectSuggestion",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "suggestion_id",
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "removeSuggestion",
            "description": "Remove a suggestion for a photo.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "suggestionId",
                    "type": "String",
                    "info": "Id of the suggestion",
                    "required": true,
                    "vendorSchema": {
                        "name": "suggestion_id"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "post",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.photos.suggestions.removeSuggestion",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "suggestion_id",
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },

        {
            "name": "addPersonToPhoto",
            "description": "Add a person to a photo.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "photoId",
                    "type": "String",
                    "info": "Id of the photo",
                    "required": true,
                    "vendorSchema": {
                        "name": "photo_id"
                    }
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true,
                    "vendorSchema": {
                        "name": "user_id"
                    }
                },
                {
                    "name": "personX",
                    "type": "Number",
                    "info": "The left-most pixel co-ordinate of the box around the person.",
                    "required": false,
                    "vendorSchema": {
                        "name": "person_x"
                    }
                },
                {
                    "name": "personY",
                    "type": "Number",
                    "info": "The top-most pixel co-ordinate of the box around the person.",
                    "required": false,
                    "vendorSchema": {
                        "name": "person_y"
                    }
                },
                {
                    "name": "personW",
                    "type": "Number",
                    "info": "The width (in pixels) of the box around the person.",
                    "required": false,
                    "vendorSchema": {
                        "name": "person_w"
                    }
                },
                {
                    "name": "personH",
                    "type": "Number",
                    "info": "The height (in pixels) of the box around the person.",
                    "required": false,
                    "vendorSchema": {
                        "name": "person_h"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "post",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.photos.people.add",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "person_h",
                            "person_w",
                            "person_y",
                            "person_x",
                            "photo_id",
                            "user_id",
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "deletePersonFromPhoto",
            "description": "Delete a person from a photo.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "photoId",
                    "type": "String",
                    "info": "Id of the photo",
                    "required": true,
                    "vendorSchema": {
                        "name": "photo_id"
                    }
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true,
                    "vendorSchema": {
                        "name": "user_id"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "post",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.photos.people.delete",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "photo_id",
                            "user_id",
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "deletePersonCoordinatesFromPhoto",
            "description": "Remove the bounding box from a person in a photo",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "photoId",
                    "type": "String",
                    "info": "Id of the photo",
                    "required": true,
                    "vendorSchema": {
                        "name": "photo_id"
                    }
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true,
                    "vendorSchema": {
                        "name": "user_id"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "post",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.photos.people.deleteCoords",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "photo_id",
                            "user_id",
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "addPersonCoordinatesOnPhoto",
            "description": "Edit the bounding box of an existing person on a photo.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "photoId",
                    "type": "String",
                    "info": "Id of the photo",
                    "required": true,
                    "vendorSchema": {
                        "name": "photo_id"
                    }
                },
                {
                    "name": "userId",
                    "type": "String",
                    "info": "Id of the user",
                    "required": true,
                    "vendorSchema": {
                        "name": "user_id"
                    }
                },
                {
                    "name": "personX",
                    "type": "Number",
                    "info": "The left-most pixel co-ordinate of the box around the person.",
                    "required": true,
                    "vendorSchema": {
                        "name": "person_x"
                    }
                },
                {
                    "name": "personY",
                    "type": "Number",
                    "info": "The top-most pixel co-ordinate of the box around the person.",
                    "required": true,
                    "vendorSchema": {
                        "name": "person_y"
                    }
                },
                {
                    "name": "personW",
                    "type": "Number",
                    "info": "The width (in pixels) of the box around the person.",
                    "required": true,
                    "vendorSchema": {
                        "name": "person_w"
                    }
                },
                {
                    "name": "personH",
                    "type": "Number",
                    "info": "The height (in pixels) of the box around the person.",
                    "required": true,
                    "vendorSchema": {
                        "name": "person_h"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "post",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.photos.people.editCoords",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "person_h",
                            "person_w",
                            "person_y",
                            "person_x",
                            "photo_id",
                            "user_id",
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getPhotoPersons",
            "description": "Get a list of people in a given photo.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "photoId",
                    "type": "String",
                    "info": "Id of the photo",
                    "required": true,
                    "vendorSchema": {
                        "name": "photo_id"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.photos.people.getList",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "photo_id",
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "addNoteToPhoto",
            "description": "Add a note to a photo.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "photoId",
                    "type": "String",
                    "info": "Id of the photo",
                    "required": true,
                    "vendorSchema": {
                        "name": "photo_id"
                    }
                },
                {
                    "name": "noteText",
                    "type": "String",
                    "info": "Text of the note",
                    "required": true,
                    "vendorSchema": {
                        "name": "note_text"
                    }
                },
                {
                    "name": "noteX",
                    "type": "Number",
                    "info": "The left-most pixel co-ordinate of the box around the note.",
                    "required": true,
                    "vendorSchema": {
                        "name": "note_x"
                    }
                },
                {
                    "name": "noteY",
                    "type": "Number",
                    "info": "The top-most pixel co-ordinate of the box around the note.",
                    "required": true,
                    "vendorSchema": {
                        "name": "note_y"
                    }
                },
                {
                    "name": "noteW",
                    "type": "Number",
                    "info": "The width (in pixels) of the box around the note.",
                    "required": true,
                    "vendorSchema": {
                        "name": "note_w"
                    }
                },
                {
                    "name": "noteH",
                    "type": "Number",
                    "info": "The height (in pixels) of the box around the note.",
                    "required": true,
                    "vendorSchema": {
                        "name": "note_h"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "post",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.photos.notes.add",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "note_h",
                            "note_w",
                            "note_y",
                            "note_x",
                            "photo_id",
                            "note_text",
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "editNoteOnPhoto",
            "description": "Edit a note on a photo.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "noteId",
                    "type": "String",
                    "info": "Id of the note",
                    "required": true,
                    "vendorSchema": {
                        "name": "note_id"
                    }
                },
                {
                    "name": "noteText",
                    "type": "String",
                    "info": "Text of the note",
                    "required": true,
                    "vendorSchema": {
                        "name": "note_text"
                    }
                },
                {
                    "name": "noteX",
                    "type": "Number",
                    "info": "The left-most pixel co-ordinate of the box around the note.",
                    "required": true,
                    "vendorSchema": {
                        "name": "note_x"
                    }
                },
                {
                    "name": "noteY",
                    "type": "Number",
                    "info": "The top-most pixel co-ordinate of the box around the note.",
                    "required": true,
                    "vendorSchema": {
                        "name": "note_y"
                    }
                },
                {
                    "name": "noteW",
                    "type": "Number",
                    "info": "The width (in pixels) of the box around the note.",
                    "required": true,
                    "vendorSchema": {
                        "name": "note_w"
                    }
                },
                {
                    "name": "noteH",
                    "type": "Number",
                    "info": "The height (in pixels) of the box around the note.",
                    "required": true,
                    "vendorSchema": {
                        "name": "note_h"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "post",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.photos.notes.edit",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "note_id",
                            "note_h",
                            "note_w",
                            "note_y",
                            "note_x",
                            "note_text",
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "deleteNoteFromPhoto",
            "description": "Delete a note from a photo.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "noteId",
                    "type": "String",
                    "info": "Id of the note",
                    "required": true,
                    "vendorSchema": {
                        "name": "note_id"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "post",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.photos.notes.delete",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "note_id",
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "getPhotoLicenses",
            "description": "Fetches a list of available photo licenses for Flickr.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "get",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.photos.licenses.getInfo",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "setPhotoLicense",
            "description": "Sets the license for a photo.",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "photoId",
                    "type": "String",
                    "info": "Id of the photo",
                    "required": true,
                    "vendorSchema": {
                        "name": "photo_id"
                    }
                },
                {
                    "name": "licenseId",
                    "type": "String",
                    "info": "Id of the license",
                    "required": true,
                    "vendorSchema": {
                        "name": "license_id"
                    }
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/api.flickr.com\/services\/rest\/",
                "method": "post",
                "vendorFieldsStructure": [
                    {
                        "method": "flickr.photos.licenses.setLicense",
                        "format": "json",
                        "nojsoncallback": 1
                    }
                ],
                "requestParameters": [
                    {
                        "type": "query",
                        "parameters": [
                            "license_id",
                            "photo_id",
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        },
        {
            "name": "replacePhoto",
            "description": "Replace photo",
            "args": [
                {
                    "name": "apiKey",
                    "type": "credentials",
                    "info": "ApiKey of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_key"
                    }
                },
                {
                    "name": "apiSecret",
                    "type": "credentials",
                    "info": "ApiSecret of the your app.",
                    "required": true,
                    "vendorSchema": {
                        "name": "api_secret"
                    }
                },
                {
                    "name": "accessToken",
                    "type": "String",
                    "info": "accessToken from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_token"
                    }
                },
                {
                    "name": "accessSecret",
                    "type": "String",
                    "info": "accessSecret from the getAccessToken method.",
                    "required": true,
                    "vendorSchema": {
                        "name": "oauth_secret"
                    }
                },
                {
                    "name": "photoId",
                    "type": "String",
                    "info": "Id of the photo",
                    "required": true,
                    "vendorSchema": {
                        "name": "photo_id"
                    }
                },
                {
                    "name": "photo",
                    "type": "File",
                    "info": "New photo",
                    "required": true
                }
            ],
            "vendorRequest": {
                "url": "https:\/\/up.flickr.com\/services\/replace\/",
                "method": "post",
                "requestParameters": [
                    {
                        "type": "multipart",
                        "parameters": [
                            "photo",
                            "photo_id",
                            "method",
                            "format",
                            "api_key",
                            "oauth_token",
                            "oauth_secret",
                            "api_secret",
                            "nojsoncallback"
                        ]
                    }
                ],
                "headers": {
                    "apikey": "{$data['apiKey']}"
                }
            },
            "callbacks": [
                {
                    "name": "error",
                    "info": "Error"
                },
                {
                    "name": "success",
                    "info": "Success"
                }
            ]
        }
    ]
}